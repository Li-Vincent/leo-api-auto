{"version":3,"sources":["webpack:///./src/api/execution.js","webpack:///src/components/project/autoTest/TestSuiteList.vue","webpack:///./src/components/project/autoTest/TestSuiteList.vue?801a","webpack:///./src/components/project/autoTest/TestSuiteList.vue"],"names":["__webpack_exports__","params","headers","request","url","method","data","__WEBPACK_IMPORTED_MODULE_0__utils_axios__","__webpack_require__","TestSuiteList","name","downloadLink","downloadName","testSuites","filters","pageInfoIndex","size","skip","sortBy","order","currentPage","totalNum","listLoading","copyLoading","importLoading","exportLoading","hasSelected","selects","delLoading","statusChangeLoading","testEnvs","testEnv","titleMap","add","edit","dialogStatus","formVisible","editLoading","formRules","required","message","trigger","min","max","description","priority","service","sprint","storyId","testCaseId","form","initForm","priorityOptions","label","value","importExtraData","projectId","this","$route","project_id","user","$store","getters","email","methods","getTestSuiteList","queryTestSuites","self","trim","Object","testSuite","then","res","status","rows","$message","error","center","catch","handleSizeChange","val","dispatch","handleCurrentChange","handleDel","index","row","_this","$confirm","type","_id","isDeleted","success","sortChange","column","prop","handleChangeStatus","_this2","Content-Type","selectsChange","length","handleEdit","assign_default","handleAdd","submit","_this3","$refs","validate","valid","loading","Authorization","JSON","parse","sessionStorage","getItem","createUser","resetFields","_params","lastUpdateUser","copySuite","reportRowStyle","_ref","rowIndex","ReportTableRow","_ref2","getTestEnvList","_this4","envConfig","checkActiveTestEnv","warning","onTest","testSuiteIdList","map","item","testEnvId","executionUser","executionMode","execution","update","onBeforeUpload","file","fileSuffix","substring","lastIndexOf","onSuccessUpload","response","onProgressUpload","event","onErrorUpload","err","exportCases","_this5","asyncToGenerator_default","regenerator_default","a","mark","_callee","testSuiteIds","header","wrap","_context","prev","next","stringify_default","testCase","blob","Blob","window","URL","createObjectURL","moment_default","format","$nextTick","$el","querySelector","click","revokeObjectURL","console","log","stop","computed","getImportUrl","mounted","created","_this6","testSuitePageInfo","findIndex","ele","autoTest_TestSuiteList","render","_vm","_h","$createElement","_c","_self","staticClass","_v","_s","meta","title","staticStyle","padding-bottom","attrs","span","inline","model","nativeOn","$event","preventDefault","text-decoration","color","to","on","$router","back","margin-right","margin-left","effect","content","placement","action","before-upload","on-success","on-error","on-progress","show-file-list","with-credentials","disabled","float","placeholder","keyup","indexOf","_k","keyCode","key","callback","$$v","$set","expression","clearable","visible-change","_l","directives","rawName","width","row-style","row-class-name","highlight-current-row","sort-change","selection-change","min-width","sortable","show-overflow-tooltip","scopedSlots","_u","fn","scope","test_suite_id","showWarmPrompt","src","$index","current-page","page-sizes","page-size","layout","total","size-change","current-change","update:currentPage","update:current-page","_e","left","visible","close-on-click-modal","update:visible","ref","rules","label-width","auto-complete","slot","href","download","staticRenderFns","Component","normalizeComponent","ssrContext"],"mappings":"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","file":"static/js/6.47e9d0038a0b19c8bca1.js","sourcesContent":["import request from '../utils/axios'\n\nexport function startAPITestByCase(params, headers) {\n  return request({\n    url: `/api/startAPITestByCase`,\n    method: 'POST',\n    headers: headers,\n    data: params\n  })\n}\n\nexport function startAPITestBySuite(params, headers) {\n  return request({\n    url: `/api/startAPITestBySuite`,\n    method: 'POST',\n    headers: headers,\n    data: params\n  })\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/api/execution.js","<template>\n  <section>\n    <!--页面title-->\n    <strong class=\"title\">{{$route.meta.title}}</strong>\n    <!--工具条-->\n    <el-col :span=\"24\" class=\"toolbar\" style=\"padding-bottom: 0px\">\n      <el-form :inline=\"true\" :model=\"filters\" @submit.native.prevent>\n        <router-link to=\"\" style=\"text-decoration: none; color: aliceblue;\">\n          <el-button class=\"return-list\" @click=\"$router.back(-1)\">\n            <i class=\"el-icon-d-arrow-left\" style=\"margin-right: 5px\"></i>返回\n          </el-button>\n        </router-link>\n        <el-form-item style=\"margin-left: 50px;\">\n          <el-button type=\"primary\" class=\"el-icon-plus\" @click=\"handleAdd\">新增用例组</el-button>\n        </el-form-item>\n        <!--        case import-->\n        <el-form-item style=\"margin-left: 10px\">\n          <el-tooltip class=\"item\" effect=\"dark\" content=\"只接收 xls / xlsx 哦~\" placement=\"top-start\">\n            <el-upload\n              :action=\"getImportUrl\"\n              :before-upload=\"onBeforeUpload\"\n              :on-success=\"onSuccessUpload\"\n              :on-error=\"onErrorUpload\"\n              :on-progress=\"onProgressUpload\"\n              :show-file-list=\"false\"\n              :with-credentials=\"true\"\n              :data=\"importExtraData\"\n            >\n              <el-button class=\"el-icon-upload2\" :disabled=\"importLoading\" type=\"primary\"\n                         style=\"margin-left: 5px\">用例导入\n              </el-button>\n            </el-upload>\n          </el-tooltip>\n        </el-form-item>\n        <el-form-item style=\"margin-left: 5px\">\n          <el-tooltip class=\"item\" effect=\"dark\" content=\"导出格式是 xlsx 哦~\" placement=\"top-start\">\n            <el-button class=\"el-icon-download\" :loading=\"exportLoading\" :disabled=\"!hasSelected\"\n                       type=\"primary\"\n                       style=\"margin-right: 3px\" @click=\"exportCases\"> 用例导出\n            </el-button>\n          </el-tooltip>\n        </el-form-item>\n\n        <div style=\"float: right; margin-right: 20px\">\n          <el-form-item>\n            <el-input v-model.trim=\"filters.name\" placeholder=\"名称\" @keyup.enter.native=\"getTestSuiteList\"></el-input>\n          </el-form-item>\n          <el-form-item>\n            <el-button type=\"primary\" class=\"el-icon-search\" @click=\"getTestSuiteList\"> 查询</el-button>\n          </el-form-item>\n        </div>\n        <div style=\"float: right; margin-right: 30px\">\n          <el-select v-model=\"testEnv\" style=\"margin-right: 20px\" @visible-change='checkActiveTestEnv' clearable\n                     placeholder=\"测试环境\">\n            <el-option v-for=\"(item,index) in testEnvs\" :key=\"index+''\" :label=\"item.name\"\n                       :value=\"item._id\"></el-option>\n          </el-select>\n          <el-form-item>\n            <el-button type=\"primary\" class=\"el-icon-caret-right\" :disabled=\"!hasSelected\" @click=\"onTest\">执行测试\n            </el-button>\n          </el-form-item>\n        </div>\n      </el-form>\n    </el-col>\n    <!--用例组列表-->\n    <!--列表-->\n    <el-table @sort-change='sortChange' :data=\"testSuites\" :row-style=\"reportRowStyle\" :row-class-name=\"ReportTableRow\"\n              highlight-current-row v-loading=\"listLoading\" @selection-change=\"selectsChange\" style=\"width: 100%;\">\n      <el-table-column type=\"selection\" min-width=\"5%\">\n      </el-table-column>\n      <el-table-column sortable='custom' prop=\"name\" label=\"用例组名称\" min-width=\"40%\" show-overflow-tooltip>\n        <template slot-scope=\"scope\">\n          <router-link :to=\"{ name: 'TestCaseList', params: {\n                        test_suite_id: scope.row._id,\n                        showWarmPrompt: true}}\" style='text-decoration: none;'>\n            {{ scope.row.name }}\n          </router-link>\n        </template>\n      </el-table-column>\n      <el-table-column sortable='custom' prop=\"priority\" label=\"优先级\" min-width=\"10%\" show-overflow-tooltip>\n      </el-table-column>\n      <el-table-column prop=\"description\" label=\"描述\" min-width=\"20%\" show-overflow-tooltip>\n      </el-table-column>\n      <el-table-column prop=\"service\" label=\"服务\" min-width=\"10%\" show-overflow-tooltip>\n      </el-table-column>\n      <el-table-column prop=\"sprint\" label=\"Sprint\" min-width=\"10%\" show-overflow-tooltip>\n      </el-table-column>\n      <el-table-column prop=\"storyId\" label=\"StoryID\" min-width=\"10%\" show-overflow-tooltip>\n      </el-table-column>\n      <el-table-column prop=\"testCaseId\" label=\"TestCaseID\" min-width=\"10%\" show-overflow-tooltip>\n      </el-table-column>\n      <el-table-column sortable='custom' prop=\"createAt\" label=\"创建时间\" min-width=\"15%\" show-overflow-tooltip>\n      </el-table-column>\n      <el-table-column sortable='custom' prop=\"createUser\" label=\"创建者\" min-width=\"15%\" show-overflow-tooltip>\n      </el-table-column>\n      <el-table-column prop=\"status\" label=\"状态\" min-width=\"10%\" sortable='custom'>\n        <template slot-scope=\"scope\">\n          <img v-show=\"scope.row.status\" src=\"../../../assets/imgs/icon-yes.svg\"/>\n          <img v-show=\"!scope.row.status\" src=\"../../../assets/imgs/icon-no.svg\"/>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"操作\" min-width=\"40%\">\n        <template slot-scope=\"scope\">\n          <el-button type=\"primary\" size=\"small\" @click=\"handleEdit(scope.$index, scope.row)\">编辑</el-button>\n          <el-button class=\"copyBtn\" size=\"small\" :loading=\"copyLoading\" @click=\"copySuite(scope.$index, scope.row)\">复制\n          </el-button>\n          <el-button type=\"info\" size=\"small\" :loading=\"statusChangeLoading\"\n                     @click=\"handleChangeStatus(scope.$index, scope.row)\">\n            {{scope.row.status===false?'启用':'禁用'}}\n          </el-button>\n          <el-button type=\"danger\" size=\"small\" @click=\"handleDel(scope.$index, scope.row)\">删除</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <!--翻页工具条-->\n    <el-col :span=\"24\" class=\"toolbar\">\n      <el-pagination\n        style=\"float: right\"\n        @size-change=\"handleSizeChange\"\n        @current-change=\"handleCurrentChange\"\n        :current-page.sync=\"currentPage\"\n        v-if=\"totalNum != 0\"\n        :page-sizes=\"[10, 20, 40]\"\n        :page-size=\"size\"\n        layout=\"total, sizes, prev, pager, next, jumper\"\n        :total=\"totalNum\">\n      </el-pagination>\n    </el-col>\n\n    <el-dialog :title=\"titleMap[dialogStatus]\" :visible.sync=\"formVisible\" :close-on-click-modal=\"false\"\n               style=\"width: 65%; left: 17.5%\">\n      <el-form :model=\"form\" :rules=\"formRules\" ref=\"form\" label-width=\"80px\">\n        <el-form-item label=\"名称\" prop=\"name\">\n          <el-input v-model=\"form.name\" auto-complete=\"off\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"描述\" prop='description'>\n          <el-input type=\"textarea\" :rows=\"4\" v-model=\"form.description\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"优先级\" prop=\"priority\">\n          <el-select v-model=\"form.priority\" placeholder=\"请选择\">\n            <el-option v-for=\"item in priorityOptions\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\">\n            </el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"所属服务\" prop=\"service\">\n          <el-input v-model.trim=\"form.service\" auto-complete=\"off\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"Sprint\" prop=\"sprint\">\n          <el-input v-model.trim=\"form.sprint\" auto-complete=\"off\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"storyId\" prop=\"storyId\">\n          <el-input v-model.trim=\"form.storyId\" auto-complete=\"off\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"testCaseId\" prop=\"testCaseId\">\n          <el-input v-model.trim=\"form.testCaseId\" auto-complete=\"off\"></el-input>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click.native=\"formVisible = false\">取消</el-button>\n        <el-button type=\"primary\" @click.native=\"submit\" :loading=\"editLoading\">提交</el-button>\n      </div>\n    </el-dialog>\n\n    <!--    for export case download-->\n    <a class=\"js-download-doc\" :href=\"downloadLink\" :download=\"downloadName\" v-show=\"false\"/>\n  </section>\n</template>\n\n<script>\n    import {addTestSuite, copyTestSuite, getTestSuites, updateTestSuite} from \"../../../api/testSuite\";\n    import {getEnvConfigs} from \"../../../api/envConfig\";\n    import {startAPITestBySuite} from \"../../../api/execution\";\n    import {exportTestCases} from '../../../api/testCase';\n    import moment from \"moment\";\n\n    export default {\n        name: \"TestSuiteList\",\n        data() {\n            return {\n                downloadLink: '',\n                downloadName: '',\n                testSuites: [],\n                filters: {\n                    name: \"\"\n                },\n                pageInfoIndex: -1,\n                size: 10,\n                skip: 0,\n                sortBy: 'createAt',\n                order: 'descending',\n                currentPage: 1,\n                totalNum: 0,\n                listLoading: false,\n                copyLoading: false,\n                importLoading: false,\n                exportLoading: false,\n                hasSelected: false,\n                selects: [],//列表选中列\n                delLoading: false,\n                statusChangeLoading: false,\n                testEnvs: [],\n                testEnv: '',\n                titleMap: {\n                    add: '新增',\n                    edit: '编辑'\n                },\n                dialogStatus: '',\n                formVisible: false,//编辑界面是否显示\n                editLoading: false,\n                formRules: {\n                    name: [\n                        {required: true, message: '请输入名称', trigger: 'blur'},\n                        {min: 1, max: 100, message: '长度在 1 到 100 个字符', trigger: 'blur'}\n                    ],\n                    description: [\n                        {required: false, message: '请输入描述', trigger: 'blur'},\n                        {max: 1024, message: '不能超过1024个字符', trigger: 'blur'}\n                    ],\n                    priority: [\n                        {required: true, message: '请输入优先级，P1 or P2', trigger: 'blur'},\n                        {min: 2, max: 2, message: '请输入 P1 or P2', trigger: 'blur'}\n                    ],\n                    service: [\n                        {required: false, message: '请输入服务', trigger: 'blur'},\n                        {max: 30, message: '所属服务', trigger: 'blur'}\n                    ],\n                    sprint: [\n                        {required: false, message: '请输入Sprint', trigger: 'blur'},\n                        {max: 30, message: '用例所属Sprint，30字符以内', trigger: 'blur'}\n                    ],\n                    storyId: [\n                        {required: false, message: '请输入Story ID', trigger: 'blur'},\n                        {max: 30, message: '用例story ID，30字符以内', trigger: 'blur'}\n                    ],\n                    testCaseId: [\n                        {required: false, message: '请输入Test Case ID', trigger: 'blur'},\n                        {max: 30, message: '用例Test Case ID，30字符以内', trigger: 'blur'}\n                    ]\n                },\n                //编辑界面数据\n                form: {\n                    name: '',\n                    description: ''\n                },\n                initForm: {\n                    name: '',\n                    description: '',\n                    priority: 'P1'\n                },\n                priorityOptions: [{label: \"P1\", value: \"P1\"},\n                    {label: \"P2\", value: \"P2\"}],\n                // For import cases.\n                importExtraData: {\n                    projectId: this.$route.params.project_id,\n                    user: this.$store.getters.email || '未知anonymous'\n                }\n            }\n        },\n        methods: {\n            // 获取用例组列表\n            getTestSuiteList() {\n                let self = this;\n                let params = {\n                    skip: self.skip, size: self.size, sortBy: self.sortBy, order: self.order,\n                    projectId: self.$route.params.project_id\n                }\n                this.queryTestSuites(params);\n            },\n            queryTestSuites(params) {\n                this.listLoading = true;\n                let self = this;\n                if (self.filters.name.trim() !== '') {\n                    params['name'] = self.filters.name.trim()\n                }\n                let header = {};\n                getTestSuites(self.$route.params.project_id, params, header).then((res) => {\n                    self.listLoading = false;\n                    let {status, data} = res;\n                    if (status === 'ok') {\n                        self.testSuites = data.rows;\n                        self.totalNum = data.totalNum;\n                    } else {\n                        self.$message.error({\n                            message: data,\n                            center: true,\n                        })\n                    }\n                }).catch((error) => {\n                    self.$message.error({\n                        message: '用例列表获取失败，请稍后刷新重试哦~',\n                        center: true,\n                    });\n                    self.listLoading = false;\n                })\n            },\n            handleSizeChange(val) {\n                let self = this;\n                self.$store.dispatch('pageInfo/setTestSuitePageInfo', {\n                    size: val,\n                    projectId: self.$route.params.project_id\n                })\n                self.size = val\n                self.listLoading = true;\n                let params = {\n                    skip: self.skip, size: self.size, sortBy: self.sortBy, order: self.order,\n                    projectId: self.$route.params.project_id\n                };\n                this.queryTestSuites(params);\n            },\n            handleCurrentChange(val) {\n                let self = this;\n                self.listLoading = true;\n                self.$store.dispatch('pageInfo/setTestSuitePageInfo', {\n                    skip: (val - 1) * self.size,\n                    currentPage: val,\n                    projectId: self.$route.params.project_id\n                })\n                self.skip = (val - 1) * self.size\n                let params = {\n                    skip: self.skip, size: self.size, sortBy: self.sortBy, order: self.order,\n                    projectId: self.$route.params.project_id\n                };\n                this.queryTestSuites(params);\n            },\n            //删除\n            handleDel: function (index, row) {\n                this.$confirm('确认删除该记录吗?', '提示', {\n                    type: 'warning'\n                }).then((res) => {\n                    this.editLoading = true;\n                    //NProgress.start();\n                    let self = this;\n                    let header = {};\n                    let params = {\"isDeleted\": true}\n                    updateTestSuite(self.$route.params.project_id, row._id, params, header).then((res) => {\n                        self.editLoading = false;\n                        let {status, data} = res;\n                        if (status === 'ok') {\n                            self.$message.success({\n                                message: '删除成功',\n                                center: true,\n                            });\n                            self.getTestSuiteList();\n                        } else {\n                            self.$message.error({\n                                message: data,\n                                center: true,\n                            })\n                            self.getTestSuiteList()\n                        }\n                    }).catch(() => {\n                        self.$message.error({\n                            message: '删除用例失败,请稍后重试哦',\n                            center: true\n                        })\n                        self.editLoading = false;\n                    });\n                })\n            },\n            //排序\n            sortChange(column) {\n                let self = this;\n                self.sortBy = column.prop;\n                self.order = column.order;\n                let params = {\n                    skip: self.skip, size: self.size, sortBy: self.sortBy, order: self.order,\n                    projectId: self.$route.params.project_id\n                };\n                this.queryTestSuites(params);\n            },\n            handleChangeStatus: function (index, row) {\n                let self = this;\n                self.statusChangeLoading = true;\n                let status = !row.status;\n                let params = {\n                    'status': status\n                };\n                let headers = {\n                    \"Content-Type\": \"application/json\",\n                };\n                updateTestSuite(this.$route.params.project_id, row._id, params, headers).then(res => {\n                    let {status, data} = res;\n                    self.statusChangeLoading = false;\n                    if (status === 'ok') {\n                        self.$message({\n                            message: '状态变更成功',\n                            center: true,\n                            type: 'success'\n                        });\n                        row.status = !row.status;\n                    } else {\n                        self.$message.error({\n                            message: data,\n                            center: true,\n                        })\n                    }\n                    self.getTestSuiteList()\n                }).catch(() => {\n                    self.$message.error({\n                        message: '用例组状态更新失败,请稍后重试哦',\n                        center: true\n                    })\n                    self.statusChangeLoading = false;\n                    this.getTestSuiteList()\n                });\n            },\n            selectsChange: function (selects) {\n                if (selects.length > 0) {\n                    this.selects = selects;\n                    this.hasSelected = true\n                } else {\n                    this.hasSelected = false\n                }\n            },\n            //显示编辑界面\n            handleEdit: function (index, row) {\n                this.formVisible = true;\n                this.form = Object.assign({}, this.form, row);\n                this.dialogStatus = 'edit';\n            },\n            //显示新增界面\n            handleAdd: function () {\n                this.formVisible = true;\n                this.form = Object.assign({}, this.form, this.initForm);\n                this.dialogStatus = 'add';\n            },\n            //提交修改\n            submit: function () {\n                let self = this;\n                this.$refs.form.validate((valid) => {\n                    if (valid) {\n                        this.$confirm('确认提交吗？', '提示', {}).then(() => {\n                            self.loading = true;\n                            //NProgress.start();\n                            let headers = {\n                                \"Content-Type\": \"application/json\",\n                                Authorization: 'Token ' + JSON.parse(sessionStorage.getItem('token'))\n                            };\n                            if (this.dialogStatus == 'add') {\n                                let params = {\n                                    name: self.form.name.trim(),\n                                    priority: self.form.priority.trim(),\n                                    service: self.form.service,\n                                    sprint: self.form.sprint,\n                                    storyId: self.form.storyId,\n                                    testCaseId: self.form.testCaseId,\n                                    createUser: self.$store.getters.email || '未知anonymous'\n                                };\n                                if (self.form.description) {\n                                    params['description'] = self.form.description.trim();\n                                }\n                                addTestSuite(this.$route.params.project_id, params, headers).then((res) => {\n                                    let {status, data} = res;\n                                    self.loading = false;\n                                    if (status === 'ok') {\n                                        self.$message({\n                                            message: '添加成功',\n                                            center: true,\n                                            type: 'success'\n                                        });\n                                        self.$refs['form'].resetFields();\n                                        self.formVisible = false;\n                                        self.getTestSuiteList()\n                                    } else {\n                                        self.$message.error({\n                                            message: data,\n                                            center: true,\n                                        });\n                                        self.$refs['form'].resetFields();\n                                        self.formVisible = false;\n                                        self.getTestSuiteList()\n                                    }\n                                })\n                            } else if (this.dialogStatus == 'edit') {\n                                let params = {\n                                    project_id: this.$route.params.project_id,\n                                    name: self.form.name.trim(),\n                                    priority: self.form.priority.trim(),\n                                    service: self.form.service,\n                                    sprint: self.form.sprint,\n                                    storyId: self.form.storyId,\n                                    testCaseId: self.form.testCaseId,\n                                    description: self.form.description.trim(),\n                                    lastUpdateUser: self.$store.getters.email || '未知anonymous'\n                                };\n                                updateTestSuite(this.$route.params.project_id, self.form._id, params, headers).then(res => {\n                                    let {status, data} = res;\n                                    self.loading = false;\n                                    if (status === 'ok') {\n                                        self.$message({\n                                            message: '修改成功',\n                                            center: true,\n                                            type: 'success'\n                                        });\n                                        self.$refs['form'].resetFields();\n                                        self.formVisible = false;\n                                        self.getTestSuiteList()\n                                    } else {\n                                        self.$message.error({\n                                            message: data,\n                                            center: true,\n                                        })\n                                        self.getTestSuiteList()\n                                    }\n                                })\n                            } else {\n                                self.$message.error({\n                                    message: \"系统出错\",\n                                    center: true,\n                                });\n                                self.getTestSuiteList()\n                            }\n                        });\n                    }\n                });\n            },\n            copySuite(index, row) {\n                let self = this;\n                this.$confirm('确认复制吗？', '提示', {}).then(() => {\n                    self.copyLoading = true;\n                    let header = {\"Content-Type\": \"application/json\"};\n                    let params = {\n                        createUser: self.$store.getters.email || '未知anonymous'\n                    };\n                    copyTestSuite(self.$route.params.project_id, row._id, params, header).then((res) => {\n                        self.copyLoading = false;\n                        let {status, data} = res;\n                        if (status === 'ok') {\n                            self.$message.success({\n                                message: data,\n                                center: true,\n                            })\n                        } else {\n                            self.$message.error({\n                                message: data,\n                                center: true,\n                            })\n                        }\n                        self.getTestSuiteList()\n                    }).catch((error) => {\n                        self.$message.error({\n                            message: '用例组复制失败，请稍后重试哦~',\n                            center: true,\n                        });\n                        self.copyLoading = false;\n                    })\n                });\n            },\n            // 修改table tr行的背景色\n            reportRowStyle({row, rowIndex}) {\n                if (!(row.status === true))\n                    return 'background-color: #DDDDDD'\n                else {\n                    return ''\n                }\n            },\n            ReportTableRow({row, rowIndex}) {\n                return 'reportTableRow';\n            },\n            getTestEnvList() {\n                let self = this;\n                let header = {};\n                let params = {status: true};\n                getEnvConfigs(params, header).then((res) => {\n                    let {status, data} = res\n                    if (status === 'ok') {\n                        this.testEnvs = data.rows\n                    } else {\n                        self.$message.error({\n                            message: data,\n                            center: true,\n                        })\n                    }\n                }).catch((error) => {\n                    self.$message.error({\n                        message: '暂时无法获取环境列表，请稍后刷新重试~',\n                        center: true,\n                    });\n                })\n            },\n            checkActiveTestEnv: function () {\n                let self = this;\n                if (self.testEnvs.length < 1) {\n                    self.$message.warning({\n                        message: '未找到「启用的测试环境」哦, 请前往「环境配置」进行设置',\n                        center: true,\n                    })\n                }\n            },\n            onTest() {\n                let self = this;\n                if (self.testEnv) {\n                    self.listLoading = true;\n                    let suiteIds = self.selects.map(item => item._id);\n                    let headers = {\n                        \"Content-Type\": \"application/json\",\n                    };\n                    let params = {\n                        testSuiteIdList: suiteIds,\n                        testEnvId: self.testEnv,\n                        projectId: self.$route.params.project_id,\n                        executionUser: self.$store.getters.email,\n                        executionMode: 'manual'\n                    };\n                    startAPITestBySuite(params, headers).then((res) => {\n                        self.listLoading = false;\n                        let {status, data} = res;\n                        if (status === 'ok') {\n                            self.$message.success({\n                                message: data,\n                                center: true,\n                            });\n                        } else {\n                            self.$message.warning({\n                                message: data,\n                                center: true\n                            });\n                        }\n                        self.getTestSuiteList();\n                    }).catch((error) => {\n                        self.$message.error({\n                            message: '用例执行异常/超时，请稍后重试哦~',\n                            center: true,\n                        });\n                        self.listLoading = false;\n                        self.update = false;\n                    })\n                } else {\n                    this.$message({\n                        message: '请选择「测试环境」, 在「执行测试」按钮右边哦~',\n                        center: true,\n                        type: 'warning'\n                    })\n                }\n            },\n\n            // For Import Test Cases\n            onBeforeUpload(file) {\n                let fileSuffix = file.name.substring(file.name.lastIndexOf(\".\") + 1)\n                if (fileSuffix === 'xls' || fileSuffix === 'xlsx') {\n                    return file\n                } else {\n                    this.$message.warning('只接收 .xls / .xlsx 文件哦 ~ ')\n                    return false\n                }\n            },\n            onSuccessUpload(response) {\n                let {status, data} = response\n                if (status === 'ok') {\n                    this.$message.success(data)\n                } else {\n                    this.$message.error(data)\n                }\n                this.getTestSuiteList()\n                this.importLoading = false\n            },\n            onProgressUpload(event) {\n                this.importLoading = true\n            },\n            onErrorUpload(err) {\n                this.importLoading = false\n                this.$message.error(err)\n            },\n\n            // For Export Test Case\n            async exportCases() {\n                let self = this;\n                self.exportLoading = true;\n                let testSuiteIds = self.selects.map(item => item._id);\n                let header = {\n                    \"Content-Type\": \"application/json\"\n                };\n                let params = JSON.stringify({\n                    \"testSuiteIds\": testSuiteIds\n                });\n                exportTestCases(params, header).then((res) => {\n                    const blob = new Blob([res])\n                    self.downloadLink = window.URL.createObjectURL(blob)\n                    self.downloadName = `测试用例_${moment().format('YYYY-MM-DD_HH-mm-ss')}.xlsx`\n                    self.$nextTick(() => {\n                        self.$el.querySelector('.js-download-doc').click()\n                        window.URL.revokeObjectURL(this.downloadLink)\n                        self.exportLoading = false;\n                        self.$message.success({\n                            message: '用例导出成功',\n                            center: true,\n                        });\n                    })\n                }).catch((error) => {\n                    console.log(\"Export Cases error:\", error)\n                    self.$message.error({\n                        message: '用例导出失败，请稍后重试哦~',\n                        center: true,\n                    });\n                    self.exportLoading = false;\n                })\n            },\n        },\n        computed: {\n            getImportUrl() {\n                return `${process.env.CASE_IMPORT_URI}`\n            }\n        },\n        mounted() {\n            this.getTestEnvList();\n            this.getTestSuiteList();\n        },\n        created() {\n            this.pageInfoIndex = this.$store.getters.testSuitePageInfo.findIndex(ele => ele.projectId === this.$route.params.project_id)\n            this.size = this.pageInfoIndex === -1 ?\n                10 : (this.$store.getters.testSuitePageInfo[this.pageInfoIndex]\n                && this.$store.getters.testSuitePageInfo[this.pageInfoIndex].size) || 10\n            this.skip = this.pageInfoIndex === -1 ?\n                0 : (this.$store.getters.testSuitePageInfo[this.pageInfoIndex]\n                && this.$store.getters.testSuitePageInfo[this.pageInfoIndex].skip) || 0\n            this.sortBy = this.pageInfoIndex === -1 ?\n                'createAt' : (this.$store.getters.testSuitePageInfo[this.pageInfoIndex]\n                && this.$store.getters.testSuitePageInfo[this.pageInfoIndex].sortBy) || 'createAt'\n            this.order = this.pageInfoIndex === -1 ?\n                'descending' : (this.$store.getters.testSuitePageInfo[this.pageInfoIndex]\n                && this.$store.getters.testSuitePageInfo[this.pageInfoIndex].order) || 'descending'\n            this.currentPage = this.pageInfoIndex === -1 ?\n                1 : (this.$store.getters.testSuitePageInfo[this.pageInfoIndex]\n                && this.$store.getters.testSuitePageInfo[this.pageInfoIndex].currentPage) || 1\n        }\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n  .title {\n    width: 200px;\n    float: left;\n    color: #475669;\n    font-size: 25px;\n    margin: 10px 5px;\n    font-family: Arial;\n  }\n\n  .return-list {\n    margin-top: 0px;\n    margin-bottom: 10px;\n    margin-left: 20px;\n    border-radius: 25px;\n  }\n\n  .copyBtn {\n    color: #fff;\n    background-color: #33CC00;\n    border-color: #33CC00;\n  }\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/project/autoTest/TestSuiteList.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',[_c('strong',{staticClass:\"title\"},[_vm._v(_vm._s(_vm.$route.meta.title))]),_vm._v(\" \"),_c('el-col',{staticClass:\"toolbar\",staticStyle:{\"padding-bottom\":\"0px\"},attrs:{\"span\":24}},[_c('el-form',{attrs:{\"inline\":true,\"model\":_vm.filters},nativeOn:{\"submit\":function($event){$event.preventDefault();}}},[_c('router-link',{staticStyle:{\"text-decoration\":\"none\",\"color\":\"aliceblue\"},attrs:{\"to\":\"\"}},[_c('el-button',{staticClass:\"return-list\",on:{\"click\":function($event){return _vm.$router.back(-1)}}},[_c('i',{staticClass:\"el-icon-d-arrow-left\",staticStyle:{\"margin-right\":\"5px\"}}),_vm._v(\"返回\\n        \")])],1),_vm._v(\" \"),_c('el-form-item',{staticStyle:{\"margin-left\":\"50px\"}},[_c('el-button',{staticClass:\"el-icon-plus\",attrs:{\"type\":\"primary\"},on:{\"click\":_vm.handleAdd}},[_vm._v(\"新增用例组\")])],1),_vm._v(\" \"),_c('el-form-item',{staticStyle:{\"margin-left\":\"10px\"}},[_c('el-tooltip',{staticClass:\"item\",attrs:{\"effect\":\"dark\",\"content\":\"只接收 xls / xlsx 哦~\",\"placement\":\"top-start\"}},[_c('el-upload',{attrs:{\"action\":_vm.getImportUrl,\"before-upload\":_vm.onBeforeUpload,\"on-success\":_vm.onSuccessUpload,\"on-error\":_vm.onErrorUpload,\"on-progress\":_vm.onProgressUpload,\"show-file-list\":false,\"with-credentials\":true,\"data\":_vm.importExtraData}},[_c('el-button',{staticClass:\"el-icon-upload2\",staticStyle:{\"margin-left\":\"5px\"},attrs:{\"disabled\":_vm.importLoading,\"type\":\"primary\"}},[_vm._v(\"用例导入\\n            \")])],1)],1)],1),_vm._v(\" \"),_c('el-form-item',{staticStyle:{\"margin-left\":\"5px\"}},[_c('el-tooltip',{staticClass:\"item\",attrs:{\"effect\":\"dark\",\"content\":\"导出格式是 xlsx 哦~\",\"placement\":\"top-start\"}},[_c('el-button',{staticClass:\"el-icon-download\",staticStyle:{\"margin-right\":\"3px\"},attrs:{\"loading\":_vm.exportLoading,\"disabled\":!_vm.hasSelected,\"type\":\"primary\"},on:{\"click\":_vm.exportCases}},[_vm._v(\" 用例导出\\n          \")])],1)],1),_vm._v(\" \"),_c('div',{staticStyle:{\"float\":\"right\",\"margin-right\":\"20px\"}},[_c('el-form-item',[_c('el-input',{attrs:{\"placeholder\":\"名称\"},nativeOn:{\"keyup\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\")){ return null; }return _vm.getTestSuiteList($event)}},model:{value:(_vm.filters.name),callback:function ($$v) {_vm.$set(_vm.filters, \"name\", (typeof $$v === 'string'? $$v.trim(): $$v))},expression:\"filters.name\"}})],1),_vm._v(\" \"),_c('el-form-item',[_c('el-button',{staticClass:\"el-icon-search\",attrs:{\"type\":\"primary\"},on:{\"click\":_vm.getTestSuiteList}},[_vm._v(\" 查询\")])],1)],1),_vm._v(\" \"),_c('div',{staticStyle:{\"float\":\"right\",\"margin-right\":\"30px\"}},[_c('el-select',{staticStyle:{\"margin-right\":\"20px\"},attrs:{\"clearable\":\"\",\"placeholder\":\"测试环境\"},on:{\"visible-change\":_vm.checkActiveTestEnv},model:{value:(_vm.testEnv),callback:function ($$v) {_vm.testEnv=$$v},expression:\"testEnv\"}},_vm._l((_vm.testEnvs),function(item,index){return _c('el-option',{key:index+'',attrs:{\"label\":item.name,\"value\":item._id}})}),1),_vm._v(\" \"),_c('el-form-item',[_c('el-button',{staticClass:\"el-icon-caret-right\",attrs:{\"type\":\"primary\",\"disabled\":!_vm.hasSelected},on:{\"click\":_vm.onTest}},[_vm._v(\"执行测试\\n          \")])],1)],1)],1)],1),_vm._v(\" \"),_c('el-table',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.listLoading),expression:\"listLoading\"}],staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.testSuites,\"row-style\":_vm.reportRowStyle,\"row-class-name\":_vm.ReportTableRow,\"highlight-current-row\":\"\"},on:{\"sort-change\":_vm.sortChange,\"selection-change\":_vm.selectsChange}},[_c('el-table-column',{attrs:{\"type\":\"selection\",\"min-width\":\"5%\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"sortable\":\"custom\",\"prop\":\"name\",\"label\":\"用例组名称\",\"min-width\":\"40%\",\"show-overflow-tooltip\":\"\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('router-link',{staticStyle:{\"text-decoration\":\"none\"},attrs:{\"to\":{ name: 'TestCaseList', params: {\n                      test_suite_id: scope.row._id,\n                      showWarmPrompt: true}}}},[_vm._v(\"\\n          \"+_vm._s(scope.row.name)+\"\\n        \")])]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"sortable\":\"custom\",\"prop\":\"priority\",\"label\":\"优先级\",\"min-width\":\"10%\",\"show-overflow-tooltip\":\"\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"description\",\"label\":\"描述\",\"min-width\":\"20%\",\"show-overflow-tooltip\":\"\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"service\",\"label\":\"服务\",\"min-width\":\"10%\",\"show-overflow-tooltip\":\"\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"sprint\",\"label\":\"Sprint\",\"min-width\":\"10%\",\"show-overflow-tooltip\":\"\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"storyId\",\"label\":\"StoryID\",\"min-width\":\"10%\",\"show-overflow-tooltip\":\"\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"testCaseId\",\"label\":\"TestCaseID\",\"min-width\":\"10%\",\"show-overflow-tooltip\":\"\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"sortable\":\"custom\",\"prop\":\"createAt\",\"label\":\"创建时间\",\"min-width\":\"15%\",\"show-overflow-tooltip\":\"\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"sortable\":\"custom\",\"prop\":\"createUser\",\"label\":\"创建者\",\"min-width\":\"15%\",\"show-overflow-tooltip\":\"\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"status\",\"label\":\"状态\",\"min-width\":\"10%\",\"sortable\":\"custom\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('img',{directives:[{name:\"show\",rawName:\"v-show\",value:(scope.row.status),expression:\"scope.row.status\"}],attrs:{\"src\":require(\"../../../assets/imgs/icon-yes.svg\")}}),_vm._v(\" \"),_c('img',{directives:[{name:\"show\",rawName:\"v-show\",value:(!scope.row.status),expression:\"!scope.row.status\"}],attrs:{\"src\":require(\"../../../assets/imgs/icon-no.svg\")}})]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"操作\",\"min-width\":\"40%\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"small\"},on:{\"click\":function($event){return _vm.handleEdit(scope.$index, scope.row)}}},[_vm._v(\"编辑\")]),_vm._v(\" \"),_c('el-button',{staticClass:\"copyBtn\",attrs:{\"size\":\"small\",\"loading\":_vm.copyLoading},on:{\"click\":function($event){return _vm.copySuite(scope.$index, scope.row)}}},[_vm._v(\"复制\\n        \")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"info\",\"size\":\"small\",\"loading\":_vm.statusChangeLoading},on:{\"click\":function($event){return _vm.handleChangeStatus(scope.$index, scope.row)}}},[_vm._v(\"\\n          \"+_vm._s(scope.row.status===false?'启用':'禁用')+\"\\n        \")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"danger\",\"size\":\"small\"},on:{\"click\":function($event){return _vm.handleDel(scope.$index, scope.row)}}},[_vm._v(\"删除\")])]}}])})],1),_vm._v(\" \"),_c('el-col',{staticClass:\"toolbar\",attrs:{\"span\":24}},[(_vm.totalNum != 0)?_c('el-pagination',{staticStyle:{\"float\":\"right\"},attrs:{\"current-page\":_vm.currentPage,\"page-sizes\":[10, 20, 40],\"page-size\":_vm.size,\"layout\":\"total, sizes, prev, pager, next, jumper\",\"total\":_vm.totalNum},on:{\"size-change\":_vm.handleSizeChange,\"current-change\":_vm.handleCurrentChange,\"update:currentPage\":function($event){_vm.currentPage=$event},\"update:current-page\":function($event){_vm.currentPage=$event}}}):_vm._e()],1),_vm._v(\" \"),_c('el-dialog',{staticStyle:{\"width\":\"65%\",\"left\":\"17.5%\"},attrs:{\"title\":_vm.titleMap[_vm.dialogStatus],\"visible\":_vm.formVisible,\"close-on-click-modal\":false},on:{\"update:visible\":function($event){_vm.formVisible=$event}}},[_c('el-form',{ref:\"form\",attrs:{\"model\":_vm.form,\"rules\":_vm.formRules,\"label-width\":\"80px\"}},[_c('el-form-item',{attrs:{\"label\":\"名称\",\"prop\":\"name\"}},[_c('el-input',{attrs:{\"auto-complete\":\"off\"},model:{value:(_vm.form.name),callback:function ($$v) {_vm.$set(_vm.form, \"name\", $$v)},expression:\"form.name\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"描述\",\"prop\":\"description\"}},[_c('el-input',{attrs:{\"type\":\"textarea\",\"rows\":4},model:{value:(_vm.form.description),callback:function ($$v) {_vm.$set(_vm.form, \"description\", $$v)},expression:\"form.description\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"优先级\",\"prop\":\"priority\"}},[_c('el-select',{attrs:{\"placeholder\":\"请选择\"},model:{value:(_vm.form.priority),callback:function ($$v) {_vm.$set(_vm.form, \"priority\", $$v)},expression:\"form.priority\"}},_vm._l((_vm.priorityOptions),function(item){return _c('el-option',{key:item.value,attrs:{\"label\":item.label,\"value\":item.value}})}),1)],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"所属服务\",\"prop\":\"service\"}},[_c('el-input',{attrs:{\"auto-complete\":\"off\"},model:{value:(_vm.form.service),callback:function ($$v) {_vm.$set(_vm.form, \"service\", (typeof $$v === 'string'? $$v.trim(): $$v))},expression:\"form.service\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"Sprint\",\"prop\":\"sprint\"}},[_c('el-input',{attrs:{\"auto-complete\":\"off\"},model:{value:(_vm.form.sprint),callback:function ($$v) {_vm.$set(_vm.form, \"sprint\", (typeof $$v === 'string'? $$v.trim(): $$v))},expression:\"form.sprint\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"storyId\",\"prop\":\"storyId\"}},[_c('el-input',{attrs:{\"auto-complete\":\"off\"},model:{value:(_vm.form.storyId),callback:function ($$v) {_vm.$set(_vm.form, \"storyId\", (typeof $$v === 'string'? $$v.trim(): $$v))},expression:\"form.storyId\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"testCaseId\",\"prop\":\"testCaseId\"}},[_c('el-input',{attrs:{\"auto-complete\":\"off\"},model:{value:(_vm.form.testCaseId),callback:function ($$v) {_vm.$set(_vm.form, \"testCaseId\", (typeof $$v === 'string'? $$v.trim(): $$v))},expression:\"form.testCaseId\"}})],1)],1),_vm._v(\" \"),_c('div',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{nativeOn:{\"click\":function($event){_vm.formVisible = false}}},[_vm._v(\"取消\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"primary\",\"loading\":_vm.editLoading},nativeOn:{\"click\":function($event){return _vm.submit($event)}}},[_vm._v(\"提交\")])],1)],1),_vm._v(\" \"),_c('a',{directives:[{name:\"show\",rawName:\"v-show\",value:(false),expression:\"false\"}],staticClass:\"js-download-doc\",attrs:{\"href\":_vm.downloadLink,\"download\":_vm.downloadName}})],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-72f0e4ae\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/project/autoTest/TestSuiteList.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-72f0e4ae\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!sass-resources-loader?{\\\"resources\\\":\\\"D:\\\\\\\\PycharmProjects\\\\\\\\leo-api-auto\\\\\\\\frontend\\\\\\\\element-variables.scss\\\"}!../../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./TestSuiteList.vue\")\n}\nvar normalizeComponent = require(\"!../../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./TestSuiteList.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./TestSuiteList.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-72f0e4ae\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./TestSuiteList.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-72f0e4ae\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/project/autoTest/TestSuiteList.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}