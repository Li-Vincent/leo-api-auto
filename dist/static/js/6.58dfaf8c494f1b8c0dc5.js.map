{"version":3,"sources":["webpack:///./src/api/execution.js","webpack:///src/components/project/autoTest/TestCaseList.vue","webpack:///./src/components/project/autoTest/TestCaseList.vue?ec0f","webpack:///./src/components/project/autoTest/TestCaseList.vue"],"names":["__webpack_exports__","params","headers","request","url","method","data","__WEBPACK_IMPORTED_MODULE_0__utils_axios__","__webpack_require__","TestCaseList","name","_this","this","testSuiteName","methodOptions","label","value","caseList","listLoading","copyLoading","testLoading","statusChangeLoading","delLoading","pageInfoIndex","size","skip","sortBy","order","currentPage","totalNum","testEnv","testEnvs","hasSelected","selects","testResultStatus","result","addFormVisible","activeIndex","addForm","description","requestMethod","route","service","addLoading","addFormRules","required","message","trigger","min","max","validator","rule","callback","indexOf","Error","$message","warning","center","filters","methods","handleSelect","key","keyPath","queryTestCases","self","trim","Object","testCase","$route","project_id","test_suite_id","then","res","status","rows","error","catch","getTestCaseList","_this2","asyncToGenerator_default","regenerator_default","a","mark","_callee","wrap","_context","prev","next","projectId","testSuiteId","stop","handleChangeStatus","index","row","_this3","_id","Content-Type","type","handleSizeChange","val","$store","dispatch","handleCurrentChange","sortChange","column","prop","addSubmit","_this4","$refs","validate","valid","$confirm","createUser","getters","email","success","resetFields","checkSequence","number","RegExp","test","updateSequence","_this5","sequence","handleDel","_this6","isDeleted","getTestEnvList","_this7","envConfig","checkActiveTestEnv","length","handleAdd","reportRowStyle","_ref","rowIndex","ReportTableRow","_ref2","selectsChange","warmPrompt","$router","history","current","showWarmPrompt","info","onTest","testStatus","testCaseIdList","testEnvId","executionUser","executionMode","execution","showResult","getResult","lastManualResult","testResult","env","testCaseDetail","dataInitResult","forEach","item","query","JSON","parse","set","e","console","log","cookies","requestBody","checkResponseCode","checkResponseBody","checkResponseNumber","responseStatusCode","responseData","testConclusion","moment_default","testStartTime","format","spendTimeInSec","copyCase","mounted","_this8","testSuite","created","_this9","testCasePageInfo","findIndex","ele","autoTest_TestCaseList","render","_vm","_h","$createElement","_c","_self","staticClass","_v","_s","meta","title","_e","staticStyle","width","left","attrs","visible","close-on-click-modal","on","update:visible","$event","ref","model","label-width","rules","gutter","span","auto-complete","$$v","$set","expression","placeholder","_l","slot","nativeOn","click","loading","padding-bottom","inline","text-decoration","color","to","margin-right","return-list","margin-left","float","clearable","visible-change","keyup","_k","keyCode","directives","rawName","row-style","row-class-name","highlight-current-row","sort-change","selection-change","min-width","sortable","show-overflow-tooltip","scopedSlots","_u","fn","scope","test_case_id","font-size","$index","_n","hasOwnProperty","cursor","src","current-page","page-sizes","page-size","layout","total","size-change","current-change","update:currentPage","update:current-page","keys","overflow","overflow-x","border","padding","word-break","line-height","resultType","reason","text-align","staticRenderFns","Component","normalizeComponent","ssrContext"],"mappings":"yEAAAA,EAAA,EAEO,SAA4BC,EAAQC,GACzC,OAAOC,aACLC,8BACAC,OAAQ,OACRH,QAASA,EACTI,KAAML,KAPVD,EAAA,EAWO,SAA6BC,EAAQC,GAC1C,OAAOC,aACLC,+BACAC,OAAQ,OACRH,QAASA,EACTI,KAAML,KAhBV,IAAAM,EAAAC,EAAA,+MCoPAC,GACAC,KAAA,eACAJ,KAFA,WAEA,IAAAK,EAAAC,KAgBA,OACAC,cAAA,GACAC,gBAAAC,MAAA,MAAAC,MAAA,QACAD,MAAA,OAAAC,MAAA,SACAD,MAAA,MAAAC,MAAA,QACAD,MAAA,SAAAC,MAAA,WACAD,MAAA,UAAAC,MAAA,YACAD,MAAA,QAAAC,MAAA,UACAD,MAAA,OAAAC,MAAA,SACAC,YACAC,aAAA,EACAC,aAAA,EACAC,aAAA,EACAC,qBAAA,EACAC,YAAA,EACAC,eAAA,EACAC,KAAA,GACAC,KAAA,EACAC,OAAA,WACAC,MAAA,YACAC,YAAA,EACAC,SAAA,EAEAC,QAAA,GACAC,YAEAC,aAAA,EACAC,WAEAC,kBAAA,EACAC,UAEAC,gBAAA,EACAC,YAAA,GAGAC,SACA5B,KAAA,GACA6B,YAAA,GACAC,cAAA,GACAC,MAAA,GACAC,QAAA,IAEAC,YAAA,EACAC,cACAlC,OACAmC,UAAA,EAAAC,QAAA,QAAAC,QAAA,SACAC,IAAA,EAAAC,IAAA,IAAAH,QAAA,kBAAAC,QAAA,SAEAP,gBACAK,UAAA,EAAAC,QAAA,UAAAC,QAAA,SAEAN,QACAI,UAAA,EAAAC,QAAA,iBAAAC,QAAA,SACAG,UArEA,SAAAC,EAAAnC,EAAAoC,GACA,IAAApC,GAAA,MAAAA,EACA,GAAAA,EAAAqC,QAAA,KACAD,KAEAA,EAAA,IAAAE,MAAA,oBACA3C,EAAA4C,SAAAC,SACAV,QAAA,WACAW,QAAA,KAIAL,KAyDAL,QAAA,SAEAL,UACAG,UAAA,EAAAC,QAAA,SAAAC,QAAA,SAEAR,cACAM,UAAA,EAAAC,QAAA,QAAAC,QAAA,SACAE,IAAA,KAAAH,QAAA,cAAAC,QAAA,UAGAW,SACAhD,KAAA,MAIAiD,SACAC,aADA,SACAC,EAAAC,GACAlD,KAAAyB,YAAAwB,GAEAE,eAJA,SAIA9D,GACA,IAAA+D,EAAApD,KACAA,KAAAM,aAAA,EACA,KAAA8C,EAAAN,QAAAhD,KAAAuD,SACAhE,EAAA,KAAA+D,EAAAN,QAAAhD,KAAAuD,QAGYC,OAAAC,EAAA,EAAAD,CAAZF,EAAAI,OAAAnE,OAAAoE,WAAAL,EAAAI,OAAAnE,OAAAqE,cAAArE,MAAAsE,KAAA,SAAAC,GACAR,EAAA9C,aAAA,EADA,IAEAuD,EAAAD,EAAAC,OAAAnE,EAAAkE,EAAAlE,KACA,OAAAmE,GACAT,EAAAnC,SAAAvB,EAAAuB,SACAmC,EAAA/C,SAAAX,EAAAoE,MAEAV,EAAAT,SAAAoB,OACA7B,QAAAxC,EACAmD,QAAA,MAGAmB,MAAA,SAAAD,GACAX,EAAAT,SAAAoB,OACA7B,QAAA,uBACAW,QAAA,IAEAO,EAAA9C,aAAA,KAGA2D,gBA/BA,WA+BA,IAAAC,EAAAlE,KAAA,OAAAmE,IAAAC,EAAAC,EAAAC,KAAA,SAAAC,IAAA,IAAAnB,EAAA/D,EAAA,OAAA+E,EAAAC,EAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEAtF,GACAuB,MAFAwC,EAAAc,GAEAtD,KAAAC,KAAAuC,EAAAvC,KAAAC,OAAAsC,EAAAtC,OAAAC,MAAAqC,EAAArC,MACA6D,UAAAxB,EAAAI,OAAAnE,OAAAoE,WAAAoB,YAAAzB,EAAAI,OAAAnE,OAAAqE,eAEAQ,EAAAf,eAAA9D,GANA,wBAAAoF,EAAAK,SAAAP,EAAAL,KAAAC,IAQAY,mBAAA,SAAAC,EAAAC,GAAA,IAAAC,EAAAlF,KACAoD,EAAApD,KACAoD,EAAA3C,qBAAA,EACA,IACApB,GACAwE,QAFAoB,EAAApB,QAOYP,OAAAC,EAAA,EAAAD,CAAZtD,KAAAwD,OAAAnE,OAAAoE,WAAAzD,KAAAwD,OAAAnE,OAAAqE,cAAAuB,EAAAE,IAAA9F,GAFA+F,eAAA,qBAEAzB,KAAA,SAAAC,GAAA,IACAC,EAAAD,EAAAC,OAAAnE,EAAAkE,EAAAlE,KACA0D,EAAA3C,qBAAA,EACA,MAAAoD,GACAT,EAAAT,UACAT,QAAA,SACAW,QAAA,EACAwC,KAAA,YAEAJ,EAAApB,QAAAoB,EAAApB,QAEAT,EAAAT,SAAAoB,OACA7B,QAAAxC,EACAmD,QAAA,IAGAO,EAAAa,oBACAD,MAAA,WACAZ,EAAAT,SAAAoB,OACA7B,QAAA,kBACAW,QAAA,IAEAO,EAAA3C,qBAAA,EACAyE,EAAAjB,qBAGAqB,iBA3EA,SA2EAC,GACAvF,KACAwF,OAAAC,SAAA,gCACA7E,KAAA2E,EACAV,YAHA7E,KAGAwD,OAAAnE,OAAAqE,gBAHA1D,KAKAY,KAAA2E,EALAvF,KAMAM,aAAA,EACA,IAAAjB,GACAuB,KARAZ,KAQAY,KAAAC,KARAb,KAQAa,KAAAC,OARAd,KAQAc,OAAAC,MARAf,KAQAe,MACA6D,UATA5E,KASAwD,OAAAnE,OAAAoE,WAAAoB,YATA7E,KASAwD,OAAAnE,OAAAqE,eAEA1D,KAAAmD,eAAA9D,IAEAqG,oBAzFA,SAyFAH,GACAvF,KACAM,aAAA,EADAN,KAEAwF,OAAAC,SAAA,gCACA5E,MAAA0E,EAAA,GAHAvF,KAGAY,KACAI,YAAAuE,EACAV,YALA7E,KAKAwD,OAAAnE,OAAAqE,gBALA1D,KAOAa,MAAA0E,EAAA,GAPAvF,KAOAY,KACA,IAAAvB,GACAuB,KATAZ,KASAY,KAAAC,KATAb,KASAa,KAAAC,OATAd,KASAc,OAAAC,MATAf,KASAe,MACA6D,UAVA5E,KAUAwD,OAAAnE,OAAAoE,WAAAoB,YAVA7E,KAUAwD,OAAAnE,OAAAqE,eAEA1D,KAAAmD,eAAA9D,IAGAsG,WAzGA,SAyGAC,GACA5F,KACAM,aAAA,EADAN,KAEAc,OAAA8E,EAAAC,KAFA7F,KAGAe,MAAA6E,EAAA7E,MACA,IAAA1B,GACAuB,KALAZ,KAKAY,KAAAC,KALAb,KAKAa,KAAAC,OALAd,KAKAc,OAAAC,MALAf,KAKAe,MACA6D,UANA5E,KAMAwD,OAAAnE,OAAAoE,WAAAoB,YANA7E,KAMAwD,OAAAnE,OAAAqE,eAEA1D,KAAAmD,eAAA9D,IAGAyG,UAAA,eAAAC,EAAA/F,KACAA,KAAAgG,MAAAtE,QAAAuE,SAAA,SAAAC,GACA,GAAAA,EAAA,CACA,IAAA9C,EAAA2C,EACAA,EAAAI,SAAA,kBAAAxC,KAAA,WACAP,EAAArB,YAAA,EACA,IAAA1C,GACAS,KAAAsD,EAAA1B,QAAA5B,KAAAuD,OACAzB,cAAAwB,EAAA1B,QAAAE,cACAC,MAAAuB,EAAA1B,QAAAG,MACAC,QAAAsB,EAAA1B,QAAAI,QACAH,YAAAyB,EAAA1B,QAAAC,YAAA0B,OACA+C,WAAAhD,EAAAoC,OAAAa,QAAAC,OAGwBhD,OAAAC,EAAA,EAAAD,CAAxBF,EAAAI,OAAAnE,OAAAoE,WAAAL,EAAAI,OAAAnE,OAAAqE,cAAArE,MAAAsE,KAAA,SAAAC,GACAR,EAAArB,YAAA,EADA,IAEA8B,EAAAD,EAAAC,OAAAnE,EAAAkE,EAAAlE,KACA,OAAAmE,GACAT,EAAAT,SAAA4D,SACArE,QAAA,OACAW,QAAA,IAEAO,EAAA4C,MAAA,QAAAQ,cACApD,EAAA5B,gBAAA,EACA4B,EAAAa,mBAEAb,EAAAT,SAAAoB,OACA7B,QAAAxC,EACAmD,QAAA,MAGAmB,MAAA,WACAZ,EAAAT,SAAAoB,OACA7B,QAAA,kBACAW,QAAA,IAEAO,EAAArB,YAAA,UAMA0E,cAhKA,SAgKAC,GACA,WAAAC,OAAA,iBAAAC,KAAAF,IAEAG,eAnKA,SAmKA7B,EAAAC,GAAA,IAAA6B,EAAA9G,KACAA,KAAAmG,SAAA,mBACAd,KAAA,YACA1B,KAAA,WACA,IAAAmD,EAAAL,cAAAxB,EAAA8B,UAMA,OALAD,EAAAnE,SAAAoB,OACA7B,QAAA,SACAW,QAAA,SAEAiE,EAAA7C,kBAGA,IAAAb,EAAA0D,EACA1D,EAAA9C,aAAA,EACA,IAAAjB,GACA0H,SAAA9B,EAAA8B,UAGgBzD,OAAAC,EAAA,EAAAD,CAAhBF,EAAAI,OAAAnE,OAAAoE,WAAAL,EAAAI,OAAAnE,OAAAqE,cAAAuB,EAAAE,IAAA9F,MAAAsE,KAAA,SAAAC,GACAR,EAAA9C,aAAA,EADA,IAEAuD,EAAAD,EAAAC,OAAAnE,EAAAkE,EAAAlE,KACA,OAAAmE,GACAT,EAAAT,SAAA4D,SACArE,QAAA,WACAW,QAAA,IAEAO,EAAAa,oBAEAb,EAAAT,SAAAoB,OACA7B,QAAAxC,EACAmD,QAAA,IAEAO,EAAAa,qBAEAD,MAAA,WACAZ,EAAAT,SAAAoB,OACA7B,QAAA,cACAW,QAAA,IAEAO,EAAA9C,aAAA,OAIA0G,UA9MA,SA8MAhC,EAAAC,GAAA,IAAAgC,EAAAjH,KACAA,KAAAmG,SAAA,kBACAd,KAAA,YACA1B,KAAA,WACA,IAAAP,EAAA6D,EACA7D,EAAA1C,YAAA,EAMgB4C,OAAAC,EAAA,EAAAD,CAAhBF,EAAAI,OAAAnE,OAAAoE,WAAAL,EAAAI,OAAAnE,OAAAqE,cAAAuB,EAAAE,KAHA+B,WAAA,OAGAvD,KAAA,SAAAC,GACAR,EAAA1C,YAAA,EADA,IAEAmD,EAAAD,EAAAC,OAAAnE,EAAAkE,EAAAlE,KACA,OAAAmE,GACAT,EAAAT,SAAA4D,SACArE,QAAA,OACAW,QAAA,IAEAO,EAAAa,oBAEAb,EAAAT,SAAAoB,OACA7B,QAAAxC,EACAmD,QAAA,IAEAO,EAAAa,qBAEAD,MAAA,WACAZ,EAAAT,SAAAoB,OACA7B,QAAA,cACAW,QAAA,IAEAO,EAAA1C,YAAA,OAIAyG,eAlPA,WAkPA,IAAAC,EAAApH,KACAoD,EAAApD,KAGYsD,OAAA+D,EAAA,EAAA/D,EADZO,QAAA,OACAF,KAAA,SAAAC,GAAA,IACAC,EAAAD,EAAAC,OAAAnE,EAAAkE,EAAAlE,KACA,OAAAmE,EACAuD,EAAAjG,SAAAzB,EAAAoE,KAEAV,EAAAT,SAAAoB,OACA7B,QAAAxC,EACAmD,QAAA,MAGAmB,MAAA,SAAAD,GACAX,EAAAT,SAAAoB,OACA7B,QAAA,sBACAW,QAAA,OAIAyE,mBAAA,WACAtH,KACAmB,SAAAoG,OAAA,GADAvH,KAEA2C,SAAAC,SACAV,QAAA,+BACAW,QAAA,KAKA2E,UAAA,WACAxH,KAAAwB,gBAAA,GAGAiG,eArRA,SAAAC,GAqRA,IAAAzC,EAAAyC,EAAAzC,IAAAyC,EAAAC,SACA,WAAA1C,EAAApB,OACA,4BAEA,IAGA+D,eA5RA,SAAAC,GA4RAA,EAAA5C,IAAA4C,EAAAF,SACA,wBAEAG,cAAA,SAAAzG,GACAA,EAAAkG,OAAA,GACAvH,KAAAqB,UACArB,KAAAoB,aAAA,GAEApB,KAAAoB,aAAA,GAGA2G,WAvSA,WAwSA/H,KACAgI,QAAAC,QAAAC,QAAA7I,OAAA8I,gBADAnI,KAGA2C,SAAAyF,MACAlG,QAAA,iCACAW,QAAA,KAIAwF,OAjTA,SAiTArD,EAAAC,GACA,GAAAjF,KAAAkB,QAAA,CACA+D,EAAAqD,YAAA,EACA,IAAAlF,EAAApD,KACAoD,EAAA5C,aAAA,EACA,IACAnB,GACAkJ,gBAAAtD,EAAAE,KACAqD,UAAApF,EAAAlC,QACAuH,cAAArF,EAAAoC,OAAAa,QAAAC,MACAoC,cAAA,UAEgBpF,OAAAqF,EAAA,EAAArF,CAAhBjE,GAPA+F,eAAA,qBAOAzB,KAAA,SAAAC,GACAR,EAAA5C,aAAA,EADA,IAEAqD,EAAAD,EAAAC,OAAAnE,EAAAkE,EAAAlE,KACA,OAAAmE,GACAT,EAAAa,kBACAgB,EAAAqD,YAAA,GAEAlF,EAAAT,SAAAC,SACAV,QAAAxC,EACAmD,QAAA,IAGAO,EAAAa,kBACAgB,EAAAqD,YAAA,IACAtE,MAAA,SAAAD,GACAX,EAAAT,SAAAoB,OACA7B,QAAA,sBACAW,QAAA,IAEAO,EAAA5C,aAAA,EACA4C,EAAAa,kBACAgB,EAAAqD,YAAA,SAGAtI,KAAA2C,UACAT,QAAA,qBACAW,QAAA,EACAwC,KAAA,aAIAuD,WA5VA,SA4VA3D,GACAjF,KAAAM,aAAA,EACAN,KAAAuB,OAAA,KAAA0D,EAAAnF,KACAE,KAAA6I,UAAA5D,EAAA6D,mBAEAD,UAjWA,SAiWAE,GAEA/I,KAAAM,aAAA,EADAN,KAEAuB,OAAA,IAAAwH,EAAAC,IAFAhJ,KAGAuB,OAAA,IAAAwH,EAAAE,eAAAzJ,IAHAQ,KAIAuB,OAAA,cAAAwH,EAAAE,eAAArH,cACAmH,EAAAG,gBAAAH,EAAAG,eAAA3B,OAAA,GACAwB,EAAAG,eAAAC,QAAA,SAAAC,GACA,IACAA,EAAAC,OAAA,iBAAAD,EAAAC,QACAD,EAAAC,MAAAC,KAAAC,MAAAH,EAAAC,QAEAD,EAAAI,KAAA,iBAAAJ,EAAAI,MACAJ,EAAAI,IAAAF,KAAAC,MAAAH,EAAAI,MAEA,MAAAC,GACAC,QAAAC,IAAAF,MAfAzJ,KAmBAuB,OAAA,eAAAwH,EAAAG,eAnBAlJ,KAoBAuB,OAAA,QAAAwH,EAAAzJ,QApBAU,KAqBAuB,OAAA,QAAAwH,EAAAE,eAAAW,QArBA5J,KAsBAuB,OAAA,YAAAwH,EAAAE,eAAAY,YACAd,EAAAe,kBAvBA9J,KAwBAuB,OAAA,kBAAAwH,EAAAe,kBAxBA9J,KA0BAuB,OAAA,uBAEAwH,EAAAgB,mBAAA,IAAAhB,EAAAgB,kBAAAxC,QAAA,KAAAwB,EAAAgB,kBAAA,SAAA1G,OA5BArD,KA+BAuB,OAAA,sBA/BAvB,KA6BAuB,OAAA,kBAAAwH,EAAAgB,mBAIAhB,EAAAiB,qBAAA,IAAAjB,EAAAiB,oBAAAzC,QAAA,KAAAwB,EAAAiB,oBAAA,cAAA3G,OAjCArD,KAoCAuB,OAAA,wBApCAvB,KAkCAuB,OAAA,oBAAAwH,EAAAiB,oBAlCAhK,KAsCAuB,OAAA,OAAAwH,EAAAlF,OAtCA7D,KAuCAuB,OAAA,mBAAAwH,EAAAkB,mBACA,IAxCAjK,KAyCAuB,OAAA,aAAA+H,KAAAC,MAAAR,EAAAmB,cAGA,MAAAnG,GA5CA/D,KA6CAuB,OAAA,aAAAwH,EAAAmB,aA7CAlK,KA+CAuB,OAAA,eAAAwH,EAAAoB,eA/CAnK,KAgDAuB,OAAA,cAAA6I,IAAArB,EAAAsB,eAAAC,OAAA,wBAhDAtK,KAiDAuB,OAAA,eAAAwH,EAAAwB,eAjDAvK,KAkDAsB,kBAAA,GAEAkJ,SAtZA,SAsZAxF,EAAAC,GACA,IAAA7B,EAAApD,KACAA,KAAAmG,SAAA,kBAAAxC,KAAA,WACAP,EAAA7C,aAAA,EACA,IACAlB,GACA+G,WAAAhD,EAAAoC,OAAAa,QAAAC,OAAA,aAEgBhD,OAAAC,EAAA,EAAAD,CAAhBF,EAAAI,OAAAnE,OAAAoE,WAAAL,EAAAI,OAAAnE,OAAAqE,cAAAuB,EAAAE,IAAA9F,GAJA+F,eAAA,qBAIAzB,KAAA,SAAAC,GACAR,EAAA7C,aAAA,EADA,IAEAsD,EAAAD,EAAAC,OAAAnE,EAAAkE,EAAAlE,KACA,OAAAmE,EACAT,EAAAT,SAAA4D,SACArE,QAAAxC,EACAmD,QAAA,IAGAO,EAAAT,SAAAoB,OACA7B,QAAAxC,EACAmD,QAAA,IAGAO,EAAAa,oBACAD,MAAA,SAAAD,GACAX,EAAAT,SAAAoB,OACA7B,QAAA,iBACAW,QAAA,IAEAO,EAAA7C,aAAA,QAKAkK,QA9gBA,WA8gBA,IAAAC,EAAA1K,KACAA,KAAAiE,kBACAjE,KAAAmH,iBACQ7D,OAAAqH,EAAA,EAAArH,CAARtD,KAAAwD,OAAAnE,OAAAoE,WAAAzD,KAAAwD,OAAAnE,OAAAqE,eAAAC,KAAA,SAAAC,GACA,OAAAA,EAAAC,SACA6G,EAAAzK,cAAA2D,EAAAlE,KAAAI,QAGAE,KAAA+H,cAEA6C,QAxhBA,WAwhBA,IAAAC,EAAA7K,KACAA,KAAAW,cAAAX,KAAAwF,OAAAa,QAAAyE,iBAAAC,UAAA,SAAAC,GAAA,OAAAA,EAAAnG,cAAAgG,EAAArH,OAAAnE,OAAAqE,gBACA1D,KAAAY,MAAA,IAAAZ,KAAAW,cACA,GAAAX,KAAAwF,OAAAa,QAAAyE,iBAAA9K,KAAAW,gBACAX,KAAAwF,OAAAa,QAAAyE,iBAAA9K,KAAAW,eAAAC,MAAA,GACAZ,KAAAa,MAAA,IAAAb,KAAAW,cACA,EAAAX,KAAAwF,OAAAa,QAAAyE,iBAAA9K,KAAAW,gBACAX,KAAAwF,OAAAa,QAAAyE,iBAAA9K,KAAAW,eAAAE,MAAA,EACAb,KAAAc,QAAA,IAAAd,KAAAW,cACA,WAAAX,KAAAwF,OAAAa,QAAAyE,iBAAA9K,KAAAW,gBACAX,KAAAwF,OAAAa,QAAAyE,iBAAA9K,KAAAW,eAAAG,QAAA,WACAd,KAAAe,OAAA,IAAAf,KAAAW,cACA,YAAAX,KAAAwF,OAAAa,QAAAyE,iBAAA9K,KAAAW,gBACAX,KAAAwF,OAAAa,QAAAyE,iBAAA9K,KAAAW,eAAAI,OAAA,YACAf,KAAAgB,aAAA,IAAAhB,KAAAW,cACA,EAAAX,KAAAwF,OAAAa,QAAAyE,iBAAA9K,KAAAW,gBACAX,KAAAwF,OAAAa,QAAAyE,iBAAA9K,KAAAW,eAAAK,aAAA,ICzxBeiK,GADEC,OAFjB,WAA0B,IAAAC,EAAAnL,KAAaoL,EAAAD,EAAAE,eAA0BC,EAAAH,EAAAI,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,WAAAA,EAAA,UAAkCE,YAAA,UAAoBL,EAAAM,GAAAN,EAAAO,GAAAP,EAAA3H,OAAAmI,KAAAC,OAAA,KAAAT,EAAA,cAAAG,EAAA,QAAAH,EAAAM,GAAA,aAAAN,EAAAO,GAAAP,EAAAlL,kBAAAkL,EAAAU,OAAAV,EAAAM,GAAA,KAAAH,EAAA,aAAmKQ,aAAaC,MAAA,MAAAC,KAAA,SAA6BC,OAAQF,MAAA,MAAAH,MAAA,KAAAM,QAAAf,EAAA3J,eAAA2K,wBAAA,GAAqFC,IAAKC,iBAAA,SAAAC,GAAkCnB,EAAA3J,eAAA8K,MAA4BhB,EAAA,WAAgBiB,IAAA,UAAAN,OAAqBO,MAAArB,EAAAzJ,QAAA+K,cAAA,OAAAC,MAAAvB,EAAAnJ,gBAAmEsJ,EAAA,UAAeW,OAAOU,OAAA,MAAarB,EAAA,UAAeW,OAAOW,KAAA,MAAWtB,EAAA,gBAAqBW,OAAO9L,MAAA,OAAA0F,KAAA,UAA8ByF,EAAA,YAAiBW,OAAOY,gBAAA,OAAsBL,OAAQpM,MAAA+K,EAAAzJ,QAAA,KAAAc,SAAA,SAAAsK,GAAkD3B,EAAA4B,KAAA5B,EAAAzJ,QAAA,OAAAoL,IAAmCE,WAAA,mBAA4B,OAAA7B,EAAAM,GAAA,KAAAH,EAAA,UAAmCW,OAAOW,KAAA,KAAUtB,EAAA,gBAAqBW,OAAO9L,MAAA,MAAA0F,KAAA,aAAgCyF,EAAA,YAAiBW,OAAOY,gBAAA,OAAsBL,OAAQpM,MAAA+K,EAAAzJ,QAAA,QAAAc,SAAA,SAAAsK,GAAqD3B,EAAA4B,KAAA5B,EAAAzJ,QAAA,2BAAAoL,IAAAzJ,OAAAyJ,IAA6EE,WAAA,sBAA+B,WAAA7B,EAAAM,GAAA,KAAAH,EAAA,UAAuCW,OAAOU,OAAA,MAAarB,EAAA,UAAeW,OAAOW,KAAA,KAAUtB,EAAA,gBAAqBW,OAAO9L,MAAA,OAAA0F,KAAA,mBAAuCyF,EAAA,aAAkBW,OAAOgB,YAAA,OAAoBT,OAAQpM,MAAA+K,EAAAzJ,QAAA,cAAAc,SAAA,SAAAsK,GAA2D3B,EAAA4B,KAAA5B,EAAAzJ,QAAA,gBAAAoL,IAA4CE,WAAA,0BAAqC7B,EAAA+B,GAAA/B,EAAA,uBAAA/B,GAA2C,OAAAkC,EAAA,aAAuBrI,IAAAmG,EAAAhJ,MAAA6L,OAAsB9L,MAAAiJ,EAAAjJ,MAAAC,MAAAgJ,EAAAhJ,WAAyC,WAAA+K,EAAAM,GAAA,KAAAH,EAAA,UAAsCW,OAAOW,KAAA,KAAUtB,EAAA,gBAAqBW,OAAO9L,MAAA,OAAA0F,KAAA,WAA+ByF,EAAA,YAAiBW,OAAOY,gBAAA,OAAsBL,OAAQpM,MAAA+K,EAAAzJ,QAAA,MAAAc,SAAA,SAAAsK,GAAmD3B,EAAA4B,KAAA5B,EAAAzJ,QAAA,yBAAAoL,IAAAzJ,OAAAyJ,IAA2EE,WAAA,oBAA6B,WAAA7B,EAAAM,GAAA,KAAAH,EAAA,gBAA6CW,OAAO9L,MAAA,KAAA0F,KAAA,iBAAmCyF,EAAA,YAAiBW,OAAO5G,KAAA,WAAAvB,KAAA,GAA2B0I,OAAQpM,MAAA+K,EAAAzJ,QAAA,YAAAc,SAAA,SAAAsK,GAAyD3B,EAAA4B,KAAA5B,EAAAzJ,QAAA,cAAAoL,IAA0CE,WAAA,0BAAmC,OAAA7B,EAAAM,GAAA,KAAAH,EAAA,OAAgCE,YAAA,gBAAAS,OAAmCkB,KAAA,UAAgBA,KAAA,WAAe7B,EAAA,aAAkB8B,UAAUC,MAAA,SAAAf,GAAyBnB,EAAA3J,gBAAA,MAA6B2J,EAAAM,GAAA,QAAAN,EAAAM,GAAA,KAAAH,EAAA,aAA6CW,OAAO5G,KAAA,UAAAiI,QAAAnC,EAAApJ,YAA0CqL,UAAWC,MAAA,SAAAf,GAAyB,OAAAnB,EAAArF,UAAAwG,OAA+BnB,EAAAM,GAAA,gBAAAN,EAAAM,GAAA,KAAAH,EAAA,UAAkDE,YAAA,UAAAM,aAAmCyB,iBAAA,OAAuBtB,OAAQW,KAAA,MAAWtB,EAAA,WAAgBW,OAAOuB,QAAA,KAAelC,EAAA,eAAoBQ,aAAa2B,kBAAA,OAAAC,MAAA,aAA6CzB,OAAQ0B,IAAM7N,KAAA,gBAAAT,QAAiCoE,WAAAzD,KAAAwD,OAAAnE,OAAAoE,gBAAgD6H,EAAA,aAAkBE,YAAA,gBAA0BF,EAAA,KAAUE,YAAA,uBAAAM,aAAgD8B,eAAA,OAAqB3B,OAAQ4B,cAAA,MAAkB1C,EAAAM,GAAA,yBAAAN,EAAAM,GAAA,KAAAH,EAAA,gBAAiEQ,aAAagC,cAAA,UAAsBxC,EAAA,aAAkBE,YAAA,eAAAS,OAAkC5G,KAAA,WAAiB+G,IAAKiB,MAAAlC,EAAA3D,aAAuB2D,EAAAM,GAAA,iBAAAN,EAAAM,GAAA,KAAAH,EAAA,gBAAyDQ,aAAaiC,MAAA,QAAAH,eAAA,WAAwCtC,EAAA,aAAkBQ,aAAa8B,eAAA,QAAsB3B,OAAQ+B,UAAA,GAAAf,YAAA,QAAoCb,IAAK6B,iBAAA9C,EAAA7D,oBAAwCkF,OAAQpM,MAAA+K,EAAA,QAAA3I,SAAA,SAAAsK,GAA6C3B,EAAAjK,QAAA4L,GAAgBE,WAAA,YAAuB7B,EAAA+B,GAAA/B,EAAA,kBAAA/B,EAAApE,GAA4C,OAAAsG,EAAA,aAAuBrI,IAAA+B,EAAA,GAAAiH,OAAoB9L,MAAAiJ,EAAAtJ,KAAAM,MAAAgJ,EAAAjE,SAAsC,GAAAgG,EAAAM,GAAA,KAAAH,EAAA,gBAAAA,EAAA,YAAmDW,OAAOgB,YAAA,MAAmBG,UAAWc,MAAA,SAAA5B,GAAyB,OAAAA,EAAAjH,KAAA5C,QAAA,QAAA0I,EAAAgD,GAAA7B,EAAA8B,QAAA,WAAA9B,EAAArJ,IAAA,SAAsF,KAAekI,EAAAlH,gBAAAqI,KAAoCE,OAAQpM,MAAA+K,EAAArI,QAAA,KAAAN,SAAA,SAAAsK,GAAkD3B,EAAA4B,KAAA5B,EAAArI,QAAA,wBAAAgK,IAAAzJ,OAAAyJ,IAA0EE,WAAA,mBAA4B,GAAA7B,EAAAM,GAAA,KAAAH,EAAA,gBAAAA,EAAA,aAAqDE,YAAA,iBAAAS,OAAoC5G,KAAA,WAAiB+G,IAAKiB,MAAAlC,EAAAlH,mBAA6BkH,EAAAM,GAAA,yBAAAN,EAAAM,GAAA,KAAAH,EAAA,YAA6D+C,aAAavO,KAAA,UAAAwO,QAAA,YAAAlO,MAAA+K,EAAA,YAAA6B,WAAA,gBAAoFlB,aAAeC,MAAA,QAAeE,OAAQvM,KAAAyL,EAAA9K,SAAAkO,YAAApD,EAAA1D,eAAA+G,iBAAArD,EAAAvD,eAAA6G,wBAAA,IAAkHrC,IAAKsC,cAAAvD,EAAAxF,WAAAgJ,mBAAAxD,EAAArD,iBAAmEwD,EAAA,mBAAwBW,OAAO5G,KAAA,YAAAuJ,YAAA,QAAqCzD,EAAAM,GAAA,KAAAH,EAAA,mBAAoCW,OAAOpG,KAAA,OAAA1F,MAAA,SAAAyO,YAAA,MAAAC,SAAA,SAAAC,wBAAA,IAAgGC,YAAA5D,EAAA6D,KAAsB/L,IAAA,UAAAgM,GAAA,SAAAC,GAAiC,OAAA5D,EAAA,eAA0BQ,aAAa2B,kBAAA,OAAAC,MAAA,WAA2CzB,OAAQ0B,IAAM7N,KAAA,eAAAT,QAAgC8P,aAAAD,EAAAjK,IAAAE,SAA+BgG,EAAAM,GAAAN,EAAAO,GAAAwD,EAAAjK,IAAAnF,MAAA,uBAAqDqL,EAAAM,GAAA,KAAAH,EAAA,mBAAoCW,OAAOpG,KAAA,QAAA1F,MAAA,UAAAyO,YAAA,MAAAC,SAAA,SAAAC,wBAAA,IAAkGC,YAAA5D,EAAA6D,KAAsB/L,IAAA,UAAAgM,GAAA,SAAAC,GAAiC,OAAA5D,EAAA,QAAmBE,YAAA,eAAyBL,EAAAM,GAAAN,EAAAO,GAAAwD,EAAAjK,IAAArD,kBAAAuJ,EAAAM,GAAA,KAAAH,EAAA,QAAmEQ,aAAasD,YAAA,UAAoBjE,EAAAM,GAAAN,EAAAO,GAAAwD,EAAAjK,IAAApD,iBAAyCsJ,EAAAM,GAAA,KAAAH,EAAA,mBAAoCW,OAAOpG,KAAA,cAAA1F,MAAA,OAAAyO,YAAA,MAAAE,wBAAA,IAAiFC,YAAA5D,EAAA6D,KAAsB/L,IAAA,UAAAgM,GAAA,SAAAC,GAAiC,OAAA5D,EAAA,QAAAH,EAAAM,GAAAN,EAAAO,GAAAwD,EAAAjK,IAAAtD,uBAAgEwJ,EAAAM,GAAA,KAAAH,EAAA,mBAAoCW,OAAOpG,KAAA,UAAA1F,MAAA,UAAAyO,YAAA,MAAAE,wBAAA,IAAgFC,YAAA5D,EAAA6D,KAAsB/L,IAAA,UAAAgM,GAAA,SAAAC,GAAiC,OAAA5D,EAAA,QAAAH,EAAAM,GAAAN,EAAAO,GAAAwD,EAAAjK,IAAAnD,mBAA4DqJ,EAAAM,GAAA,KAAAH,EAAA,mBAAoCW,OAAOpG,KAAA,WAAA1F,MAAA,WAAAyO,YAAA,MAAAC,SAAA,SAAAC,wBAAA,IAAsGC,YAAA5D,EAAA6D,KAAsB/L,IAAA,UAAAgM,GAAA,SAAAC,GAAiC,OAAA5D,EAAA,YAAuBQ,aAAaC,MAAA,QAAeE,OAAQ5G,KAAA,SAAAwH,gBAAA,SAAwCO,UAAWc,MAAA,SAAA5B,GAAyB,OAAAA,EAAAjH,KAAA5C,QAAA,QAAA0I,EAAAgD,GAAA7B,EAAA8B,QAAA,WAAA9B,EAAArJ,IAAA,SAAsF,KAAekI,EAAAtE,eAAAqI,EAAAG,OAAAH,EAAAjK,OAAoDuH,OAAQpM,MAAA8O,EAAAjK,IAAA,SAAAzC,SAAA,SAAAsK,GAAoD3B,EAAA4B,KAAAmC,EAAAjK,IAAA,WAAAkG,EAAAmE,GAAAxC,KAA6CE,WAAA,+BAAyC7B,EAAAM,GAAA,KAAAH,EAAA,mBAAoCW,OAAOpG,KAAA,WAAA1F,MAAA,OAAAyO,YAAA,MAAAC,SAAA,SAAAC,wBAAA,MAAmG3D,EAAAM,GAAA,KAAAH,EAAA,mBAAoCW,OAAOpG,KAAA,SAAA1F,MAAA,OAAAyO,YAAA,MAAAC,SAAA,SAAAC,wBAAA,IAAgGC,YAAA5D,EAAA6D,KAAsB/L,IAAA,UAAAgM,GAAA,SAAAC,GAAiC,OAAA5D,EAAA,QAAmB+C,aAAavO,KAAA,OAAAwO,QAAA,SAAAlO,OAAA8O,EAAAjK,IAAAsK,eAAA,2BAAAL,EAAAjK,IAAA6D,iBAAAjF,QAAA,UAAAqL,EAAAjK,IAAA6D,iBAAAjF,OAAAmJ,WAAA,4IAAgU7B,EAAAM,GAAA,YAAAN,EAAAM,GAAA,KAAAH,EAAA,QAA4C+C,aAAavO,KAAA,OAAAwO,QAAA,SAAAlO,MAAA8O,EAAAjK,IAAA6D,kBAAA,OAAAoG,EAAAjK,IAAA6D,iBAAAjF,OAAAmJ,WAAA,2EAAgMlB,aAAe4B,MAAA,UAAA8B,OAAA,WAAqCpD,IAAKiB,MAAA,SAAAf,GAAyB,OAAAnB,EAAAvC,WAAAsG,EAAAjK,SAAmCkG,EAAAM,GAAA,aAAAN,EAAAM,GAAA,KAAAH,EAAA,QAA6C+C,aAAavO,KAAA,OAAAwO,QAAA,SAAAlO,MAAA8O,EAAAjK,IAAA6D,kBAAA,WAAAoG,EAAAjK,IAAA6D,iBAAAjF,OAAAmJ,WAAA,+EAAwMlB,aAAe4B,MAAA,UAAA8B,OAAA,WAAqCpD,IAAKiB,MAAA,SAAAf,GAAyB,OAAAnB,EAAAvC,WAAAsG,EAAAjK,SAAmCkG,EAAAM,GAAA,oBAA2BN,EAAAM,GAAA,KAAAH,EAAA,mBAAoCW,OAAOpG,KAAA,SAAA1F,MAAA,KAAAyO,YAAA,MAAAC,SAAA,UAAmEE,YAAA5D,EAAA6D,KAAsB/L,IAAA,UAAAgM,GAAA,SAAAC,GAAiC,OAAA5D,EAAA,OAAkB+C,aAAavO,KAAA,OAAAwO,QAAA,SAAAlO,MAAA8O,EAAAjK,IAAA,OAAA+H,WAAA,qBAAoFf,OAASwD,IAAM7P,EAAQ,WAAsCuL,EAAAM,GAAA,KAAAH,EAAA,OAAwB+C,aAAavO,KAAA,OAAAwO,QAAA,SAAAlO,OAAA8O,EAAAjK,IAAApB,OAAAmJ,WAAA,sBAAsFf,OAASwD,IAAM7P,EAAQ,kBAA4CuL,EAAAM,GAAA,KAAAH,EAAA,mBAAoCW,OAAO9L,MAAA,KAAAyO,YAAA,OAA+BG,YAAA5D,EAAA6D,KAAsB/L,IAAA,UAAAgM,GAAA,SAAAC,GAAiC,OAAA5D,EAAA,aAAwBW,OAAO5G,KAAA,UAAAzE,KAAA,QAAA0M,QAAAnC,EAAA3K,aAA0D4L,IAAKiB,MAAA,SAAAf,GAAyB,OAAAnB,EAAA9C,OAAA6G,EAAAG,OAAAH,EAAAjK,SAA6CkG,EAAAM,GAAA,kBAAAN,EAAAM,GAAA,KAAAH,EAAA,aAAuDE,YAAA,UAAAS,OAA6BrL,KAAA,QAAA0M,QAAAnC,EAAA5K,aAAyC6L,IAAKiB,MAAA,SAAAf,GAAyB,OAAAnB,EAAAX,SAAA0E,EAAAG,OAAAH,EAAAjK,SAA+CkG,EAAAM,GAAA,kBAAAN,EAAAM,GAAA,KAAAH,EAAA,aAAuDW,OAAO5G,KAAA,OAAAzE,KAAA,QAAA0M,QAAAnC,EAAA1K,qBAA+D2L,IAAKiB,MAAA,SAAAf,GAAyB,OAAAnB,EAAApG,mBAAAmK,EAAAG,OAAAH,EAAAjK,SAAyDkG,EAAAM,GAAA,IAAAN,EAAAO,IAAA,IAAAwD,EAAAjK,IAAApB,OAAA,2BAAAsH,EAAAM,GAAA,KAAAH,EAAA,aAAoGW,OAAO5G,KAAA,SAAAzE,KAAA,QAAA0M,QAAAnC,EAAAzK,YAAwD0L,IAAKiB,MAAA,SAAAf,GAAyB,OAAAnB,EAAAnE,UAAAkI,EAAAG,OAAAH,EAAAjK,SAAgDkG,EAAAM,GAAA,0BAAgC,GAAAN,EAAAM,GAAA,KAAAH,EAAA,UAA+BE,YAAA,UAAAS,OAA6BW,KAAA,MAAW,GAAAzB,EAAAlK,SAAAqK,EAAA,iBAA0CQ,aAAaiC,MAAA,SAAgB9B,OAAQyD,eAAAvE,EAAAnK,YAAA2O,cAAA,UAAAC,YAAAzE,EAAAvK,KAAAiP,OAAA,0CAAAC,MAAA3E,EAAAlK,UAAsJmL,IAAK2D,cAAA5E,EAAA7F,iBAAA0K,iBAAA7E,EAAAzF,oBAAAuK,qBAAA,SAAA3D,GAAkHnB,EAAAnK,YAAAsL,GAAuB4D,sBAAA,SAAA5D,GAAwCnB,EAAAnK,YAAAsL,MAAyBnB,EAAAU,MAAA,GAAAV,EAAAM,GAAA,KAAAH,EAAA,aAA2CW,OAAOL,MAAA,OAAAM,QAAAf,EAAA7J,iBAAA6K,wBAAA,GAA2EC,IAAKC,iBAAA,SAAAC,GAAkCnB,EAAA7J,iBAAAgL,MAA8BhB,EAAA,OAAYE,YAAA,eAAAS,OAAkCkB,KAAA,SAAeA,KAAA,UAAc7B,EAAA,QAAaQ,aAAasD,YAAA,UAAoBjE,EAAAM,GAAA,UAAAN,EAAAM,GAAA,KAAAH,EAAA,QAA0C+C,aAAavO,KAAA,OAAAwO,QAAA,SAAAlO,MAAA+K,EAAA5J,OAAA,KAAAyL,WAAA,gBAA8ElB,aAAesD,YAAA,UAAoBjE,EAAAM,GAAA,MAAAN,EAAAO,GAAAP,EAAA5J,OAAAzB,WAAAqL,EAAAM,GAAA,KAAAH,EAAA,OAAkEE,YAAA,gBAA0BF,EAAA,OAAY+C,aAAavO,KAAA,OAAAwO,QAAA,SAAAlO,MAAA+K,EAAA5J,OAAA,IAAAyL,WAAA,iBAA8E7B,EAAAM,GAAA,UAAAN,EAAAO,GAAAP,EAAA5J,OAAAyH,QAAAmC,EAAAM,GAAA,KAAAH,EAAA,OAAAH,EAAAM,GAAA,UAAAN,EAAAO,GAAAP,EAAA5J,OAAA/B,QAAA2L,EAAAM,GAAA,KAAAH,EAAA,OAAAH,EAAAM,GAAA,UAAAN,EAAAO,GAAAP,EAAA5J,OAAAK,kBAAAuJ,EAAAM,GAAA,KAAAH,EAAA,OAAAH,EAAAM,GAAA,YAAAN,EAAAO,GAAAP,EAAA5J,OAAA8I,kBAAAc,EAAAM,GAAA,KAAAH,EAAA,OAAAH,EAAAM,GAAA,YAAAN,EAAAO,GAAAP,EAAA5J,OAAAgJ,gBAAA,OAAAY,EAAAM,GAAA,KAAAH,EAAA,OAA8WE,YAAA,iBAA2BL,EAAAM,GAAA,KAAAH,EAAA,OAAwBQ,aAAasD,YAAA,UAAoBjE,EAAAM,GAAA,YAAAN,EAAAM,GAAA,KAAAN,EAAA+B,GAAA/B,EAAA5J,OAAA,wBAAA6H,GAAmF,OAAAkC,EAAA,OAAAA,EAAA,OAAAH,EAAAM,GAAAN,EAAAO,GAAAtC,UAAoD+B,EAAAM,GAAA,MAAAN,EAAA5J,OAAA2H,gBAAAiC,EAAA5J,OAAA2H,gBAAA5F,OAAA6M,KAAAhF,EAAA5J,OAAA2H,gBAAA3B,QAAA,EAAA+D,EAAA,OAAAH,EAAAM,GAAA,iCAAAN,EAAAU,KAAAV,EAAAM,GAAA,KAAAH,EAAA,OAA+ME,YAAA,iBAA2BL,EAAAM,GAAA,KAAAH,EAAA,OAAwBQ,aAAasD,YAAA,UAAoBjE,EAAAM,GAAA,WAAAN,EAAAM,GAAA,KAAAN,EAAA+B,GAAA/B,EAAA5J,OAAA,iBAAAnB,EAAA6C,GAAgF,OAAAqI,EAAA,OAAiBrI,QAAQkI,EAAAM,GAAAN,EAAAO,GAAAzI,GAAA,MAAAkI,EAAAO,GAAAtL,QAA4C+K,EAAAM,GAAA,MAAAN,EAAA5J,OAAAjC,SAAA6L,EAAA5J,OAAAjC,SAAAgE,OAAA6M,KAAAhF,EAAA5J,OAAAjC,SAAAiI,QAAA,EAAA+D,EAAA,OAAAH,EAAAM,GAAA,mCAAAN,EAAAU,KAAAV,EAAAM,GAAA,KAAAH,EAAA,OAA4LE,YAAA,iBAA2BL,EAAAM,GAAA,KAAAH,EAAA,OAAwBQ,aAAasD,YAAA,UAAoBjE,EAAAM,GAAA,cAAAN,EAAAM,GAAA,KAAAN,EAAA+B,GAAA/B,EAAA5J,OAAA,iBAAA6H,GAA8E,OAAAkC,EAAA,OAAAH,EAAAM,GAAAN,EAAAO,GAAAtC,EAAAtJ,MAAA,MAAAqL,EAAAO,GAAAtC,EAAAhJ,YAAsE+K,EAAAM,GAAA,MAAAN,EAAA5J,OAAAqI,SAAAuB,EAAA5J,OAAAqI,SAAAuB,EAAA5J,OAAAqI,QAAArC,QAAA,EAAA+D,EAAA,OAAAH,EAAAM,GAAA,yBAAAN,EAAAU,KAAAV,EAAAM,GAAA,KAAAH,EAAA,OAAsKE,YAAA,iBAA2BL,EAAAM,GAAA,KAAAH,EAAA,OAAwBQ,aAAasD,YAAA,UAAoBjE,EAAAM,GAAA,WAAAN,EAAAM,GAAA,KAAAH,EAAA,OAA0C+C,aAAavO,KAAA,OAAAwO,QAAA,SAAAlO,MAAA+K,EAAA5J,OAAA,YAAAyL,WAAA,uBAA4FxB,YAAA,2BAAuCF,EAAA,OAAAH,EAAAM,GAAAN,EAAAO,GAAAP,EAAA5J,OAAAsI,kBAAAsB,EAAAM,GAAA,KAAAH,EAAA,OAA6E+C,aAAavO,KAAA,OAAAwO,QAAA,SAAAlO,OAAA+K,EAAA5J,OAAAsI,YAAAmD,WAAA,wBAA8FxB,YAAA,2BAAuCL,EAAAM,GAAA,OAAAN,EAAAM,GAAA,KAAAH,EAAA,OAAsCE,YAAA,iBAA2BL,EAAAM,GAAA,KAAAH,EAAA,OAAwBQ,aAAasD,YAAA,UAAoBjE,EAAAM,GAAA,WAAAN,EAAAM,GAAA,KAAAH,EAAA,OAAAH,EAAAM,GAAA,YAAAN,EAAAO,GAAAP,EAAA5J,OAAAuI,sBAAAqB,EAAAM,GAAA,KAAAH,EAAA,OAAAH,EAAAM,GAAA,uBAAAH,EAAA,OAAAH,EAAAM,GAAAN,EAAAO,GAAAP,EAAA5J,OAAAwI,sBAAAoB,EAAAM,GAAA,KAAAH,EAAA,QAAyO+C,aAAavO,KAAA,OAAAwO,QAAA,SAAAlO,OAAA+K,EAAA5J,OAAAwI,kBAAAiD,WAAA,gCAA4G7B,EAAAM,GAAA,WAAAN,EAAAM,GAAA,KAAAH,EAAA,OAAAH,EAAAM,GAAA,mBAAAH,EAAA,OAAAH,EAAAM,GAAAN,EAAAO,GAAAP,EAAA5J,OAAAyI,wBAAAmB,EAAAM,GAAA,KAAAH,EAAA,QAAsJ+C,aAAavO,KAAA,OAAAwO,QAAA,SAAAlO,OAAA+K,EAAA5J,OAAAyI,oBAAAgD,WAAA,kCAAgH7B,EAAAM,GAAA,WAAAN,EAAAM,GAAA,KAAAH,EAAA,OAA0CE,YAAA,iBAA2BL,EAAAM,GAAA,KAAAH,EAAA,OAAwBQ,aAAasD,YAAA,UAAoBjE,EAAAM,GAAA,WAAAN,EAAAM,GAAA,KAAAH,EAAA,OAAAH,EAAAM,GAAA,YAAAN,EAAAO,GAAAP,EAAA5J,OAAA0I,uBAAAkB,EAAAM,GAAA,KAAAH,EAAA,OAAAH,EAAAM,GAAA,aAAAN,EAAAM,GAAA,KAAAH,EAAA,OAAsK+C,aAAavO,KAAA,OAAAwO,QAAA,SAAAlO,MAAA+K,EAAA5J,OAAA,aAAAyL,WAAA,wBAA8FxB,YAAA,2BAAuCF,EAAA,OAAAH,EAAAM,GAAAN,EAAAO,GAAAP,EAAA5J,OAAA2I,mBAAAiB,EAAAM,GAAA,KAAAH,EAAA,OAA8E+C,aAAavO,KAAA,OAAAwO,QAAA,SAAAlO,OAAA+K,EAAA5J,OAAA2I,aAAA8C,WAAA,yBAAgGxB,YAAA,2BAAuCL,EAAAM,GAAA,aAAAN,EAAAM,GAAA,KAAAH,EAAA,OAA4CE,YAAA,iBAA2BL,EAAAM,GAAA,KAAAH,EAAA,OAAwBQ,aAAasD,YAAA,UAAoBjE,EAAAM,GAAA,WAAAN,EAAAM,GAAA,KAAAN,EAAA+B,GAAA/B,EAAA5J,OAAA,wBAAA6H,GAAkF,OAAAkC,EAAA,OAAiB+C,aAAavO,KAAA,OAAAwO,QAAA,SAAAlO,MAAA+K,EAAA5J,OAAA,eAAAyL,WAAA,0BAAkGlB,aAAesE,SAAA,OAAAC,aAAA,SAAAC,OAAA,oBAAAC,QAAA,OAAAxE,MAAA,MAAAyE,aAAA,YAAAC,cAAA,UAAmJtF,EAAAM,GAAA,gBAAAN,EAAAO,GAAAtC,EAAAsH,YAAA,KAAApF,EAAA,MAAAH,EAAAM,GAAA,gBAAAN,EAAAO,GAAAtC,EAAAuH,QAAA,gBAAwHxF,EAAAM,GAAA,KAAAH,EAAA,OAAwB+C,aAAavO,KAAA,OAAAwO,QAAA,SAAAlO,OAAA+K,EAAA5J,OAAA4I,eAAA6C,WAAA,2BAAoGlB,aAAesE,SAAA,OAAAC,aAAA,SAAAC,OAAA,oBAAAC,QAAA,OAAAxE,MAAA,MAAAyE,aAAA,YAAAC,cAAA,OAAAG,aAAA,YAAyKzF,EAAAM,GAAA,wCAE18doF,oBCCjB,IAcAC,EAdyBlR,EAAQ,OAcjCmR,CACElR,EACAoL,GATF,EAVA,SAAA+F,GACEpR,EAAQ,SAaV,kBAEA,MAUeR,EAAA,QAAA0R,EAAiB","file":"static/js/6.58dfaf8c494f1b8c0dc5.js","sourcesContent":["import request from '../utils/axios'\n\nexport function startAPITestByCase(params, headers) {\n  return request({\n    url: `/api/startAPITestByCase`,\n    method: 'POST',\n    headers: headers,\n    data: params\n  })\n}\n\nexport function startAPITestBySuite(params, headers) {\n  return request({\n    url: `/api/startAPITestBySuite`,\n    method: 'POST',\n    headers: headers,\n    data: params\n  })\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/api/execution.js","<template>\n  <section>\n    <strong class=\"title\">{{$route.meta.title}} <span v-if=\"testSuiteName\"> - Suite: {{testSuiteName}}</span> </strong>\n    <!--新增界面-->\n    <el-dialog width=80% title=\"新增\" :visible.sync=\"addFormVisible\" :close-on-click-modal=\"false\"\n               style=\"width:75%; left: 12.5%\">\n      <el-form :model=\"addForm\" label-width=\"80px\" :rules=\"addFormRules\" ref=\"addForm\">\n        <el-row :gutter=\"16\">\n          <el-col :span=\"18\">\n            <el-form-item label=\"用例名称\" prop=\"name\">\n              <el-input v-model=\"addForm.name\" auto-complete=\"off\"></el-input>\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"6\">\n            <el-form-item label=\"服务名\" prop=\"service\">\n              <el-input v-model.trim=\"addForm.service\" auto-complete=\"off\"></el-input>\n            </el-form-item>\n          </el-col>\n        </el-row>\n        <el-row :gutter=\"24\">\n          <el-col :span=\"8\">\n            <el-form-item label=\"请求方法\" prop='requestMethod'>\n              <el-select v-model=\"addForm.requestMethod\" placeholder=\"请选择\">\n                <el-option v-for=\"item in methodOptions\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\">\n                </el-option>\n              </el-select>\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"8\">\n            <el-form-item label=\"接口路由\" prop='route'>\n              <el-input v-model.trim=\"addForm.route\" auto-complete=\"off\"></el-input>\n            </el-form-item>\n          </el-col>\n        </el-row>\n        <el-form-item label=\"描述\" prop='description'>\n          <el-input type=\"textarea\" :rows=\"6\" v-model=\"addForm.description\"></el-input>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click.native=\"addFormVisible = false\">取消</el-button>\n        <el-button type=\"primary\" @click.native=\"addSubmit\" :loading=\"addLoading\">提交</el-button>\n      </div>\n    </el-dialog>\n\n    <!--工具条-->\n    <el-col :span=\"24\" class=\"toolbar\" style=\"padding-bottom: 0px\">\n      <el-form :inline=\"true\">\n        <router-link :to=\"{ name: 'TestSuiteList', params: { project_id: this.$route.params.project_id } }\"\n                     style='text-decoration: none;color: aliceblue;'>\n          <el-button class=\"return-list\">\n            <i class=\"el-icon-d-arrow-left\" return-list style=\"margin-right: 5px\"></i>用例组列表\n          </el-button>\n        </router-link>\n        <el-form-item style=\"margin-left: 30px\">\n          <el-button class=\"el-icon-plus\" type=\"primary\" @click=\"handleAdd\"> 新建接口用例</el-button>\n        </el-form-item>\n        <el-form-item style=\"float: right;  margin-right: 100px\">\n          <el-select v-model=\"testEnv\" style=\"margin-right: 20px\" @visible-change='checkActiveTestEnv' clearable\n                     placeholder=\"测试环境\">\n            <el-option\n              v-for=\"(item,index) in testEnvs\"\n              :key=\"index+''\"\n              :label=\"item.name\"\n              :value=\"item._id\">\n            </el-option>\n          </el-select>\n          <el-form-item>\n            <el-input v-model.trim=\"filters.name\" placeholder=\"名称\" @keyup.enter.native=\"getTestCaseList\"></el-input>\n          </el-form-item>\n          <el-form-item>\n            <el-button type=\"primary\" class=\"el-icon-search\" @click=\"getTestCaseList\"> 查询</el-button>\n          </el-form-item>\n        </el-form-item>\n      </el-form>\n    </el-col>\n\n    <!--列表-->\n    <el-table @sort-change='sortChange' @selection-change=\"selectsChange\" :data=\"caseList\" :row-style=\"reportRowStyle\"\n              :row-class-name=\"ReportTableRow\" highlight-current-row v-loading=\"listLoading\" style=\"width: 100%;\">\n      <el-table-column type=\"selection\" min-width=\"5%\">\n      </el-table-column>\n      <el-table-column prop=\"name\" label=\"接口用例名称\" min-width=\"40%\" sortable='custom' show-overflow-tooltip>\n        <template slot-scope=\"scope\">\n          <router-link :to=\"{ name: 'EditTestCase', params: {test_case_id: scope.row._id}}\"\n                       style='text-decoration: none;color: #000000;'>{{ scope.row.name }}\n          </router-link>\n        </template>\n      </el-table-column>\n      <el-table-column prop=\"route\" label=\"Request\" min-width=\"40%\" sortable='custom' show-overflow-tooltip>\n        <template slot-scope=\"scope\">\n          <span class=\"HttpStatus\">{{scope.row.requestMethod}}</span>\n          <span style=\"font-size: 16px\">{{scope.row.route}}</span>\n        </template>\n      </el-table-column>\n      <el-table-column prop=\"description\" label=\"用例描述\" min-width=\"20%\" show-overflow-tooltip>\n        <template slot-scope=\"scope\">\n          <span>{{scope.row.description}}</span>\n        </template>\n      </el-table-column>\n      <el-table-column prop=\"service\" label=\"Service\" min-width=\"20%\" show-overflow-tooltip>\n        <template slot-scope=\"scope\">\n          <span>{{scope.row.service}}</span>\n        </template>\n      </el-table-column>\n      <el-table-column prop=\"sequence\" label=\"Sequence\" min-width=\"25%\" sortable='custom' show-overflow-tooltip>\n        <template slot-scope=\"scope\">\n          <el-input v-model.number=\"scope.row.sequence\" type=\"number\" auto-complete=\"false\"\n                    @keyup.enter.native=\"updateSequence(scope.$index, scope.row)\" style=\"width: 70px\"></el-input>\n        </template>\n      </el-table-column>\n      <el-table-column prop=\"createAt\" label=\"创建时间\" min-width=\"25%\" sortable='custom' show-overflow-tooltip>\n      </el-table-column>\n      <!--      <el-table-column prop=\"createUser\" label=\"Creator\" min-width=\"30px\" sortable='custom' show-overflow-tooltip>-->\n      <!--      </el-table-column>-->\n      <!--      <el-table-column prop=\"lastUpdateTime\" label=\"UpdateTime\" min-width=\"35px\" sortable='custom' show-overflow-tooltip>-->\n      <!--      </el-table-column>-->\n      <!--      <el-table-column prop=\"lastUpdateUser\" label=\"Updater\" min-width=\"30px\" sortable='custom' show-overflow-tooltip>-->\n      <!--      </el-table-column>-->\n      <el-table-column prop=\"result\" label=\"测试结果\" min-width=\"25%\" sortable='custom' show-overflow-tooltip>\n        <template slot-scope=\"scope\">\n          <span\n            v-show=\"!scope.row.hasOwnProperty('lastManualResult') || scope.row.lastManualResult.status!='ok'&&scope.row.lastManualResult.status!='failed'\">尚无测试结果</span>\n          <span v-show=\"scope.row.lastManualResult && scope.row.lastManualResult.status==='ok'\"\n                style=\"color: #11b95c;cursor:pointer;\" @click=\"showResult(scope.row)\">通过,查看详情</span>\n          <span v-show=\"scope.row.lastManualResult && scope.row.lastManualResult.status==='failed'\"\n                style=\"color: #cc0000;cursor:pointer;\" @click=\"showResult(scope.row)\">失败,查看详情</span>\n        </template>\n      </el-table-column>\n      <el-table-column prop=\"status\" label=\"状态\" min-width=\"20%\" sortable='custom'>\n        <template slot-scope=\"scope\">\n          <img v-show=\"scope.row.status\" src=\"../../../assets/imgs/icon-yes.svg\"/>\n          <img v-show=\"!scope.row.status\" src=\"../../../assets/imgs/icon-no.svg\"/>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"操作\" min-width=\"80%\">\n        <template slot-scope=\"scope\">\n          <el-button type=\"primary\" size=\"small\" :loading=\"testLoading\" @click=\"onTest(scope.$index, scope.row)\">测试\n          </el-button>\n          <el-button class=\"copyBtn\" size=\"small\" :loading=\"copyLoading\" @click=\"copyCase(scope.$index, scope.row)\">复制\n          </el-button>\n          <el-button type=\"info\" size=\"small\" :loading=\"statusChangeLoading\"\n                     @click=\"handleChangeStatus(scope.$index, scope.row)\"> {{scope.row.status===false?'启用':'禁用'}}\n          </el-button>\n          <el-button type=\"danger\" size=\"small\" :loading=\"delLoading\" @click=\"handleDel(scope.$index, scope.row)\">删除\n          </el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <!--翻页工具条-->\n    <el-col :span=\"24\" class=\"toolbar\">\n      <el-pagination\n        style=\"float: right\"\n        @size-change=\"handleSizeChange\"\n        @current-change=\"handleCurrentChange\"\n        :current-page.sync=\"currentPage\"\n        v-if=\"totalNum != 0\"\n        :page-sizes=\"[10, 20, 40]\"\n        :page-size=\"size\"\n        layout=\"total, sizes, prev, pager, next, jumper\"\n        :total=\"totalNum\">\n      </el-pagination>\n    </el-col>\n\n    <!--测试结果-->\n    <el-dialog title=\"测试结果\" :visible.sync=\"testResultStatus\" :close-on-click-modal=\"false\">\n      <div slot=\"title\" class=\"header-title\">\n        <span style=\"font-size: 28px\">测试结果</span>\n        <span v-show=\"result.name\" style=\"font-size: 20px\"> - {{ result.name }}</span>\n      </div>\n      <div class=\"test-result\">\n        <div v-show=\"result.env\">测试环境 : {{result.env}}</div>\n        <div>请求地址 : {{result.url}}</div>\n        <div>请求方式 : {{result.requestMethod}}</div>\n        <div>请求开始时间 : {{result.testStartTime}}</div>\n        <div>请求所用时间 : {{result.spendTimeInSec}}s</div>\n        <div class=\"divider-line\"></div>\n        <div style=\"font-size: 25px;\">数据初始化:</div>\n        <div v-for=\"item in result.dataInitResult\">\n          <pre>{{item}}</pre>\n        </div>\n        <div v-if=\"!result.dataInitResult || result.dataInitResult && Object.keys(result.dataInitResult).length <= 0\">\n          (无需数据初始化)\n        </div>\n        <div class=\"divider-line\"></div>\n        <div style=\"font-size: 25px;\">请求头部:</div>\n        <div v-for=\"(value, key) in result.headers\" :key=\"key\">{{key}}:&nbsp&nbsp{{value}}</div>\n        <div v-if=\"!result.headers || result.headers && Object.keys(result.headers).length <= 0\">\n          (无任何header)\n        </div>\n        <div class=\"divider-line\"></div>\n        <div style=\"font-size: 25px;\">Cookies:</div>\n        <div v-for=\"item in result.cookies\">{{item.name}} = {{item.value}}</div>\n        <div v-if=\"!result.cookies || result.cookies && result.cookies.length <= 0 \">(无任何Cookie)\n        </div>\n        <div class=\"divider-line\"></div>\n        <div style=\"font-size: 25px;\">请求参数:</div>\n        <div v-show=\"result.requestBody\" class=\"resultStyle resultData\">\n          <pre>{{result.requestBody}}</pre>\n        </div>\n        <div v-show=\"!result.requestBody\" class=\"resultStyle resultData\">无</div>\n        <div class=\"divider-line\"></div>\n        <div style=\"font-size: 25px;\">预期结果:</div>\n        <div>HTTP状态码: {{result.checkResponseCode}}</div>\n        <div>JSON正则校验:\n          <pre>{{result.checkResponseBody}}</pre>\n          <span v-show=\"!result.checkResponseBody\">(无)</span>\n        </div>\n        <div>数值校验:\n          <pre>{{result.checkResponseNumber}}</pre>\n          <span v-show=\"!result.checkResponseNumber\">(无)</span>\n        </div>\n        <div class=\"divider-line\"></div>\n        <div style=\"font-size: 25px;\">实际结果:</div>\n        <div>HTTP状态码: {{result.responseStatusCode}}</div>\n        <div>实际返回内容:</div>\n        <div v-show=\"result.responseData\" class=\"resultStyle resultData\">\n          <pre>{{result.responseData}}</pre>\n        </div>\n        <div v-show=\"!result.responseData\" class=\"resultStyle resultData\">(无返回内容)</div>\n        <div class=\"divider-line\"></div>\n        <div style=\"font-size: 25px\">测试结论:</div>\n        <div v-for=\"item in result.testConclusion\" v-show=\"result.testConclusion\"\n             style=\"overflow:auto;overflow-x:hidden;border: 1px solid #e6e6e6;padding: 10px;width: 88%;\n                    word-break: break-all;line-height:25px\">\n          结论：{{item.resultType}} <br/>\n          原因：{{item.reason}}\n        </div>\n        <div v-show=\"!result.testConclusion\"\n             style=\"overflow:auto;overflow-x:hidden;border: 1px solid #e6e6e6;padding: 10px;width: 90%;word-break: break-all;line-height:25px;text-align: center\">\n          无测试结论\n        </div>\n      </div>\n    </el-dialog>\n  </section>\n</template>\n\n<script>\n    import {getTestCases, updateTestCase, addTestCase, copyTestCase} from \"../../../api/testCase\";\n    import {getTestSuiteInfo} from \"../../../api/testSuite\";\n    import {getEnvConfigs} from \"../../../api/envConfig\";\n    import {startAPITestByCase} from \"../../../api/execution\";\n    import moment from \"moment\";\n\n    export default {\n        name: \"TestCaseList\",\n        data() {\n            let checkRoute = (rule, value, callback) => {\n                if (value != \"\" && value != null) {\n                    if (value.indexOf('/') == 0) {\n                        callback()\n                    } else {\n                        callback(new Error('请输入路由(如: /chat)'))\n                        this.$message.warning({\n                            message: '路由格式不正确!',\n                            center: true,\n                        });\n                    }\n                } else {\n                    callback()\n                }\n            };\n            return {\n                testSuiteName: '',\n                methodOptions: [{label: \"GET\", value: \"GET\"},\n                    {label: \"POST\", value: \"POST\"},\n                    {label: \"PUT\", value: \"PUT\"},\n                    {label: \"DELETE\", value: \"DELETE\"},\n                    {label: \"OPTIONS\", value: \"OPTIONS\"},\n                    {label: \"PATCH\", value: \"PATCH\"},\n                    {label: \"HEAD\", value: \"HEAD\"}],\n                caseList: [],\n                listLoading: false,\n                copyLoading: false,\n                testLoading: false,\n                statusChangeLoading: false,\n                delLoading: false,\n                pageInfoIndex: -1,\n                size: 10,\n                skip: 0,\n                sortBy: 'sequence',\n                order: 'ascending',\n                currentPage: 1,\n                totalNum: 0,\n\n                testEnv: '',\n                testEnvs: [],\n\n                hasSelected: false,\n                selects: [],//列表选中列\n\n                testResultStatus: false,\n                result: {},\n\n                addFormVisible: false,\n                activeIndex: \"\",\n\n                //新增界面数据\n                addForm: {\n                    name: '',\n                    description: '',\n                    requestMethod: '',\n                    route: '',\n                    service: ''\n                },\n                addLoading: false,\n                addFormRules: {\n                    name: [\n                        {required: true, message: '请输入名称', trigger: 'blur'},\n                        {min: 1, max: 100, message: '长度在 1 到 100 个字符', trigger: 'blur'}\n                    ],\n                    requestMethod: [\n                        {required: true, message: '请选择请求方法', trigger: 'blur'}\n                    ],\n                    route: [\n                        {required: true, message: '请输入路由(如:/chat)', trigger: 'blur'},\n                        {validator: checkRoute, trigger: 'blur'}\n                    ],\n                    service: [\n                        {required: false, message: '请输入服务名', trigger: 'blur'}\n                    ],\n                    description: [\n                        {required: false, message: '请输入描述', trigger: 'blur'},\n                        {max: 1024, message: '不能超过1024个字符', trigger: 'blur'}\n                    ]\n                },\n                filters: {\n                    name: ''\n                }\n            }\n        },\n        methods: {\n            handleSelect(key, keyPath) {\n                this.activeIndex = key;\n            },\n            queryTestCases(params) {\n                let self = this;\n                this.listLoading = true;\n                if (self.filters.name.trim() !== '') {\n                    params['name'] = self.filters.name.trim()\n                }\n                let header = {};\n                getTestCases(self.$route.params.project_id, self.$route.params.test_suite_id, params, header).then((res) => {\n                    self.listLoading = false;\n                    let {status, data} = res;\n                    if (status === 'ok') {\n                        self.totalNum = data.totalNum;\n                        self.caseList = data.rows;\n                    } else {\n                        self.$message.error({\n                            message: data,\n                            center: true,\n                        })\n                    }\n                }).catch((error) => {\n                    self.$message.error({\n                        message: '接口用例列表获取失败，请稍后刷新重试哦~',\n                        center: true,\n                    });\n                    self.listLoading = false;\n                })\n            },\n            async getTestCaseList() {\n                let self = this;\n                let params = {\n                    size: self.size, skip: self.skip, sortBy: self.sortBy, order: self.order,\n                    projectId: self.$route.params.project_id, testSuiteId: self.$route.params.test_suite_id\n                };\n                this.queryTestCases(params);\n            },\n            handleChangeStatus: function (index, row) {\n                let self = this;\n                self.statusChangeLoading = true;\n                let status = !row.status;\n                let params = {\n                    'status': status\n                };\n                let headers = {\n                    \"Content-Type\": \"application/json\",\n                };\n                updateTestCase(this.$route.params.project_id, this.$route.params.test_suite_id, row._id, params, headers).then(res => {\n                    let {status, data} = res;\n                    self.statusChangeLoading = false;\n                    if (status == 'ok') {\n                        self.$message({\n                            message: '状态变更成功',\n                            center: true,\n                            type: 'success'\n                        });\n                        row.status = !row.status;\n                    } else {\n                        self.$message.error({\n                            message: data,\n                            center: true,\n                        })\n                    }\n                    self.getTestCaseList()\n                }).catch(() => {\n                    self.$message.error({\n                        message: '用例状态更新失败,请稍后重试哦',\n                        center: true\n                    })\n                    self.statusChangeLoading = false;\n                    this.getTestCaseList()\n                });\n            },\n            handleSizeChange(val) {\n                let self = this;\n                self.$store.dispatch('pageInfo/setTestCasePageInfo', {\n                    size: val,\n                    testSuiteId: self.$route.params.test_suite_id\n                })\n                self.size = val\n                self.listLoading = true;\n                let params = {\n                    size: self.size, skip: self.skip, sortBy: self.sortBy, order: self.order,\n                    projectId: self.$route.params.project_id, testSuiteId: self.$route.params.test_suite_id\n                };\n                this.queryTestCases(params);\n            },\n            handleCurrentChange(val) {\n                let self = this;\n                self.listLoading = true;\n                self.$store.dispatch('pageInfo/setTestCasePageInfo', {\n                    skip: (val - 1) * self.size,\n                    currentPage: val,\n                    testSuiteId: self.$route.params.test_suite_id\n                })\n                self.skip = (val - 1) * self.size\n                let params = {\n                    size: self.size, skip: self.skip, sortBy: self.sortBy, order: self.order,\n                    projectId: self.$route.params.project_id, testSuiteId: self.$route.params.test_suite_id\n                };\n                this.queryTestCases(params);\n            },\n            //排序\n            sortChange(column) {\n                let self = this;\n                self.listLoading = true;\n                self.sortBy = column.prop;\n                self.order = column.order;\n                let params = {\n                    size: self.size, skip: self.skip, sortBy: self.sortBy, order: self.order,\n                    projectId: self.$route.params.project_id, testSuiteId: self.$route.params.test_suite_id\n                };\n                this.queryTestCases(params);\n            },\n            //新增用例\n            addSubmit: function () {\n                this.$refs.addForm.validate((valid) => {\n                    if (valid) {\n                        let self = this;\n                        this.$confirm('确认提交吗？', '提示', {}).then(() => {\n                            self.addLoading = true;\n                            let params = {\n                                name: self.addForm.name.trim(),\n                                requestMethod: self.addForm.requestMethod,\n                                route: self.addForm.route,\n                                service: self.addForm.service,\n                                description: self.addForm.description.trim(),\n                                createUser: self.$store.getters.email,\n                            };\n                            let header = {};\n                            addTestCase(self.$route.params.project_id, self.$route.params.test_suite_id, params, header).then((res) => {\n                                self.addLoading = false;\n                                let {status, data} = res;\n                                if (status === 'ok') {\n                                    self.$message.success({\n                                        message: '保存成功',\n                                        center: true,\n                                    });\n                                    self.$refs['addForm'].resetFields();\n                                    self.addFormVisible = false;\n                                    self.getTestCaseList();\n                                } else {\n                                    self.$message.error({\n                                        message: data,\n                                        center: true,\n                                    })\n                                }\n                            }).catch(() => {\n                                self.$message.error({\n                                    message: '新增接口用例失败,请稍后重试哦',\n                                    center: true\n                                })\n                                self.addLoading = false;\n                            });\n                        });\n                    }\n                });\n            },\n            checkSequence(number) {\n                return new RegExp(\"^[1-9][0-9]*$\").test(number);\n            },\n            updateSequence(index, row) {\n                this.$confirm('确认更新执行顺序吗?', '提示', {\n                    type: 'warning'\n                }).then(() => {\n                    if (!this.checkSequence(row.sequence)) {\n                        this.$message.error({\n                            message: \"请输入正整数\",\n                            center: true\n                        })\n                        this.getTestCaseList();\n                        return\n                    }\n                    let self = this;\n                    self.listLoading = true;\n                    let params = {\n                        sequence: row.sequence,\n                    };\n                    let header = {};\n                    updateTestCase(self.$route.params.project_id, self.$route.params.test_suite_id, row._id, params, header).then((res) => {\n                        self.listLoading = false;\n                        let {status, data} = res;\n                        if (status === 'ok') {\n                            self.$message.success({\n                                message: '更新执行顺序成功',\n                                center: true\n                            })\n                            self.getTestCaseList();\n                        } else {\n                            self.$message.error({\n                                message: data,\n                                center: true\n                            })\n                            self.getTestCaseList();\n                        }\n                    }).catch(() => {\n                        self.$message.error({\n                            message: '更新失败,请稍后重试哦',\n                            center: true\n                        })\n                        self.listLoading = false;\n                    });\n                });\n            },\n            handleDel(index, row) {\n                this.$confirm('确认删除该记录吗?', '提示', {\n                    type: 'warning'\n                }).then(() => {\n                    let self = this;\n                    self.delLoading = true;\n                    let params =\n                        {\n                            isDeleted: true,\n                        };\n                    let header = {};\n                    updateTestCase(self.$route.params.project_id, self.$route.params.test_suite_id, row._id, params, header).then((res) => {\n                        self.delLoading = false;\n                        let {status, data} = res;\n                        if (status === 'ok') {\n                            self.$message.success({\n                                message: '删除成功',\n                                center: true\n                            })\n                            self.getTestCaseList();\n                        } else {\n                            self.$message.error({\n                                message: data,\n                                center: true\n                            })\n                            self.getTestCaseList();\n                        }\n                    }).catch(() => {\n                        self.$message.error({\n                            message: '删除失败,请稍后重试哦',\n                            center: true\n                        })\n                        self.delLoading = false;\n                    });\n                });\n            },\n            getTestEnvList() {\n                let self = this;\n                let header = {};\n                let params = {status: true};\n                getEnvConfigs(params, header).then((res) => {\n                    let {status, data} = res\n                    if (status === 'ok') {\n                        this.testEnvs = data.rows\n                    } else {\n                        self.$message.error({\n                            message: data,\n                            center: true,\n                        })\n                    }\n                }).catch((error) => {\n                    self.$message.error({\n                        message: '暂时无法获取环境列表，请稍后刷新重试~',\n                        center: true,\n                    });\n                })\n            },\n            checkActiveTestEnv: function () {\n                let self = this;\n                if (self.testEnvs.length < 1) {\n                    self.$message.warning({\n                        message: '未找到「启用的测试环境」哦, 请前往「环境配置」进行设置',\n                        center: true,\n                    })\n                }\n            },\n            //显示新增界面\n            handleAdd: function () {\n                this.addFormVisible = true;\n            },\n            // 修改table tr行的背景色\n            reportRowStyle({row, rowIndex}) {\n                if (!(row.status === true))\n                    return 'background-color: #DDDDDD'\n                else {\n                    return ''\n                }\n            },\n            ReportTableRow({row, rowIndex}) {\n                return 'reportTableRow';\n            },\n            selectsChange: function (selects) {\n                if (selects.length > 0) {\n                    this.selects = selects;\n                    this.hasSelected = true;\n                } else {\n                    this.hasSelected = false;\n                }\n            },\n            warmPrompt() {\n                let self = this;\n                let showPrompt = self.$router.history.current.params.showWarmPrompt;\n                if (showPrompt) {\n                    self.$message.info({\n                        message: '测试用例默认按照「Sequence」和「创建时间」正序执行~',\n                        center: true,\n                    })\n                }\n            },\n            onTest(index, row) {\n                if (this.testEnv) {\n                    row.testStatus = true;\n                    let self = this;\n                    self.testLoading = true;\n                    let headers = {\"Content-Type\": \"application/json\"};\n                    let params = {\n                        testCaseIdList: [row._id],\n                        testEnvId: self.testEnv,\n                        executionUser: self.$store.getters.email,\n                        executionMode: 'manual'\n                    };\n                    startAPITestByCase(params, headers).then((res) => {\n                        self.testLoading = false;\n                        let {status, data} = res;\n                        if (status === 'ok') {\n                            self.getTestCaseList()\n                            row.testStatus = false;\n                        } else {\n                            self.$message.warning({\n                                message: data,\n                                center: true,\n                            })\n                        }\n                        self.getTestCaseList()\n                        row.testStatus = false;\n                    }).catch((error) => {\n                        self.$message.error({\n                            message: '接口用例执行异常/超时，请稍后重试哦~',\n                            center: true,\n                        });\n                        self.testLoading = false;\n                        self.getTestCaseList()\n                        row.testStatus = false;\n                    })\n                } else {\n                    this.$message({\n                        message: '请选择测试环境, 在测试按钮上方哦~',\n                        center: true,\n                        type: 'warning'\n                    })\n                }\n            },\n            showResult(row) {\n                this.listLoading = true;\n                this.result[\"name\"] = row.name;\n                this.getResult(row.lastManualResult);\n            },\n            getResult(testResult) {\n                let self = this;\n                this.listLoading = false;\n                self.result[\"env\"] = testResult.env;\n                self.result[\"url\"] = testResult.testCaseDetail.url;\n                self.result[\"requestMethod\"] = testResult.testCaseDetail.requestMethod;\n                if (testResult.dataInitResult && testResult.dataInitResult.length > 0) {\n                    testResult.dataInitResult.forEach(item => {\n                        try {\n                            if (item.query && typeof (item.query) == \"string\") {\n                                item.query = JSON.parse(item.query);\n                            }\n                            if (item.set && typeof (item.set) == \"string\") {\n                                item.set = JSON.parse(item.set);\n                            }\n                        } catch (e) {\n                            console.log(e)\n                        }\n                    })\n                }\n                self.result[\"dataInitResult\"] = testResult.dataInitResult;\n                self.result[\"headers\"] = testResult.headers;\n                self.result[\"cookies\"] = testResult.testCaseDetail.cookies;\n                self.result[\"requestBody\"] = testResult.testCaseDetail.requestBody;\n                if (testResult.checkResponseCode) {\n                    self.result[\"checkResponseCode\"] = testResult.checkResponseCode;\n                } else {\n                    self.result[\"checkResponseCode\"] = '无'\n                }\n                if (testResult.checkResponseBody && !(testResult.checkResponseBody.length === 1 && testResult.checkResponseBody[0]['regex'].trim() === '')) {\n                    self.result[\"checkResponseBody\"] = testResult.checkResponseBody;\n                } else {\n                    self.result[\"checkResponseBody\"] = '无'\n                }\n                if (testResult.checkResponseNumber && !(testResult.checkResponseNumber.length === 1 && testResult.checkResponseNumber[0]['expression'].trim() === '')) {\n                    self.result[\"checkResponseNumber\"] = testResult.checkResponseNumber;\n                } else {\n                    self.result[\"checkResponseNumber\"] = '无'\n                }\n                self.result[\"result\"] = testResult.status;\n                self.result[\"responseStatusCode\"] = testResult.responseStatusCode;\n                try {\n                    self.result[\"responseData\"] = JSON.parse(testResult.responseData);\n                    //self.result[\"responseData\"] = JSON.parse(testResult.responseData.replace(/'/g, \"\\\"\")\n                    // .replace(/None/g, \"null\").replace(/True/g, \"true\").replace(/False/g, \"false\"));\n                } catch (error) {\n                    self.result[\"responseData\"] = testResult.responseData;\n                }\n                self.result[\"testConclusion\"] = testResult.testConclusion;\n                self.result[\"testStartTime\"] = moment(testResult.testStartTime).format(\"YYYY年MM月DD日HH时mm分ss秒\");\n                self.result[\"spendTimeInSec\"] = testResult.spendTimeInSec;\n                self.testResultStatus = true;\n            },\n            copyCase(index, row) {\n                let self = this;\n                this.$confirm('确认复制吗？', '提示', {}).then(() => {\n                    self.copyLoading = true;\n                    let header = {\"Content-Type\": \"application/json\"};\n                    let params = {\n                        createUser: self.$store.getters.email || 'anonymous'\n                    };\n                    copyTestCase(self.$route.params.project_id, self.$route.params.test_suite_id, row._id, params, header).then((res) => {\n                        self.copyLoading = false;\n                        let {status, data} = res;\n                        if (status === 'ok') {\n                            self.$message.success({\n                                message: data,\n                                center: true,\n                            })\n                        } else {\n                            self.$message.error({\n                                message: data,\n                                center: true,\n                            })\n                        }\n                        self.getTestCaseList()\n                    }).catch((error) => {\n                        self.$message.error({\n                            message: '用例复制失败，请稍后重试哦~',\n                            center: true,\n                        });\n                        self.copyLoading = false;\n                    })\n                });\n            }\n        },\n        mounted() {\n            this.getTestCaseList();\n            this.getTestEnvList();\n            getTestSuiteInfo(this.$route.params.project_id, this.$route.params.test_suite_id).then((res) => {\n                if (res.status === 'ok') {\n                    this.testSuiteName = res.data.name;\n                }\n            });\n            this.warmPrompt();\n        },\n        created() {\n            this.pageInfoIndex = this.$store.getters.testCasePageInfo.findIndex(ele => ele.testSuiteId === this.$route.params.test_suite_id)\n            this.size = this.pageInfoIndex === -1 ?\n                10 : (this.$store.getters.testCasePageInfo[this.pageInfoIndex]\n                && this.$store.getters.testCasePageInfo[this.pageInfoIndex].size) || 10\n            this.skip = this.pageInfoIndex === -1 ?\n                0 : (this.$store.getters.testCasePageInfo[this.pageInfoIndex]\n                && this.$store.getters.testCasePageInfo[this.pageInfoIndex].skip) || 0\n            this.sortBy = this.pageInfoIndex === -1 ?\n                'sequence' : (this.$store.getters.testCasePageInfo[this.pageInfoIndex]\n                && this.$store.getters.testCasePageInfo[this.pageInfoIndex].sortBy) || 'sequence'\n            this.order = this.pageInfoIndex === -1 ?\n                'ascending' : (this.$store.getters.testCasePageInfo[this.pageInfoIndex]\n                && this.$store.getters.testCasePageInfo[this.pageInfoIndex].order) || 'ascending'\n            this.currentPage = this.pageInfoIndex === -1 ?\n                1 : (this.$store.getters.testCasePageInfo[this.pageInfoIndex]\n                && this.$store.getters.testCasePageInfo[this.pageInfoIndex].currentPage) || 1\n        }\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n  .title {\n    float: left;\n    color: #475669;\n    font-size: 25px;\n    margin: 10px 5px;\n    font-family: Arial;\n\n    span {\n      font-size: 20px;\n    }\n  }\n\n  .return-list {\n    margin-top: 0px;\n    margin-bottom: 10px;\n    margin-left: 20px;\n    border-radius: 25px;\n  }\n\n  .HttpStatus {\n    border-radius: 25px;\n    padding: 10px;\n    box-sizing: border-box;\n    color: #fff;\n    font-size: 15px;\n    background-color: $--color-primary;\n    text-align: center;\n    margin-right: 10px;\n  }\n\n  .test-result {\n    height: 800px;\n    margin-top: -20px;\n    overflow: auto;\n    overflow-x: hidden;\n    border: 1px solid #e6e6e6;\n    font-size: 14px;\n    line-height: 25px;\n\n    div {\n      margin-left: 2%;\n      margin-top: 10px;\n      margin-bottom: 10px;\n      word-wrap: break-word; //文本过长自动换行\n    }\n\n    .title {\n      font-weight: bold;\n      font-size: 14px;\n    }\n\n    pre {\n      white-space: pre-wrap;\n      white-space: -moz-pre-wrap;\n      white-space: -o-pre-wrap;\n      word-wrap: break-word;\n    }\n\n    .resultData {\n      overflow: auto;\n      display: block;\n      overflow-x: hidden;\n      padding: 0.5em;\n      background: #333;\n      color: white;\n      border: 1px solid #e6e6e6;\n      word-break: break-all;\n      line-height: 25px;\n      width: 90%;\n    }\n\n    .divider-line {\n      margin-top: 20px;\n      margin-bottom: 10px;\n      border: 1px solid #e6e6e6;\n      width: 92%;\n      position: relative\n    }\n  }\n\n  .copyBtn {\n    color: #fff;\n    background-color: #33CC00;\n    border-color: #33CC00;\n  }\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/project/autoTest/TestCaseList.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',[_c('strong',{staticClass:\"title\"},[_vm._v(_vm._s(_vm.$route.meta.title)+\" \"),(_vm.testSuiteName)?_c('span',[_vm._v(\" - Suite: \"+_vm._s(_vm.testSuiteName))]):_vm._e()]),_vm._v(\" \"),_c('el-dialog',{staticStyle:{\"width\":\"75%\",\"left\":\"12.5%\"},attrs:{\"width\":\"80%\",\"title\":\"新增\",\"visible\":_vm.addFormVisible,\"close-on-click-modal\":false},on:{\"update:visible\":function($event){_vm.addFormVisible=$event}}},[_c('el-form',{ref:\"addForm\",attrs:{\"model\":_vm.addForm,\"label-width\":\"80px\",\"rules\":_vm.addFormRules}},[_c('el-row',{attrs:{\"gutter\":16}},[_c('el-col',{attrs:{\"span\":18}},[_c('el-form-item',{attrs:{\"label\":\"用例名称\",\"prop\":\"name\"}},[_c('el-input',{attrs:{\"auto-complete\":\"off\"},model:{value:(_vm.addForm.name),callback:function ($$v) {_vm.$set(_vm.addForm, \"name\", $$v)},expression:\"addForm.name\"}})],1)],1),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":6}},[_c('el-form-item',{attrs:{\"label\":\"服务名\",\"prop\":\"service\"}},[_c('el-input',{attrs:{\"auto-complete\":\"off\"},model:{value:(_vm.addForm.service),callback:function ($$v) {_vm.$set(_vm.addForm, \"service\", (typeof $$v === 'string'? $$v.trim(): $$v))},expression:\"addForm.service\"}})],1)],1)],1),_vm._v(\" \"),_c('el-row',{attrs:{\"gutter\":24}},[_c('el-col',{attrs:{\"span\":8}},[_c('el-form-item',{attrs:{\"label\":\"请求方法\",\"prop\":\"requestMethod\"}},[_c('el-select',{attrs:{\"placeholder\":\"请选择\"},model:{value:(_vm.addForm.requestMethod),callback:function ($$v) {_vm.$set(_vm.addForm, \"requestMethod\", $$v)},expression:\"addForm.requestMethod\"}},_vm._l((_vm.methodOptions),function(item){return _c('el-option',{key:item.value,attrs:{\"label\":item.label,\"value\":item.value}})}),1)],1)],1),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":8}},[_c('el-form-item',{attrs:{\"label\":\"接口路由\",\"prop\":\"route\"}},[_c('el-input',{attrs:{\"auto-complete\":\"off\"},model:{value:(_vm.addForm.route),callback:function ($$v) {_vm.$set(_vm.addForm, \"route\", (typeof $$v === 'string'? $$v.trim(): $$v))},expression:\"addForm.route\"}})],1)],1)],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"描述\",\"prop\":\"description\"}},[_c('el-input',{attrs:{\"type\":\"textarea\",\"rows\":6},model:{value:(_vm.addForm.description),callback:function ($$v) {_vm.$set(_vm.addForm, \"description\", $$v)},expression:\"addForm.description\"}})],1)],1),_vm._v(\" \"),_c('div',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{nativeOn:{\"click\":function($event){_vm.addFormVisible = false}}},[_vm._v(\"取消\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"primary\",\"loading\":_vm.addLoading},nativeOn:{\"click\":function($event){return _vm.addSubmit($event)}}},[_vm._v(\"提交\")])],1)],1),_vm._v(\" \"),_c('el-col',{staticClass:\"toolbar\",staticStyle:{\"padding-bottom\":\"0px\"},attrs:{\"span\":24}},[_c('el-form',{attrs:{\"inline\":true}},[_c('router-link',{staticStyle:{\"text-decoration\":\"none\",\"color\":\"aliceblue\"},attrs:{\"to\":{ name: 'TestSuiteList', params: { project_id: this.$route.params.project_id } }}},[_c('el-button',{staticClass:\"return-list\"},[_c('i',{staticClass:\"el-icon-d-arrow-left\",staticStyle:{\"margin-right\":\"5px\"},attrs:{\"return-list\":\"\"}}),_vm._v(\"用例组列表\\n        \")])],1),_vm._v(\" \"),_c('el-form-item',{staticStyle:{\"margin-left\":\"30px\"}},[_c('el-button',{staticClass:\"el-icon-plus\",attrs:{\"type\":\"primary\"},on:{\"click\":_vm.handleAdd}},[_vm._v(\" 新建接口用例\")])],1),_vm._v(\" \"),_c('el-form-item',{staticStyle:{\"float\":\"right\",\"margin-right\":\"100px\"}},[_c('el-select',{staticStyle:{\"margin-right\":\"20px\"},attrs:{\"clearable\":\"\",\"placeholder\":\"测试环境\"},on:{\"visible-change\":_vm.checkActiveTestEnv},model:{value:(_vm.testEnv),callback:function ($$v) {_vm.testEnv=$$v},expression:\"testEnv\"}},_vm._l((_vm.testEnvs),function(item,index){return _c('el-option',{key:index+'',attrs:{\"label\":item.name,\"value\":item._id}})}),1),_vm._v(\" \"),_c('el-form-item',[_c('el-input',{attrs:{\"placeholder\":\"名称\"},nativeOn:{\"keyup\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\")){ return null; }return _vm.getTestCaseList($event)}},model:{value:(_vm.filters.name),callback:function ($$v) {_vm.$set(_vm.filters, \"name\", (typeof $$v === 'string'? $$v.trim(): $$v))},expression:\"filters.name\"}})],1),_vm._v(\" \"),_c('el-form-item',[_c('el-button',{staticClass:\"el-icon-search\",attrs:{\"type\":\"primary\"},on:{\"click\":_vm.getTestCaseList}},[_vm._v(\" 查询\")])],1)],1)],1)],1),_vm._v(\" \"),_c('el-table',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.listLoading),expression:\"listLoading\"}],staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.caseList,\"row-style\":_vm.reportRowStyle,\"row-class-name\":_vm.ReportTableRow,\"highlight-current-row\":\"\"},on:{\"sort-change\":_vm.sortChange,\"selection-change\":_vm.selectsChange}},[_c('el-table-column',{attrs:{\"type\":\"selection\",\"min-width\":\"5%\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"name\",\"label\":\"接口用例名称\",\"min-width\":\"40%\",\"sortable\":\"custom\",\"show-overflow-tooltip\":\"\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('router-link',{staticStyle:{\"text-decoration\":\"none\",\"color\":\"#000000\"},attrs:{\"to\":{ name: 'EditTestCase', params: {test_case_id: scope.row._id}}}},[_vm._v(_vm._s(scope.row.name)+\"\\n        \")])]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"route\",\"label\":\"Request\",\"min-width\":\"40%\",\"sortable\":\"custom\",\"show-overflow-tooltip\":\"\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('span',{staticClass:\"HttpStatus\"},[_vm._v(_vm._s(scope.row.requestMethod))]),_vm._v(\" \"),_c('span',{staticStyle:{\"font-size\":\"16px\"}},[_vm._v(_vm._s(scope.row.route))])]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"description\",\"label\":\"用例描述\",\"min-width\":\"20%\",\"show-overflow-tooltip\":\"\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('span',[_vm._v(_vm._s(scope.row.description))])]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"service\",\"label\":\"Service\",\"min-width\":\"20%\",\"show-overflow-tooltip\":\"\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('span',[_vm._v(_vm._s(scope.row.service))])]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"sequence\",\"label\":\"Sequence\",\"min-width\":\"25%\",\"sortable\":\"custom\",\"show-overflow-tooltip\":\"\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-input',{staticStyle:{\"width\":\"70px\"},attrs:{\"type\":\"number\",\"auto-complete\":\"false\"},nativeOn:{\"keyup\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\")){ return null; }return _vm.updateSequence(scope.$index, scope.row)}},model:{value:(scope.row.sequence),callback:function ($$v) {_vm.$set(scope.row, \"sequence\", _vm._n($$v))},expression:\"scope.row.sequence\"}})]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"createAt\",\"label\":\"创建时间\",\"min-width\":\"25%\",\"sortable\":\"custom\",\"show-overflow-tooltip\":\"\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"result\",\"label\":\"测试结果\",\"min-width\":\"25%\",\"sortable\":\"custom\",\"show-overflow-tooltip\":\"\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(!scope.row.hasOwnProperty('lastManualResult') || scope.row.lastManualResult.status!='ok'&&scope.row.lastManualResult.status!='failed'),expression:\"!scope.row.hasOwnProperty('lastManualResult') || scope.row.lastManualResult.status!='ok'&&scope.row.lastManualResult.status!='failed'\"}]},[_vm._v(\"尚无测试结果\")]),_vm._v(\" \"),_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(scope.row.lastManualResult && scope.row.lastManualResult.status==='ok'),expression:\"scope.row.lastManualResult && scope.row.lastManualResult.status==='ok'\"}],staticStyle:{\"color\":\"#11b95c\",\"cursor\":\"pointer\"},on:{\"click\":function($event){return _vm.showResult(scope.row)}}},[_vm._v(\"通过,查看详情\")]),_vm._v(\" \"),_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(scope.row.lastManualResult && scope.row.lastManualResult.status==='failed'),expression:\"scope.row.lastManualResult && scope.row.lastManualResult.status==='failed'\"}],staticStyle:{\"color\":\"#cc0000\",\"cursor\":\"pointer\"},on:{\"click\":function($event){return _vm.showResult(scope.row)}}},[_vm._v(\"失败,查看详情\")])]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"status\",\"label\":\"状态\",\"min-width\":\"20%\",\"sortable\":\"custom\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('img',{directives:[{name:\"show\",rawName:\"v-show\",value:(scope.row.status),expression:\"scope.row.status\"}],attrs:{\"src\":require(\"../../../assets/imgs/icon-yes.svg\")}}),_vm._v(\" \"),_c('img',{directives:[{name:\"show\",rawName:\"v-show\",value:(!scope.row.status),expression:\"!scope.row.status\"}],attrs:{\"src\":require(\"../../../assets/imgs/icon-no.svg\")}})]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"操作\",\"min-width\":\"80%\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"small\",\"loading\":_vm.testLoading},on:{\"click\":function($event){return _vm.onTest(scope.$index, scope.row)}}},[_vm._v(\"测试\\n        \")]),_vm._v(\" \"),_c('el-button',{staticClass:\"copyBtn\",attrs:{\"size\":\"small\",\"loading\":_vm.copyLoading},on:{\"click\":function($event){return _vm.copyCase(scope.$index, scope.row)}}},[_vm._v(\"复制\\n        \")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"info\",\"size\":\"small\",\"loading\":_vm.statusChangeLoading},on:{\"click\":function($event){return _vm.handleChangeStatus(scope.$index, scope.row)}}},[_vm._v(\" \"+_vm._s(scope.row.status===false?'启用':'禁用')+\"\\n        \")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"danger\",\"size\":\"small\",\"loading\":_vm.delLoading},on:{\"click\":function($event){return _vm.handleDel(scope.$index, scope.row)}}},[_vm._v(\"删除\\n        \")])]}}])})],1),_vm._v(\" \"),_c('el-col',{staticClass:\"toolbar\",attrs:{\"span\":24}},[(_vm.totalNum != 0)?_c('el-pagination',{staticStyle:{\"float\":\"right\"},attrs:{\"current-page\":_vm.currentPage,\"page-sizes\":[10, 20, 40],\"page-size\":_vm.size,\"layout\":\"total, sizes, prev, pager, next, jumper\",\"total\":_vm.totalNum},on:{\"size-change\":_vm.handleSizeChange,\"current-change\":_vm.handleCurrentChange,\"update:currentPage\":function($event){_vm.currentPage=$event},\"update:current-page\":function($event){_vm.currentPage=$event}}}):_vm._e()],1),_vm._v(\" \"),_c('el-dialog',{attrs:{\"title\":\"测试结果\",\"visible\":_vm.testResultStatus,\"close-on-click-modal\":false},on:{\"update:visible\":function($event){_vm.testResultStatus=$event}}},[_c('div',{staticClass:\"header-title\",attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',{staticStyle:{\"font-size\":\"28px\"}},[_vm._v(\"测试结果\")]),_vm._v(\" \"),_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.result.name),expression:\"result.name\"}],staticStyle:{\"font-size\":\"20px\"}},[_vm._v(\" - \"+_vm._s(_vm.result.name))])]),_vm._v(\" \"),_c('div',{staticClass:\"test-result\"},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.result.env),expression:\"result.env\"}]},[_vm._v(\"测试环境 : \"+_vm._s(_vm.result.env))]),_vm._v(\" \"),_c('div',[_vm._v(\"请求地址 : \"+_vm._s(_vm.result.url))]),_vm._v(\" \"),_c('div',[_vm._v(\"请求方式 : \"+_vm._s(_vm.result.requestMethod))]),_vm._v(\" \"),_c('div',[_vm._v(\"请求开始时间 : \"+_vm._s(_vm.result.testStartTime))]),_vm._v(\" \"),_c('div',[_vm._v(\"请求所用时间 : \"+_vm._s(_vm.result.spendTimeInSec)+\"s\")]),_vm._v(\" \"),_c('div',{staticClass:\"divider-line\"}),_vm._v(\" \"),_c('div',{staticStyle:{\"font-size\":\"25px\"}},[_vm._v(\"数据初始化:\")]),_vm._v(\" \"),_vm._l((_vm.result.dataInitResult),function(item){return _c('div',[_c('pre',[_vm._v(_vm._s(item))])])}),_vm._v(\" \"),(!_vm.result.dataInitResult || _vm.result.dataInitResult && Object.keys(_vm.result.dataInitResult).length <= 0)?_c('div',[_vm._v(\"\\n        (无需数据初始化)\\n      \")]):_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"divider-line\"}),_vm._v(\" \"),_c('div',{staticStyle:{\"font-size\":\"25px\"}},[_vm._v(\"请求头部:\")]),_vm._v(\" \"),_vm._l((_vm.result.headers),function(value,key){return _c('div',{key:key},[_vm._v(_vm._s(key)+\":  \"+_vm._s(value))])}),_vm._v(\" \"),(!_vm.result.headers || _vm.result.headers && Object.keys(_vm.result.headers).length <= 0)?_c('div',[_vm._v(\"\\n        (无任何header)\\n      \")]):_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"divider-line\"}),_vm._v(\" \"),_c('div',{staticStyle:{\"font-size\":\"25px\"}},[_vm._v(\"Cookies:\")]),_vm._v(\" \"),_vm._l((_vm.result.cookies),function(item){return _c('div',[_vm._v(_vm._s(item.name)+\" = \"+_vm._s(item.value))])}),_vm._v(\" \"),(!_vm.result.cookies || _vm.result.cookies && _vm.result.cookies.length <= 0 )?_c('div',[_vm._v(\"(无任何Cookie)\\n      \")]):_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"divider-line\"}),_vm._v(\" \"),_c('div',{staticStyle:{\"font-size\":\"25px\"}},[_vm._v(\"请求参数:\")]),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.result.requestBody),expression:\"result.requestBody\"}],staticClass:\"resultStyle resultData\"},[_c('pre',[_vm._v(_vm._s(_vm.result.requestBody))])]),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.result.requestBody),expression:\"!result.requestBody\"}],staticClass:\"resultStyle resultData\"},[_vm._v(\"无\")]),_vm._v(\" \"),_c('div',{staticClass:\"divider-line\"}),_vm._v(\" \"),_c('div',{staticStyle:{\"font-size\":\"25px\"}},[_vm._v(\"预期结果:\")]),_vm._v(\" \"),_c('div',[_vm._v(\"HTTP状态码: \"+_vm._s(_vm.result.checkResponseCode))]),_vm._v(\" \"),_c('div',[_vm._v(\"JSON正则校验:\\n        \"),_c('pre',[_vm._v(_vm._s(_vm.result.checkResponseBody))]),_vm._v(\" \"),_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.result.checkResponseBody),expression:\"!result.checkResponseBody\"}]},[_vm._v(\"(无)\")])]),_vm._v(\" \"),_c('div',[_vm._v(\"数值校验:\\n        \"),_c('pre',[_vm._v(_vm._s(_vm.result.checkResponseNumber))]),_vm._v(\" \"),_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.result.checkResponseNumber),expression:\"!result.checkResponseNumber\"}]},[_vm._v(\"(无)\")])]),_vm._v(\" \"),_c('div',{staticClass:\"divider-line\"}),_vm._v(\" \"),_c('div',{staticStyle:{\"font-size\":\"25px\"}},[_vm._v(\"实际结果:\")]),_vm._v(\" \"),_c('div',[_vm._v(\"HTTP状态码: \"+_vm._s(_vm.result.responseStatusCode))]),_vm._v(\" \"),_c('div',[_vm._v(\"实际返回内容:\")]),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.result.responseData),expression:\"result.responseData\"}],staticClass:\"resultStyle resultData\"},[_c('pre',[_vm._v(_vm._s(_vm.result.responseData))])]),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.result.responseData),expression:\"!result.responseData\"}],staticClass:\"resultStyle resultData\"},[_vm._v(\"(无返回内容)\")]),_vm._v(\" \"),_c('div',{staticClass:\"divider-line\"}),_vm._v(\" \"),_c('div',{staticStyle:{\"font-size\":\"25px\"}},[_vm._v(\"测试结论:\")]),_vm._v(\" \"),_vm._l((_vm.result.testConclusion),function(item){return _c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.result.testConclusion),expression:\"result.testConclusion\"}],staticStyle:{\"overflow\":\"auto\",\"overflow-x\":\"hidden\",\"border\":\"1px solid #e6e6e6\",\"padding\":\"10px\",\"width\":\"88%\",\"word-break\":\"break-all\",\"line-height\":\"25px\"}},[_vm._v(\"\\n        结论：\"+_vm._s(item.resultType)+\" \"),_c('br'),_vm._v(\"\\n        原因：\"+_vm._s(item.reason)+\"\\n      \")])}),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.result.testConclusion),expression:\"!result.testConclusion\"}],staticStyle:{\"overflow\":\"auto\",\"overflow-x\":\"hidden\",\"border\":\"1px solid #e6e6e6\",\"padding\":\"10px\",\"width\":\"90%\",\"word-break\":\"break-all\",\"line-height\":\"25px\",\"text-align\":\"center\"}},[_vm._v(\"\\n        无测试结论\\n      \")])],2)])],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-5700416a\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/project/autoTest/TestCaseList.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-5700416a\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!sass-resources-loader?{\\\"resources\\\":\\\"D:\\\\\\\\PycharmProjects\\\\\\\\leo-api-auto\\\\\\\\frontend\\\\\\\\element-variables.scss\\\"}!../../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./TestCaseList.vue\")\n}\nvar normalizeComponent = require(\"!../../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./TestCaseList.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./TestCaseList.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-5700416a\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./TestCaseList.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-5700416a\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/project/autoTest/TestCaseList.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}