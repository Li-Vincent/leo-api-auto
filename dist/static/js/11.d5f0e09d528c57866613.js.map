{"version":3,"sources":["webpack:///src/components/config/dbConfig/DBConfig.vue","webpack:///./src/components/config/dbConfig/DBConfig.vue?d0ac","webpack:///./src/components/config/dbConfig/DBConfig.vue"],"names":["DBConfig","name","data","dbConfigs","dbTypeOptions","value","listLoading","statusChangeLoading","selects","titleMap","add","edit","dialogStatus","formVisible","loading","formRules","required","message","trigger","min","max","dbType","description","form","initForm","methods","queryDBConfigs","params","this","self","Object","dbConfig","then","res","status","totalNum","rows","$message","error","center","catch","getDBConfigList","handleDel","index","row","_this","$confirm","type","updateTestEnv","_id","isDeleted","Content-Type","getTestEnvList","handleChangeStatus","handleAdd","assign_default","handleEdit","submit","_this2","$refs","validate","valid","headers","trim","createUser","$store","getters","email","resetFields","_params","lastUpdateUser","selectsChange","reportRowStyle","_ref","rowIndex","ReportTableRow","_ref2","created","dbConfig_DBConfig","render","_vm","_h","$createElement","_c","_self","staticClass","_v","_s","$route","meta","title","staticStyle","padding-bottom","attrs","span","inline","nativeOn","$event","preventDefault","text-decoration","color","to","on","click","$router","back","margin-right","roles","includes","margin-left","_e","directives","rawName","expression","width","row-style","row-class-name","highlight-current-row","selection-change","min-width","prop","label","show-overflow-tooltip","scopedSlots","_u","key","fn","scope","src","__webpack_require__","size","db_config_id","$index","left","visible","close-on-click-modal","update:visible","ref","model","rules","label-width","placeholder","auto-complete","callback","$$v","$set","clearable","_l","item","slot","staticRenderFns","Component","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/11.d5f0e09d528c57866613.js","sourcesContent":["<template>\n  <section>\n    <!--页面title-->\n    <strong class=\"title\">{{$route.meta.title}}</strong>\n    <!--工具条-->\n    <el-col :span=\"24\" class=\"toolbar\" style=\"padding-bottom: 0px\">\n      <el-form :inline=\"true\" @submit.native.prevent>\n        <router-link to=\"\" style=\"text-decoration: none;color: aliceblue;\">\n          <el-button class=\"return-list\" @click=\"$router.back(-1)\">\n            <i class=\"el-icon-d-arrow-left\" style=\"margin-right: 5px\"></i>返回\n          </el-button>\n        </router-link>\n        <el-form-item style=\"margin-left: 35px\" v-if=\"$store.getters.roles.includes('admin')\">\n          <el-button class=\"el-icon-plus\" type=\"primary\" @click=\"handleAdd\"> 新增DB配置</el-button>\n        </el-form-item>\n      </el-form>\n    </el-col>\n\n    <!--DB列表-->\n    <el-table :data=\"dbConfigs\" :row-style=\"reportRowStyle\" :row-class-name=\"ReportTableRow\"\n              highlight-current-row v-loading=\"listLoading\" @selection-change=\"selectsChange\" style=\"width: 100%;\">\n      <el-table-column type=\"selection\" min-width=\"5%\">\n      </el-table-column>\n      <el-table-column prop=\"name\" label=\"名称\" min-width=\"15%\" show-overflow-tooltip>\n      </el-table-column>\n      <el-table-column prop=\"dbType\" label=\"DB类型\" min-width=\"20%\" show-overflow-tooltip>\n      </el-table-column>\n      <el-table-column prop=\"description\" label=\"描述\" min-width=\"20%\" show-overflow-tooltip>\n      </el-table-column>\n      <el-table-column prop=\"createAt\" label=\"创建时间\" min-width=\"20%\" show-overflow-tooltip>\n      </el-table-column>\n      <el-table-column prop=\"createUser\" label=\"创建者\" min-width=\"20%\" show-overflow-tooltip>\n      </el-table-column>\n      <el-table-column prop=\"lastUpdateTime\" label=\"更新时间\" min-width=\"20%\" show-overflow-tooltip>\n      </el-table-column>\n      <el-table-column prop=\"lastUpdateUser\" label=\"更新者\" min-width=\"20%\" show-overflow-tooltip>\n      </el-table-column>\n      <el-table-column prop=\"status\" label=\"状态\" min-width=\"10%\">\n        <template slot-scope=\"scope\">\n          <img v-show=\"scope.row.status\" src=\"../../../assets/imgs/icon-yes.svg\"/>\n          <img v-show=\"!scope.row.status\" src=\"../../../assets/imgs/icon-no.svg\"/>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"操作\" min-width=\"50%\">\n        <template slot-scope=\"scope\">\n          <el-button type=\"primary\" size=\"small\">\n            <router-link :to=\"{name:'DBEnvConnect',params:{db_config_id: scope.row._id}}\" style=\"color: #fff\">连接信息\n            </router-link>\n          </el-button>\n          <el-button type=\"primary\" size=\"small\" @click=\"handleEdit(scope.$index, scope.row)\">编辑</el-button>\n          <el-button type=\"info\" size=\"small\" :loading=\"statusChangeLoading\"\n                     @click=\"handleChangeStatus(scope.$index, scope.row)\">\n            {{scope.row.status===false?'启用':'禁用'}}\n          </el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <!--添加 界面-->\n    <el-dialog :title=\"titleMap[dialogStatus]\" :visible.sync=\"formVisible\"\n               :close-on-click-modal=\"false\"\n               style=\"width: 60%; left: 20%\">\n      <el-form :model=\"form\" :rules=\"formRules\" ref=\"form\" label-width=\"80px\">\n        <el-form-item label=\"名称\" prop=\"name\">\n          <el-input placeholder=\"请输入DB名称\" v-model=\"form.name\" auto-complete=\"off\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"DB类型\" prop='dbType'>\n          <el-select clearable v-model.trim=\"form.dbType\" auto-complete=\"off\">\n            <el-option v-for=\"(item,index) in dbTypeOptions\" :key=\"index+''\" :label=\"item.name\"\n                       :value=\"item.value\"></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"描述\" prop='description'>\n          <el-input placeholder=\"请输入DB描述...\" type=\"textarea\" :rows=\"5\" v-model=\"form.description\"></el-input>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click.native=\"formVisible = false\">取消</el-button>\n        <el-button type=\"primary\" @click.native=\"submit\" :loading=\"loading\">提交</el-button>\n      </div>\n    </el-dialog>\n  </section>\n</template>\n\n<script>\n    import {addDBConfig, getDBConfigs, updateDBConfig} from \"../../../api/dbConfig\";\n\n    export default {\n        name: \"DBConfig\",\n        data() {\n            return {\n                dbConfigs: [],\n                dbTypeOptions: [\n                    {name: 'MongoDB', value: 'MongoDB'},\n                    {name: 'MySQL', value: 'MySQL'}\n                ],\n                listLoading: false,\n                statusChangeLoading: false,\n                selects: [],//列表选中列\n\n                titleMap: {\n                    add: '新增DB配置',\n                    edit: '编辑DB配置'\n                },\n                dialogStatus: '',\n                formVisible: false,//dialog是否显示\n                loading: false,\n                formRules: {\n                    name: [\n                        {required: true, message: '请输入名称', trigger: 'blur'},\n                        {min: 1, max: 50, message: '长度在 1 到 50 个字符', trigger: 'blur'}\n                    ],\n                    dbType: [\n                        {required: true, message: '请选择DB类型', trigger: 'blur'}\n                    ],\n                    description: [\n                        {required: false, message: '请输入描述', trigger: 'blur'},\n                        {max: 1024, message: '不能超过1024个字符', trigger: 'blur'}\n                    ]\n                },\n                //编辑界面数据\n                form: {\n                    name: '',\n                    dbType: '',\n                    description: ''\n                },\n                initForm: {\n                    name: '',\n                    dbType: '',\n                    description: ''\n                }\n            }\n        },\n        methods: {\n            // 获取环境列表\n            queryDBConfigs(params) {\n                this.listLoading = true;\n                let self = this;\n                let header = {};\n                getDBConfigs(params, header).then((res) => {\n                    let {status, data} = res;\n                    self.listLoading = false;\n                    if (status === 'ok') {\n                        self.totalNum = data.totalNum;\n                        self.dbConfigs = data.rows\n                    } else {\n                        self.$message.error({\n                            message: data,\n                            center: true,\n                        })\n                    }\n                }).catch((error) => {\n                    self.$message.error({\n                        message: 'DB配置列表获取失败，请稍后刷新重试哦~',\n                        center: true,\n                    });\n                    self.listLoading = false;\n                });\n            },\n            getDBConfigList() {\n                let self = this;\n                let params = {};\n                this.queryDBConfigs(params);\n            },\n            handleDel: function (index, row) {\n                this.$confirm('确认删除该记录吗?', '提示', {\n                    type: 'warning'\n                }).then(() => {\n                    this.listLoading = true;\n                    let self = this;\n                    let params = {\n                        'isDeleted': true\n                    };\n                    let headers = {\n                        \"Content-Type\": \"application/json\",\n                    };\n                    updateTestEnv(row._id, params, headers).then(res => {\n                        let {status, data} = res;\n                        if (status === 'ok') {\n                            self.$message({\n                                message: '删除成功',\n                                center: true,\n                                type: 'success'\n                            })\n                        } else {\n                            self.$message.error({\n                                message: data,\n                                center: true,\n                            })\n                        }\n                        self.getTestEnvList()\n                    });\n                });\n            },\n            handleChangeStatus: function (index, row) {\n                let self = this;\n                self.statusChangeLoading = true;\n                let status = !row.status;\n                let params = {\n                    'status': status\n                };\n                let headers = {\n                    \"Content-Type\": \"application/json\",\n                };\n                updateTestEnv(row._id, params, headers).then(res => {\n                    let {status, data} = res;\n                    self.statusChangeLoading = false;\n                    if (status === 'ok') {\n                        self.$message({\n                            message: '状态变更成功',\n                            center: true,\n                            type: 'success'\n                        });\n                        row.status = !row.status;\n                    } else {\n                        self.$message.error({\n                            message: data,\n                            center: true,\n                        })\n                    }\n                    self.getTestEnvList()\n                }).catch(() => {\n                    self.$message.error({\n                        message: '环境状态更新失败,请稍后重试哦',\n                        center: true\n                    })\n                    self.statusChangeLoading = false;\n                    self.getTestEnvList()\n                });\n            },\n            //显示新增界面\n            handleAdd: function () {\n                this.formVisible = true;\n                this.form = Object.assign({}, this.form, this.initForm);\n                this.dialogStatus = 'add';\n            },\n            //显示编辑界面\n            handleEdit: function (index, row) {\n                this.formVisible = true;\n                this.form = Object.assign({}, this.form, row);\n                this.dialogStatus = 'edit'\n            },\n            //提交修改\n            submit: function () {\n                let self = this;\n                this.$refs.form.validate((valid) => {\n                    if (valid) {\n                        this.$confirm('确认提交吗？', '提示', {}).then(() => {\n                            self.loading = true;\n                            //NProgress.start();\n                            let headers = {\n                                \"Content-Type\": \"application/json\",\n                            };\n                            if (this.dialogStatus == 'add') {\n                                let params = {\n                                    name: self.form.name.trim(),\n                                    dbType: self.form.dbType,\n                                    description: self.form.description.trim(),\n                                    createUser: this.$store.getters.email || 'anonymous'\n                                };\n                                addDBConfig(params, headers).then((res) => {\n                                    let {status, data} = res;\n                                    self.loading = false;\n                                    if (status === 'ok') {\n                                        self.$message({\n                                            message: '添加成功',\n                                            center: true,\n                                            type: 'success'\n                                        });\n                                        self.$refs['form'].resetFields();\n                                        self.formVisible = false;\n                                        self.getDBConfigList()\n                                    } else {\n                                        self.$message.error({\n                                            message: data,\n                                            center: true,\n                                        });\n                                        self.$refs['form'].resetFields();\n                                        self.formVisible = false;\n                                        self.getDBConfigList()\n                                    }\n                                })\n                            } else if (this.dialogStatus == 'edit') {\n                                let params = {\n                                    name: self.form.name.trim(),\n                                    dbType: self.form.dbType,\n                                    description: self.form.description.trim(),\n                                    lastUpdateUser: this.$store.getters.email || 'anonymous'\n                                };\n                                updateDBConfig(self.form._id, params, headers).then(res => {\n                                    let {status, data} = res;\n                                    self.loading = false;\n                                    if (status === 'ok') {\n                                        self.$message({\n                                            message: '修改成功',\n                                            center: true,\n                                            type: 'success'\n                                        });\n                                        self.$refs['form'].resetFields();\n                                        self.formVisible = false;\n                                        self.getDBConfigList()\n                                    } else {\n                                        self.$message.error({\n                                            message: data,\n                                            center: true,\n                                        })\n                                        self.getDBConfigList()\n                                    }\n                                })\n                            } else {\n                                self.$message.error({\n                                    message: \"系统出错\",\n                                    center: true,\n                                });\n                                self.getDBConfigList()\n                            }\n                        });\n                    }\n                });\n            },\n            selectsChange: function (selects) {\n                this.selects = selects;\n            },\n            // 修改table tr行的背景色\n            reportRowStyle({row, rowIndex}) {\n                if (!(row.status === true))\n                    return 'background-color: #DDDDDD'\n                else {\n                    return ''\n                }\n            },\n            ReportTableRow({row, rowIndex}) {\n                return 'reportTableRow';\n            }\n        },\n        created() {\n            this.getDBConfigList()\n        }\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n  .title {\n    width: 200px;\n    float: left;\n    color: #475669;\n    font-size: 25px;\n    margin: 10px 5px;\n    font-family: Arial;\n  }\n\n  .return-list {\n    margin-top: 0px;\n    margin-bottom: 10px;\n    margin-left: 20px;\n    border-radius: 25px;\n  }\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/config/dbConfig/DBConfig.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',[_c('strong',{staticClass:\"title\"},[_vm._v(_vm._s(_vm.$route.meta.title))]),_vm._v(\" \"),_c('el-col',{staticClass:\"toolbar\",staticStyle:{\"padding-bottom\":\"0px\"},attrs:{\"span\":24}},[_c('el-form',{attrs:{\"inline\":true},nativeOn:{\"submit\":function($event){$event.preventDefault();}}},[_c('router-link',{staticStyle:{\"text-decoration\":\"none\",\"color\":\"aliceblue\"},attrs:{\"to\":\"\"}},[_c('el-button',{staticClass:\"return-list\",on:{\"click\":function($event){return _vm.$router.back(-1)}}},[_c('i',{staticClass:\"el-icon-d-arrow-left\",staticStyle:{\"margin-right\":\"5px\"}}),_vm._v(\"返回\\n        \")])],1),_vm._v(\" \"),(_vm.$store.getters.roles.includes('admin'))?_c('el-form-item',{staticStyle:{\"margin-left\":\"35px\"}},[_c('el-button',{staticClass:\"el-icon-plus\",attrs:{\"type\":\"primary\"},on:{\"click\":_vm.handleAdd}},[_vm._v(\" 新增DB配置\")])],1):_vm._e()],1)],1),_vm._v(\" \"),_c('el-table',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.listLoading),expression:\"listLoading\"}],staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.dbConfigs,\"row-style\":_vm.reportRowStyle,\"row-class-name\":_vm.ReportTableRow,\"highlight-current-row\":\"\"},on:{\"selection-change\":_vm.selectsChange}},[_c('el-table-column',{attrs:{\"type\":\"selection\",\"min-width\":\"5%\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"name\",\"label\":\"名称\",\"min-width\":\"15%\",\"show-overflow-tooltip\":\"\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"dbType\",\"label\":\"DB类型\",\"min-width\":\"20%\",\"show-overflow-tooltip\":\"\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"description\",\"label\":\"描述\",\"min-width\":\"20%\",\"show-overflow-tooltip\":\"\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"createAt\",\"label\":\"创建时间\",\"min-width\":\"20%\",\"show-overflow-tooltip\":\"\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"createUser\",\"label\":\"创建者\",\"min-width\":\"20%\",\"show-overflow-tooltip\":\"\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"lastUpdateTime\",\"label\":\"更新时间\",\"min-width\":\"20%\",\"show-overflow-tooltip\":\"\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"lastUpdateUser\",\"label\":\"更新者\",\"min-width\":\"20%\",\"show-overflow-tooltip\":\"\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"status\",\"label\":\"状态\",\"min-width\":\"10%\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('img',{directives:[{name:\"show\",rawName:\"v-show\",value:(scope.row.status),expression:\"scope.row.status\"}],attrs:{\"src\":require(\"../../../assets/imgs/icon-yes.svg\")}}),_vm._v(\" \"),_c('img',{directives:[{name:\"show\",rawName:\"v-show\",value:(!scope.row.status),expression:\"!scope.row.status\"}],attrs:{\"src\":require(\"../../../assets/imgs/icon-no.svg\")}})]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"操作\",\"min-width\":\"50%\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"small\"}},[_c('router-link',{staticStyle:{\"color\":\"#fff\"},attrs:{\"to\":{name:'DBEnvConnect',params:{db_config_id: scope.row._id}}}},[_vm._v(\"连接信息\\n          \")])],1),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"small\"},on:{\"click\":function($event){return _vm.handleEdit(scope.$index, scope.row)}}},[_vm._v(\"编辑\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"info\",\"size\":\"small\",\"loading\":_vm.statusChangeLoading},on:{\"click\":function($event){return _vm.handleChangeStatus(scope.$index, scope.row)}}},[_vm._v(\"\\n          \"+_vm._s(scope.row.status===false?'启用':'禁用')+\"\\n        \")])]}}])})],1),_vm._v(\" \"),_c('el-dialog',{staticStyle:{\"width\":\"60%\",\"left\":\"20%\"},attrs:{\"title\":_vm.titleMap[_vm.dialogStatus],\"visible\":_vm.formVisible,\"close-on-click-modal\":false},on:{\"update:visible\":function($event){_vm.formVisible=$event}}},[_c('el-form',{ref:\"form\",attrs:{\"model\":_vm.form,\"rules\":_vm.formRules,\"label-width\":\"80px\"}},[_c('el-form-item',{attrs:{\"label\":\"名称\",\"prop\":\"name\"}},[_c('el-input',{attrs:{\"placeholder\":\"请输入DB名称\",\"auto-complete\":\"off\"},model:{value:(_vm.form.name),callback:function ($$v) {_vm.$set(_vm.form, \"name\", $$v)},expression:\"form.name\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"DB类型\",\"prop\":\"dbType\"}},[_c('el-select',{attrs:{\"clearable\":\"\",\"auto-complete\":\"off\"},model:{value:(_vm.form.dbType),callback:function ($$v) {_vm.$set(_vm.form, \"dbType\", (typeof $$v === 'string'? $$v.trim(): $$v))},expression:\"form.dbType\"}},_vm._l((_vm.dbTypeOptions),function(item,index){return _c('el-option',{key:index+'',attrs:{\"label\":item.name,\"value\":item.value}})}),1)],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"描述\",\"prop\":\"description\"}},[_c('el-input',{attrs:{\"placeholder\":\"请输入DB描述...\",\"type\":\"textarea\",\"rows\":5},model:{value:(_vm.form.description),callback:function ($$v) {_vm.$set(_vm.form, \"description\", $$v)},expression:\"form.description\"}})],1)],1),_vm._v(\" \"),_c('div',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{nativeOn:{\"click\":function($event){_vm.formVisible = false}}},[_vm._v(\"取消\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"primary\",\"loading\":_vm.loading},nativeOn:{\"click\":function($event){return _vm.submit($event)}}},[_vm._v(\"提交\")])],1)],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-d18ae650\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/config/dbConfig/DBConfig.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-d18ae650\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!sass-resources-loader?{\\\"resources\\\":\\\"D:\\\\\\\\PycharmProjects\\\\\\\\leo-api-auto\\\\\\\\frontend\\\\\\\\element-variables.scss\\\"}!../../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./DBConfig.vue\")\n}\nvar normalizeComponent = require(\"!../../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./DBConfig.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./DBConfig.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-d18ae650\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./DBConfig.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-d18ae650\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/config/dbConfig/DBConfig.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}