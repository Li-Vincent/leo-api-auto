{"version":3,"sources":["webpack:///src/components/project/autoTest/EditTestCase.vue","webpack:///./src/components/project/autoTest/EditTestCase.vue?ab6a","webpack:///./src/components/project/autoTest/EditTestCase.vue"],"names":["EditTestCase","name","data","_this","this","activeNames","MethodOptions","label","value","ProtocolOptions","DBTypeOptions","MongoCRUDOptions","dbConfigs","_id","HeaderOptions","ResponseCodeOptions","operatorOptions","judgeCharacterOptions","showRequestBody","radio","radioType","form","service","delaySeconds","requestMethod","requestProtocol","route","domain","description","isClearCookie","dataInitializes","dbConfigId","dbType","mongoCrud","collection","query","set","sql","headers","parameterType","filePath","parameterRaw","isJsonArray","setGlobalVars","checkResponse","checkResponseCode","checkSpendSeconds","checkResponseBody","regex","checkResponseNumber","expressions","firstArg","operator","secondArg","judgeCharacter","expectResult","formRules","required","message","trigger","min","max","validator","rule","callback","indexOf","Error","$message","warning","center","pattern","replace","obj","JSON","parse","typeof_default","e","console","log","showResponseCodeCheck","showSpendSecondsCheck","showResponseBodyCheck","showResponseNumCheck","methods","checkJsonFormat","json","err_msg","getDBConfigList","_this2","Object","dbConfig","status","then","res","rows","error","catch","checkRequestMethod","request","handleChange","val","addDataInit","push","delDataInit","index","splice","length","addHeader","delHeader","addSuffix","constructor","Array","forEach","item","suffixStartIndex","search","expectedSuffix","toString","substring","addGlobalVars","delGlobalVars","addCheckResBody","delCheckResBody","addCheckResNum","delCheckResNum","getCaseDetailInfo","_this3","self","testCase","$route","params","project_id","test_suite_id","test_case_id","hasOwnProperty","stringify_default","undefined","setGlobalVar","requestBody","listLoading","updateCaseInfo","_this4","$refs","validate","valid","flag","$confirm","checkRegex","trim","lastUpdateUser","$store","getters","email","$router","type","watch","handler","curVal","oldVal","deep","created","autoTest_EditTestCase","render","_vm","_h","$createElement","_c","_self","attrs","span","staticClass","_v","_s","meta","title","staticStyle","padding-bottom","text-decoration","color","to","margin-right","return-list","float","nativeOn","click","$event","ref","model","rules","border","margin-bottom","padding","gutter","label-width","prop","placeholder","auto-complete","$$v","$set","expression","on","change","_l","key","_n","highlight-current-row","min-width","sortable","scopedSlots","_u","fn","scope","width","clearable","filterable","allow-create","default-first-option","row","props","_e","font-size","cursor","$index","size","margin","multiple","slot","directives","rawName","staticRenderFns","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/9.c75a395f17c9f3bfcb4e.js","sourcesContent":["<template>\n  <section>\n    <!--页面title-->\n    <el-col :span=\"24\"><strong class=\"title\">{{$route.meta.title}}</strong></el-col>\n\n    <!--工具条-->\n    <el-col :span=\"24\" class=\"toolbar\" style=\"padding-bottom: 0px\">\n      <router-link :to=\"{\n                    name: 'TestCaseList', params: {\n                      project_id: this.$route.params.project_id,\n                      test_case_id: this.$route.params.test_case_id\n                    }\n                }\" style='text-decoration: none;color: aliceblue;'>\n        <el-button class=\"return-list\"><i class=\"el-icon-d-arrow-left\" return-list style=\"margin-right: 5px\"></i>返回\n        </el-button>\n      </router-link>\n      <div style=\"float: right;  margin-right: 80px\">\n        <router-link :to=\"{\n                    name: 'TestCaseList', params: {\n                      project_id: this.$route.params.project_id,\n                      test_case_id: this.$route.params.test_case_id\n                    }\n                }\" style='text-decoration: none;color: aliceblue;'>\n          <el-button class=\"return-list\">\n            <i class=\"el-icon-close\" return-list style=\"margin-right: 5px\"></i>取消\n          </el-button>\n        </router-link>\n        <el-button class=\"return-list\" type=\"primary\" @click.native=\"updateCaseInfo\">\n          <i class=\"el-icon-check\" return-list style=\"margin-right: 5px\"></i>保存\n        </el-button>\n      </div>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-form :model=\"form\" ref=\"form\" :rules=\"formRules\">\n        <!--基本信息-->\n        <div style=\"border: 1px solid #e6e6e6;margin-bottom: 10px;padding:15px\">\n          <el-row :gutter=\"10\">\n            <el-col :span=\"22\">\n              <el-form-item label=\"接口名称:\" label-width=\"100px\" prop=\"name\">\n                <el-input v-model=\"form.name\" placeholder=\"名称\" auto-complete></el-input>\n              </el-form-item>\n            </el-col>\n          </el-row>\n          <el-row :gutter=\"10\">\n            <el-col :span=\"4\">\n              <el-form-item label=\"请求URL:\" label-width=\"100px\">\n                <el-select v-model=\"form.requestMethod\" placeholder=\"请求方式\" @change=\"checkRequestMethod\">\n                  <el-option v-for=\"(item,index) in MethodOptions\" :key=\"index+''\" :label=\"item.label\"\n                             :value=\"item.value\"></el-option>\n                </el-select>\n              </el-form-item>\n            </el-col>\n            <el-col :span=\"3\">\n              <el-form-item>\n                <el-select v-model=\"form.requestProtocol\" placeholder=\"请求协议\">\n                  <el-option v-for=\"(item,index) in ProtocolOptions\" :key=\"index+''\" :label=\"item.label\"\n                             :value=\"item.value\"></el-option>\n                </el-select>\n              </el-form-item>\n            </el-col>\n            <el-col :span='6'>\n              <el-form-item prop=\"domain\">\n                <el-input v-model.trim=\"form.domain\" placeholder=\"请输入访问域名(优先级最高)\" auto-complete></el-input>\n              </el-form-item>\n            </el-col>\n            <el-col :span='9'>\n              <el-form-item prop=\"route\">\n                <el-input v-model.trim=\"form.route\" placeholder=\"请输入接口路由\" auto-complete></el-input>\n              </el-form-item>\n            </el-col>\n          </el-row>\n          <el-row :gutter=\"10\">\n            <el-col :span=\"6\">\n              <el-form-item label=\"Service:\" label-width=\"100px\" prop=\"service\">\n                <el-input v-model.trim=\"form.service\" placeholder=\"所属Service\" auto-complete></el-input>\n              </el-form-item>\n            </el-col>\n            <el-col :span=\"6\">\n              <el-form-item label=\"请求延迟（秒）:\" label-width=\"130px\" prop=\"delaySeconds\">\n                <el-input v-model.number=\"form.delaySeconds\" placeholder=\"请求延迟（秒）\"></el-input>\n              </el-form-item>\n            </el-col>\n            <el-col :span='6'>\n              <el-form-item label=\"请求前是否清除Cookie:\" label-width=\"180px\" prop=\"isClearCookie\">\n                <el-checkbox v-model.trim=\"form.isClearCookie\"></el-checkbox>\n              </el-form-item>\n            </el-col>\n          </el-row>\n          <el-row :gutter=\"10\">\n            <el-col :span='22'>\n              <el-form-item  label=\"接口描述:\" label-width=\"100px\"  prop=\"description\">\n                <el-input type=\"textarea\" :rows=\"5\" v-model=\"form.description\" placeholder=\"请输入用例描述\"\n                          auto-complete></el-input>\n              </el-form-item>\n            </el-col>\n          </el-row>\n        </div>\n        <el-row :span=\"24\">\n          <el-collapse v-model=\"activeNames\" @change=\"handleChange\">\n\n            <el-collapse-item title=\"数据初始化\" name=\"1\">\n              <el-table :data=\"form.dataInitializes\" highlight-current-row>\n                <el-table-column prop=\"dbType\" label=\"DB Type\" min-width=\"10%\" sortable>\n                  <template slot-scope=\"scope\">\n                    <el-select placeholder=\"请选择DB类型\" clearable filterable allow-create default-first-option\n                               v-model=\"scope.row.dbType\" style=\"width:90%\">\n                      <el-option v-for=\"(item,index) in DBTypeOptions\" :key=\"index+''\" :label=\"item.label\"\n                                 :value=\"item.value\"></el-option>\n                    </el-select>\n                  </template>\n                </el-table-column>\n                <el-table-column prop=\"dbConfig\" label=\"选择DB\" min-width=\"10%\" sortable>\n                  <template slot-scope=\"scope\">\n                    <el-select placeholder=\"请选择DB\" clearable filterable allow-create default-first-option\n                               v-model=\"scope.row.dbConfigId\" style=\"width:90%\">\n                      <el-option v-for=\"(item,index) in dbConfigs\" :key=\"index+''\" :label=\"item.name\"\n                                 :value=\"item._id\"></el-option>\n                    </el-select>\n                  </template>\n                </el-table-column>\n                <el-table-column type=\"expand\">\n                  <template slot-scope=\"props\">\n                    <el-row :gutter=\"10\" v-if=\"props.row.dbType == 'MongoDB'\">\n                      <el-col :span=\"10\">\n                        <el-form-item label=\"Mongo CRUD:\" label-width=\"120px\">\n                          <el-select placeholder=\"请选择方法\" clearable filterable allow-create default-first-option\n                                     v-model=\"props.row.mongoCrud\" style=\"width:90%\">\n                            <el-option v-for=\"(item,index) in MongoCRUDOptions\" :key=\"index+''\" :label=\"item.label\"\n                                       :value=\"item.value\"></el-option>\n                          </el-select>\n                        </el-form-item>\n                      </el-col>\n                      <el-col :span=\"10\">\n                        <el-form-item label=\"Collection:\" label-width=\"83px\">\n                          <el-input v-model=\"props.row.collection\" :value=\"props.row.collection\"\n                                    placeholder=\"请输入要变更的collection\"></el-input>\n                        </el-form-item>\n                      </el-col>\n                    </el-row>\n                    <el-row :gutter=\"10\" v-if=\"props.row.dbType == 'MongoDB'\">\n                      <el-col :span=\"10\" v-if=\"props.row.mongoCrud != 'insert_one'\">\n                        <el-form-item label=\"查询条件:\" label-width=\"120px\">\n                          <el-input type=\"textarea\" :rows=\"5\" v-model=\"props.row.query\" :value=\"props.row.query\"\n                                    placeholder=\"请输入查询条件,Update适用,例:{'key': 'value'}, 注意：true->True,false->False,null->None\"></el-input>\n                        </el-form-item>\n                      </el-col>\n                      <el-col :span=\"10\">\n                        <el-form-item label=\"变更内容:\" label-width=\"120px\">\n                          <el-input type=\"textarea\" :rows=\"5\" v-model=\"props.row.set\" :value=\"props.row.set\"\n                                    placeholder=\"请输入要变更(插入)的内容,例:{'key': 'value'}, 注意：true->True,false->False,null->None\"></el-input>\n                        </el-form-item>\n                      </el-col>\n                    </el-row>\n                    <el-row :gutter=\"10\" v-if=\"props.row.dbType != 'MongoDB'\">\n                      <el-col :span=\"20\">\n                        <el-form-item label=\"SQL:\" label-width=\"80px\">\n                          <el-input type=\"textarea\" :rows=\"5\" v-model=\"props.row.sql\" :value=\"props.row.sql\"\n                                    placeholder=\"请输入SQL语句\"></el-input>\n                        </el-form-item>\n                      </el-col>\n                    </el-row>\n                  </template>\n                </el-table-column>\n                <el-table-column label=\"操作\" min-width=\"5%\">\n                  <template slot-scope=\"scope\">\n                    <i class=\"el-icon-delete\" style=\"font-size:30px;cursor:pointer;\"\n                       @click=\"delDataInit(scope.$index)\"></i>\n                  </template>\n                </el-table-column>\n                <el-table-column label=\"\" min-width=\"10%\">\n                  <template slot-scope=\"scope\">\n                    <el-button v-if=\"scope.$index===(form.dataInitializes.length-1)\" size=\"mini\" class=\"el-icon-plus\"\n                               @click=\"addDataInit\"></el-button>\n                  </template>\n                </el-table-column>\n              </el-table>\n            </el-collapse-item>\n\n            <el-collapse-item title=\"请求头部\" name=\"2\">\n              <el-table :data=\"form.headers\" highlight-current-row>\n                <el-table-column prop=\"name\" label=\"标签\" min-width=\"15%\" sortable>\n                  <template slot-scope=\"scope\">\n                    <el-select placeholder=\"请输入/选择标签\" clearable filterable allow-create default-first-option\n                               v-model.trim=\"scope.row.name\" style=\"width:90%\">\n                      <el-option v-for=\"(item,index) in HeaderOptions\" :key=\"index+''\" :label=\"item.label\"\n                                 :value=\"item.value\"></el-option>\n                    </el-select>\n                  </template>\n                </el-table-column>\n                <el-table-column prop=\"value\" label=\"内容\" min-width=\"20%\" sortable>\n                  <template slot-scope=\"scope\">\n                    <el-input v-model.trim=\"scope.row.value\" :value=\"scope.row.value\" placeholder=\"请输入内容\"></el-input>\n                  </template>\n                </el-table-column>\n                <el-table-column label=\"操作\" min-width=\"5%\">\n                  <template slot-scope=\"scope\">\n                    <i class=\"el-icon-delete\" style=\"font-size:30px;cursor:pointer;\"\n                       @click=\"delHeader(scope.$index)\"></i>\n                  </template>\n                </el-table-column>\n                <el-table-column label=\"\" min-width=\"10%\">\n                  <template slot-scope=\"scope\">\n                    <el-button v-if=\"scope.$index===(form.headers.length-1)\" size=\"mini\" class=\"el-icon-plus\"\n                               @click=\"addHeader\"></el-button>\n                  </template>\n                </el-table-column>\n              </el-table>\n            </el-collapse-item>\n\n            <el-collapse-item title=\"请求参数\" name=\"3\">\n              <div style=\"margin: 5px\">\n                <el-row :span=\"24\" style=\"margin-bottom:10px\">\n                  <el-col v-if=\"showRequestBody\" :span=\"18\">\n                    <el-radio v-model=\"form.parameterType\" label=\"json\">源数据(raw) —— 支持json数组</el-radio>\n                    <el-radio v-model=\"form.parameterType\" label=\"form\">Form Data（Content-Type=application/x-www-form-urlencoded)</el-radio>\n                    <el-radio v-model=\"form.parameterType\" label=\"file\">File Upload（Content-Type=multipart/form-data)</el-radio>\n                  </el-col>\n                  <el-col :span='3' style=\"float: right\" v-if=\"form.parameterType == 'json'\">\n                    <el-checkbox label='是否 json数组' v-model.trim=\"form.isJsonArray\"></el-checkbox>\n                  </el-col>\n                </el-row>\n                <template>\n                  <el-form-item label=\"\" prop=\"filePath\" v-if=\"form.parameterType == 'file'\">\n                    <el-input  v-model.trim=\"form.filePath\" placeholder=\"请输入文件绝对路径\"></el-input>\n                  </el-form-item>\n                  <el-form-item label=\"\" prop=\"parameterRaw\">\n                    <el-input type=\"textarea\" :rows=\"8\" placeholder=\"请输入参数内容({'username': 'test'})\"\n                              v-model.trim=\"form.parameterRaw\"></el-input>\n                  </el-form-item>\n                </template>\n              </div>\n            </el-collapse-item>\n\n            <el-collapse-item title=\"返回结果设置全局变量(Suite级别)\" name=\"4\">\n              <el-table :data=\"form.setGlobalVars\" highlight-current-row>\n                <el-table-column prop=\"name\" label=\"变量名\" min-width=\"20%\">\n                  <template slot-scope=\"scope\">\n                    <el-input v-model.trim=\"scope.row.name\" :value=\"scope.row.name\" placeholder=\"请输入变量名\"></el-input>\n                  </template>\n                </el-table-column>\n                <el-table-column prop=\"query\" label=\"变量查询语句\" min-width=\"30%\" sortable>\n                  <template slot-scope=\"scope\">\n                    <el-select style=\"width: 70%;\" v-model.trim=\"scope.row.query\"\n                               @change=\"addSuffix(scope.row.query)\" multiple clearable filterable default-first-option\n                               allow-create placeholder=\"请输入变量查询语句(不输入则返回整个JSON字符串)\">\n                    </el-select>\n                  </template>\n                </el-table-column>\n                <el-table-column label=\"操作\" min-width=\"5%\">\n                  <template slot-scope=\"scope\">\n                    <i class=\"el-icon-delete\" style=\"font-size:30px;cursor:pointer;\"\n                       @click=\"delGlobalVars(scope.$index)\"></i>\n                  </template>\n                </el-table-column>\n                <el-table-column label=\"\" min-width=\"10%\">\n                  <template slot-scope=\"scope\">\n                    <el-button v-if=\"scope.$index===(form.setGlobalVars.length-1)\" size=\"mini\" class=\"el-icon-plus\"\n                               @click=\"addGlobalVars\"></el-button>\n                  </template>\n                </el-table-column>\n              </el-table>\n            </el-collapse-item>\n\n            <el-collapse-item title=\"测试结果校验\" name=\"5\">\n              <el-card class=\"box-card\">\n                <div slot=\"header\">\n                  <el-radio-group v-model=\"form.checkResponse\">\n                    <el-radio-button label=\"noCheck\">\n                      <div>不校验</div>\n                    </el-radio-button>\n                    <el-radio-button label=\"checkResponseCode\">\n                      <div>HTTP状态校验</div>\n                    </el-radio-button>\n                    <el-radio-button label=\"checkSpendSeconds\">\n                      <div>接口耗时校验</div>\n                    </el-radio-button>\n                    <el-radio-button label=\"checkResponseBody\">\n                      <div>JSON正则校验</div>\n                    </el-radio-button>\n                    <el-radio-button label=\"checkResponseNumber\">\n                      <div>数值校验</div>\n                    </el-radio-button>\n                  </el-radio-group>\n                </div>\n\n                <div v-show=\"showResponseCodeCheck\">\n                  <el-select v-model=\"form.checkResponseCode\" clearable placeholder=\"HTTP返回状态\">\n                    <el-option v-for=\"(item,index) in ResponseCodeOptions\" :key=\"index+''\" :label=\"item.label\"\n                               :value=\"item.value\"></el-option>\n                  </el-select>\n                </div>\n                <div v-show=\"showSpendSecondsCheck\">\n                  <el-form-item label=\"接口耗时小于（秒）:\" label-width=\"200px\"  prop=\"checkSpendSeconds\" >\n                    <el-input v-model.number=\"form.checkSpendSeconds\" placeholder=\"接口耗时小于（秒）\" style=\"width:30%\"></el-input>\n                  </el-form-item>\n                </div>\n                <div v-show=\"showResponseBodyCheck\">\n                  <el-collapse-item title=\"JSON正则校验\" name=\"5\">\n                    <el-table :data=\"form.checkResponseBody\" highlight-current-row>\n                      <el-table-column prop=\"regex\" label=\"正则语句\" min-width=\"20%\">\n                        <template slot-scope=\"scope\">\n                          <el-input v-model.trim=\"scope.row.regex\" placeholder=\"请输入正则语句\"></el-input>\n                        </template>\n                      </el-table-column>\n                      <el-table-column prop=\"query\" label=\"变量查询语句\" min-width=\"30%\">\n                        <template slot-scope=\"scope\">\n                          <el-select style=\"width: 70%;\" v-model.trim=\"scope.row.query\"\n                                     @change=\"addSuffix(scope.row.query)\" multiple filterable clearable\n                                     default-first-option allow-create\n                                     placeholder=\"请输入变量查询语句(不输入则返回整个JSON字符串)\">\n                          </el-select>\n                        </template>\n                      </el-table-column>\n                      <el-table-column label=\"操作\" min-width=\"5%\">\n                        <template slot-scope=\"scope\">\n                          <i class=\"el-icon-delete\" style=\"font-size:30px;cursor:pointer;\"\n                             @click=\"delCheckResBody(scope.$index)\"></i>\n                        </template>\n                      </el-table-column>\n                      <el-table-column label=\"\" min-width=\"10%\">\n                        <template slot-scope=\"scope\">\n                          <el-button v-if=\"scope.$index===(form.checkResponseBody.length-1)\" size=\"mini\"\n                                     class=\"el-icon-plus\"\n                                     @click=\"addCheckResBody\"></el-button>\n                        </template>\n                      </el-table-column>\n                    </el-table>\n                  </el-collapse-item>\n                </div>\n                <div v-show=\"showResponseNumCheck\">\n                  <el-collapse-item title=\"数值校验\" name=\"5\">\n                    <el-table :data=\"form.checkResponseNumber\" highlight-current-row>\n                      <el-table-column label=\"数值一\" min-width=\"5%\">\n                        <template slot-scope=\"scope\">\n                          <el-input v-model.trim=\"scope.row.expressions.firstArg\" placeholder=\"请输入数值一\"></el-input>\n                        </template>\n                      </el-table-column>\n                      <el-table-column label=\"运算\" min-width=\"3%\">\n                        <template slot-scope=\"scope\">\n                          <el-select v-model.trim=\"scope.row.expressions.operator\" clearable placeholder=\"请选择运算\">\n                            <el-option v-for=\"(item,index) in operatorOptions\" :key=\"index\" :label=\"item.label\"\n                                       :value=\"item.value\"></el-option>\n                          </el-select>\n                        </template>\n                      </el-table-column>\n                      <el-table-column label=\"数值二\" min-width=\"5%\">\n                        <template slot-scope=\"scope\">\n                          <el-input v-model.trim=\"scope.row.expressions.secondArg\" placeholder=\"请输入数值二\"></el-input>\n                        </template>\n                      </el-table-column>\n                      <el-table-column label=\"判断\" min-width=\"3%\">\n                        <template slot-scope=\"scope\">\n                          <el-select v-model.trim=\"scope.row.expressions.judgeCharacter\" clearable placeholder=\"请选择判断\">\n                            <el-option v-for=\"(item,index) in judgeCharacterOptions\" :key=\"index\" :label=\"item.label\"\n                                       :value=\"item.value\"></el-option>\n                          </el-select>\n                        </template>\n                      </el-table-column>\n                      <el-table-column label=\"期待结果\" min-width=\"5%\">\n                        <template slot-scope=\"scope\">\n                          <el-input v-model.trim=\"scope.row.expressions.expectResult\" placeholder=\"请输入期待结果\"></el-input>\n                        </template>\n                      </el-table-column>\n                      <el-table-column label=\"操作\" min-width=\"1%\">\n                        <template slot-scope=\"scope\">\n                          <i class=\"el-icon-delete\" style=\"font-size:30px;cursor:pointer;\"\n                             @click=\"delCheckResNum(scope.$index)\"></i>\n                        </template>\n                      </el-table-column>\n                      <el-table-column label=\"\" min-width=\"5%\">\n                        <template slot-scope=\"scope\">\n                          <el-button v-if=\"scope.$index===(form.checkResponseNumber.length-1)\" size=\"mini\"\n                                     class=\"el-icon-plus\" @click=\"addCheckResNum\"></el-button>\n                        </template>\n                      </el-table-column>\n                    </el-table>\n                  </el-collapse-item>\n                </div>\n              </el-card>\n            </el-collapse-item>\n          </el-collapse>\n        </el-row>\n      </el-form>\n    </el-col>\n  </section>\n</template>\n\n<script>\n    import {getCaseDetail, updateTestCase} from \"../../../api/testCase\";\n    import {getDBConfigs} from \"../../../api/dbConfig\";\n\n    export default {\n        name: \"EditTestCase\",\n        data() {\n            let checkJson = (rule, value, callback) => {\n                if (value !== \"\" && value !== null) {\n                    value = value.replace(/'/g, \"\\\"\")\n                    try {\n                        let obj = JSON.parse(value)\n                        if (typeof obj == 'object' && obj) {\n                            callback()\n                        } else {\n                            callback(new Error('参数格式不正确!'))\n                            this.$message.warning({\n                                message: '参数格式不正确!',\n                                center: true,\n                            });\n                        }\n                    } catch (e) {\n                        console.log(value, e)\n                        callback(new Error('参数格式不正确!'))\n                        this.$message.warning({\n                            message: '参数格式不正确!',\n                            center: true,\n                        });\n                    }\n                } else {\n                    callback()\n                }\n            };\n            let checkRoute = (rule, value, callback) => {\n                if (value !== \"\" && value !== null) {\n                    if (value.indexOf('/') == 0) {\n                        callback()\n                    } else {\n                        callback(new Error('请输入路由(如: /chat)'))\n                        this.$message.warning({\n                            message: '路由格式不正确!',\n                            center: true,\n                        });\n                    }\n                } else {\n                    callback()\n                }\n            };\n            return {\n                activeNames: ['1', '2', '3', '4', '5', '6'],\n                MethodOptions: [\n                    {label: \"GET\", value: \"GET\"},\n                    {label: \"POST\", value: \"POST\"},\n                    {label: \"PUT\", value: \"PUT\"},\n                    {label: \"DELETE\", value: \"DELETE\"},\n                    {label: \"OPTIONS\", value: \"OPTIONS\"},\n                    {label: \"PATCH\", value: \"PATCH\"},\n                    {label: \"HEAD\", value: \"HEAD\"}\n                ],\n                ProtocolOptions: [\n                    {value: '', label: '未选择'},\n                    {value: 'HTTP', label: 'HTTP'},\n                    {value: 'HTTPS', label: 'HTTPS'}\n                ],\n                DBTypeOptions: [\n                    {value: 'MongoDB', label: 'MongoDB'},\n                    {value: 'MySQL', label: 'MySQL'}\n                ],\n                MongoCRUDOptions: [\n                    {value: 'insert_one', label: 'Insert One'},\n                    {value: 'update_one', label: 'Update One'},\n                    {value: 'update_many', label: 'Update Many'},\n                ],\n                dbConfigs: [{_id: '', name: ''}],\n                HeaderOptions: [\n                    {value: 'Accept', label: 'Accept'},\n                    {value: 'Accept-Charset', label: 'Accept-Charset'},\n                    {value: 'Accept-Encoding', label: 'Accept-Encoding'},\n                    {value: 'Accept-Language', label: 'Accept-Language'},\n                    {value: 'Accept-Ranges', label: 'Accept-Ranges'},\n                    {value: 'Authorization', label: 'Authorization'},\n                    {value: 'Cache-Control', label: 'Cache-Control'},\n                    {value: 'Connection', label: 'Connection'},\n                    {value: 'Cookie', label: 'Cookie'},\n                    {value: 'Content-Length', label: 'Content-Length'},\n                    {value: 'Content-Type', label: 'Content-Type'},\n                    {value: 'Content-MD5', label: 'Content-MD5'},\n                    {value: 'Date', label: 'Date'},\n                    {value: 'Expect', label: 'Expect'},\n                    {value: 'From', label: 'From'},\n                    {value: 'Host', label: 'Host'},\n                    {value: 'If-Match', label: 'If-Match'},\n                    {value: 'If-Modified-Since', label: 'If-Modified-Since'},\n                    {value: 'If-None-Match', label: 'If-None-Match'},\n                    {value: 'If-Range', label: 'If-Range'},\n                    {value: 'If-Unmodified-Since', label: 'If-Unmodified-Since'},\n                    {value: 'Max-Forwards', label: 'Max-Forwards'},\n                    {value: 'Origin', label: 'Origin'},\n                    {value: 'Pragma', label: 'Pragma'},\n                    {value: 'Proxy-Authorization', label: 'Proxy-Authorization'},\n                    {value: 'Range', label: 'Range'},\n                    {value: 'Referer', label: 'Referer'},\n                    {value: 'TE', label: 'TE'},\n                    {value: 'Upgrade', label: 'Upgrade'},\n                    {value: 'User-Agent', label: 'User-Agent'},\n                    {value: 'Via', label: 'Via'},\n                    {value: 'Warning', label: 'Warning'}\n                ],\n                ResponseCodeOptions: [\n                    {value: '200', label: '200'},\n                    {value: '201', label: '201'},\n                    {value: '203', label: '203'},\n                    {value: '302', label: '302'},\n                    {value: '400', label: '400'},\n                    {value: '401', label: '401'},\n                    {value: '403', label: '403'},\n                    {value: '404', label: '404'},\n                    {value: '405', label: '405'},\n                    {value: '500', label: '500'},\n                    {value: '502', label: '502'},\n                    {value: '503', label: '503'},\n                    {value: '504', label: '504'}\n                ],\n                operatorOptions: [\n                    {value: '+', label: '加上'},\n                    {value: '-', label: '减去'},\n                    {value: '*', label: '乘以'},\n                    {value: '/', label: '除以'}\n                ],\n                judgeCharacterOptions: [\n                    {value: '<', label: '小于'},\n                    {value: '<=', label: '小于等于'},\n                    {value: '>', label: '大于'},\n                    {value: '>=', label: '大于等于'},\n                    {value: '==', label: '等于'}\n                ],\n                showRequestBody: true,\n                radio: \"raw\",\n                radioType: '',\n                form: {\n                    name: '',\n                    service: '',\n                    delaySeconds: 0,\n                    requestMethod: 'GET',\n                    requestProtocol: '',\n                    route: '',\n                    domain: '',\n                    description: '',\n                    isClearCookie: false,\n                    dataInitializes: [{\n                        dbConfigId: '',\n                        dbType: '',\n                        mongoCrud: '',\n                        collection: '',\n                        query: '',\n                        set: '',\n                        sql: ''\n                    }],\n                    headers: [{name: \"\", value: \"\"}],\n                    parameterType: 'json',\n                    filePath: \"\",\n                    parameterRaw: \"\",\n                    isJsonArray: false,\n                    setGlobalVars: [{name: \"\", query: []}],\n                    checkResponse: \"noCheck\",\n                    checkResponseCode: \"\",\n                    checkSpendSeconds: 0,\n                    checkResponseBody: [{regex: \"\", query: []}],\n                    checkResponseNumber: [{\n                        expressions: {\n                            'firstArg': '',\n                            'operator': '',\n                            'secondArg': '',\n                            'judgeCharacter': '',\n                            'expectResult': ''\n                        }\n                    }],\n                },\n                formRules: {\n                    name: [\n                        {required: true, message: '请输入名称', trigger: 'blur'},\n                        {min: 1, max: 100, message: '长度在 1 到 100 个字符', trigger: 'blur'}\n                    ],\n                    requestProtocol: [\n                        {required: false, message: '请选择协议', trigger: 'blur'},\n                        {min: 4, max: 5, message: 'HTTP or HTTPS', trigger: 'blur'}\n                    ],\n                    requestMethod: [\n                        {required: true, message: '请选择请求方法', trigger: 'blur'}\n                    ],\n                    route: [\n                        {required: true, message: '请输入接口路由', trigger: 'blur'},\n                        {validator: checkRoute, trigger: 'blur'}],\n                    delaySeconds: [\n                        {required: true, message: '请输入请求延迟（秒）', trigger: 'blur'},\n                        {pattern: /^\\d+$/, message: '请输入非负整数', trigger: 'blur'}\n                    ],\n                    service: [\n                        {required: false, message: '请输入服务名', trigger: 'blur'}\n                    ],\n                    parameterRaw: [{required: false, message: '请输入名称', trigger: 'blur'},\n                        {validator: checkJson, trigger: 'blur'}],\n                    checkResponseBody: [{required: false, message: '请输入名称', trigger: 'blur'}],\n                    checkSpendSeconds: [\n                        {required: true, message: '请输入耗时校验（秒）', trigger: 'blur'},\n                        {pattern: /^\\d+$/, message: '请输入非负整数', trigger: 'blur'}\n                    ],\n                },\n                showResponseCodeCheck: false,\n                showSpendSecondsCheck: false,\n                showResponseBodyCheck: false,\n                showResponseNumCheck: false\n            }\n        },\n        methods: {\n            checkJsonFormat(json, err_msg) {\n                if (json !== \"\" && json !== null) {\n                    try {\n                        let obj = JSON.parse(json)\n                        if (typeof obj == 'object' && obj) {\n                            return true\n                        } else {\n                            this.$message.warning({\n                                message: err_msg,\n                                center: true,\n                            });\n                            return false\n                        }\n                    } catch (e) {\n                        console.log(json, e)\n                        this.$message.warning({\n                            message: err_msg,\n                            center: true,\n                        });\n                        return false;\n                    }\n                }\n                return true;\n            },\n            getDBConfigList() {\n                let header = {};\n                let params = {\n                    \"status\": true\n                };\n                getDBConfigs(params, header).then((res) => {\n                    let {status, data} = res;\n                    if (status === 'ok') {\n                        this.dbConfigs = data.rows\n                    } else {\n                        this.$message.error({\n                            message: data,\n                            center: true,\n                        })\n                    }\n                }).catch((error) => {\n                    this.$message.error({\n                        message: 'DB配置列表获取失败，请稍后刷新重试哦~',\n                        center: true,\n                    });\n                });\n            },\n            checkRequestMethod() {\n                let request = this.form.requestMethod;\n                if (request === \"GET\" || request === \"DELETE\") {\n                    this.showRequestBody = false\n                } else {\n                    this.showRequestBody = true\n                }\n            },\n            handleChange(val) {\n            },\n            addDataInit() {\n                let dataInit = {\n                    dbConfigId: '',\n                    dbType: '',\n                    mongoCrud: '',\n                    collection: '',\n                    query: '',\n                    set: '',\n                    sql: ''\n                };\n                this.form.dataInitializes.push(dataInit)\n            },\n            delDataInit(index) {\n                this.form.dataInitializes.splice(index, 1);\n                if (this.form.dataInitializes.length === 0) {\n                    this.form.dataInitializes.push({\n                        dbConfigId: '',\n                        dbType: '',\n                        mongoCrud: '',\n                        collection: '',\n                        query: '',\n                        set: '',\n                        sql: ''\n                    })\n                }\n            },\n            addHeader() {\n                let header = {name: \"\", value: \"\"};\n                this.form.headers.push(header)\n            },\n            delHeader(index) {\n                this.form.headers.splice(index, 1);\n                if (this.form.headers.length === 0) {\n                    this.form.headers.push({name: \"\", value: \"\"})\n                }\n            },\n            addSuffix(query) {\n                const isValidQuery = query.constructor === Array && query.length > 0;\n                if (isValidQuery) {\n                    query.forEach((item, index) => {\n                        const suffixStartIndex = item.search(/\\([0-9]+\\)/);\n                        const expectedSuffix = '(' + (index + 1).toString() + ')';\n                        if (suffixStartIndex === -1) {\n                            query[index] = item + expectedSuffix;\n                        } else {\n                            query[index] = item.substring(0, suffixStartIndex) + expectedSuffix;\n                        }\n                    })\n                }\n                return query\n            },\n            addGlobalVars() {\n                let globalVars = {name: \"\", query: []};\n                this.form.setGlobalVars.push(globalVars)\n            },\n            delGlobalVars(index) {\n                this.form.setGlobalVars.splice(index, 1);\n                if (this.form.setGlobalVars.length === 0) {\n                    this.form.setGlobalVars.push({name: \"\", query: []})\n                }\n            },\n            addCheckResBody() {\n                let checkResBody = {regex: \"\", query: []};\n                this.form.checkResponseBody.push(checkResBody)\n            },\n            delCheckResBody(index) {\n                this.form.checkResponseBody.splice(index, 1);\n                if (this.form.checkResponseBody.length === 0) {\n                    this.form.checkResponseBody.push({regex: \"\", query: []})\n                }\n            },\n            addCheckResNum() {\n                let checkResNumber = {\n                    expressions: {\n                        'firstArg': '',\n                        'operator': '',\n                        'secondArg': '',\n                        'judgeCharacter': '',\n                        'expectResult': ''\n                    }\n                };\n                this.form.checkResponseNumber.push(checkResNumber)\n            },\n            delCheckResNum(index) {\n                this.form.checkResponseNumber.splice(index, 1);\n                if (this.form.checkResponseNumber.length === 0) {\n                    this.form.checkResponseNumber.push({\n                        expressions: {\n                            'firstArg': '',\n                            'operator': '',\n                            'secondArg': '',\n                            'judgeCharacter': '',\n                            'expectResult': ''\n                        }\n                    });\n                }\n            },\n            // 获取Case详细信息\n            getCaseDetailInfo() {\n                let self = this;\n                getCaseDetail(self.$route.params.project_id, self.$route.params.test_suite_id, self.$route.params.test_case_id, {})\n                    .then((res) => {\n                        let {status, data} = res;\n                        if (status === 'ok') {\n                            self.form.name = data.name;\n                            self.form.service = data.service;\n                            if (data.hasOwnProperty('delaySeconds')){\n                              self.form.delaySeconds = data.delaySeconds;\n                            } else{\n                              self.form.delaySeconds = 0;\n                            }\n                            self.form.requestMethod = data.requestMethod;\n                            self.form.requestProtocol = data.requestProtocol;\n                            self.form.route = data.route;\n                            if (data.dataInitializes && data.dataInitializes.length > 0) {\n                                data.dataInitializes.forEach(item => {\n                                    if(item.dbType == \"MongoDB\" && item.set && item.query) {\n                                        item.set = JSON.stringify(item.set, undefined, 4);\n                                    }\n                                })\n                                self.form.dataInitializes = data.dataInitializes;\n                            }\n                            self.form.headers = data.headers;\n                            self.form.domain = data.domain;\n                            self.form.isClearCookie = data.isClearCookie;\n                            self.form.description = data.description;\n                            if (data.parameterType) {\n                                self.form.parameterType = data.parameterType;\n                            } else {\n                                self.form.parameterType = 'json'\n                            }\n                            self.form.isJsonArray = data.isJsonArray;\n                            // 加后缀\n                            data.setGlobalVars.forEach((setGlobalVar) => {\n                                setGlobalVar.query = this.addSuffix(setGlobalVar.query)\n                            });\n                            self.form.setGlobalVars = data.setGlobalVars;\n                            self.form.filePath = data.filePath;\n                            try {\n                                self.form.parameterRaw = JSON.stringify(data.requestBody, undefined, 4);\n                                self.form.parameterRaw = self.form.parameterRaw.replace(/'/g, \"\\\"\").replace(/None/g, \"null\").replace(/True/g, \"true\").replace(/False/g, \"false\");\n                                if (self.form.parameterRaw === '{}') {\n                                    self.form.parameterRaw = ''\n                                }\n                            } catch (e) {\n                                self.$message.error({\n                                    message: '获取请求参数出现异常！' + e,\n                                    center: true,\n                                });\n                            }\n                            self.form.checkResponseCode = data.checkResponseCode;\n                            if (data.checkResponseCode != null) {\n                                self.form.checkResponse = 'checkResponseCode';\n                            }\n                            if (data.hasOwnProperty('checkSpendSeconds')){\n                              self.form.checkSpendSeconds = data.checkSpendSeconds;\n                            } else{\n                              self.form.checkSpendSeconds = 0;\n                            }\n                            \n                            if (self.form.checkSpendSeconds > 0) {\n                                self.form.checkResponse = 'checkSpendSeconds';\n                            }\n                            if (data.checkResponseBody === null || data.checkResponseBody === undefined || data.checkResponseBody[0].regex === \"\") {\n                                self.form.checkResponseBody = [{regex: \"\", query: []}]\n                            } else if(data.checkResponseBody[0].query.length > 0) {\n                                self.form.checkResponse = 'checkResponseBody';\n                                // 加后缀\n                                data.checkResponseBody.forEach((data) => {\n                                    data.query = this.addSuffix(data.query);\n                                });\n                                self.form.checkResponseBody = data.checkResponseBody;\n                            }\n                            if (data.checkResponseNumber === null || data.checkResponseNumber === undefined || data.checkResponseNumber[0].expressions.firstArg === \"\") {\n                                self.form.checkResponseNumber = [{\n                                    expressions: {\n                                        'firstArg': '',\n                                        'operator': '',\n                                        'secondArg': '',\n                                        'judgeCharacter': '',\n                                        'expectResult': ''\n                                    }\n                                }]\n                            } else {\n                                self.form.checkResponse = 'checkResponseNumber';\n                                self.form.checkResponseNumber = data.checkResponseNumber\n                            }\n                        } else {\n                            self.$message.error({\n                                message: data,\n                                center: true,\n                            });\n                        }\n                    })\n                    .catch((error) => {\n                        self.$message.error({\n                            message: '接口用例详情获取失败，请稍后刷新重试哦~',\n                            center: true,\n                        });\n                        self.listLoading = false;\n                    })\n            },\n            // 更新Case信息\n            updateCaseInfo() {\n                this.$refs.form.validate((valid) => {\n                    if (valid) {\n                        let self = this;\n                        let flag = true;\n                        this.$confirm('确认提交吗？', '提示', {}).then(() => {\n                            if (self.form.domain && !this.form.requestProtocol || !self.form.domain && this.form.requestProtocol) {\n                                self.$message.error({\n                                    message: \"domain 和 requestProtocol 立誓同生共死！\",\n                                    center: true,\n                                });\n                                return\n                            }\n                            // 删除后缀\n                            self.form.setGlobalVars.forEach((setGlobalVar) => {\n                                setGlobalVar.query.forEach((query, index) => {\n                                    setGlobalVar.query[index] = query.replace(/\\([0-9]+\\)/, \"\");\n                                })\n                            });\n                            self.form.checkResponseBody.forEach((checkRegex) => {\n                                checkRegex.query.forEach((query, index) => {\n                                    checkRegex.query[index] = query.replace(/\\([0-9]+\\)/, \"\");\n                                })\n                            });\n                            let params = {\n                                name: self.form.name.trim(),\n                                delaySeconds: self.form.delaySeconds,\n                                service: self.form.service,\n                                requestMethod: self.form.requestMethod,\n                                requestProtocol: self.form.requestProtocol,\n                                route: self.form.route,\n                                domain: self.form.domain,\n                                description: self.form.description.trim(),\n                                headers: self.form.headers,\n                                isClearCookie: self.form.isClearCookie,\n                                parameterType: self.form.parameterType,\n                                isJsonArray: self.form.isJsonArray,\n                                setGlobalVars: self.form.setGlobalVars,\n                                checkResponseBody: self.form.checkResponseBody,\n                                checkResponseNumber: self.form.checkResponseNumber,\n                                requestBody: self.form.parameterRaw,\n                                lastUpdateUser: self.$store.getters.email || 'anonymous'\n                            };\n                            // reset isJsonArray\n                            if (self.form.parameterType == 'form') {\n                                params[\"isJsonArray\"] = false;\n                            }\n                            if (self.form.parameterType == 'file') {\n                                params[\"isJsonArray\"] = false;\n                                params[\"filePath\"] = self.form.filePath;\n                            }\n                            // check dataInitializes\n                            if (self.form.dataInitializes && self.form.dataInitializes.length > 0) {\n                                self.form.dataInitializes.forEach((item, index) => {\n                                        if (item.dbType) {\n                                            if (item.dbType == \"MongoDB\") {\n                                                if (item.mongoCrud && item.collection && item.set) {\n                                                    if (!this.checkJsonFormat(item.set, \"MongoDB 参数:set 格式不正确\")) {\n                                                        flag = false;\n                                                    }\n                                                    if (item.query && !this.checkJsonFormat(item.query, \"MongoDB 参数:query 格式不正确\")) {\n                                                        flag = false;\n                                                    }\n                                                    item.set = JSON.parse(item.set);\n                                                    item.query = JSON.parse(item.query);\n                                                }\n                                            } else {\n                                                if (!item.query) {\n                                                    this.$message.warning({\n                                                        message: 'SQL不正确!',\n                                                        center: true,\n                                                    });\n                                                    flag = false;\n                                                }\n                                            }\n                                        }\n                                    }\n                                )\n                                params[\"dataInitializes\"] = self.form.dataInitializes;\n                            }\n                            if (self.form.checkResponseCode){\n                                params[\"checkResponseCode\"] = self.form.checkResponseCode\n                            } else {\n                                params[\"checkResponseCode\"] = null\n                            }\n                            if (self.form.checkSpendSeconds){\n                                params[\"checkSpendSeconds\"] = self.form.checkSpendSeconds\n                            } else {\n                                params[\"checkSpendSeconds\"] = 0\n                            }\n                            if (self.form.checkResponse == \"noCheck\"){\n                                params[\"checkResponseCode\"] = null\n                                params[\"checkSpendSeconds\"] = 0\n                                params[\"checkResponseBody\"] = [{regex: \"\", query: []}]\n                                params[\"checkResponseNumber\"] = [{\n                                    expressions: {\n                                        'firstArg': '',\n                                        'operator': '',\n                                        'secondArg': '',\n                                        'judgeCharacter': '',\n                                        'expectResult': ''\n                                    }\n                                }]\n                            }\n                            if (flag) {\n                                let header = {};\n                                updateTestCase(self.$route.params.project_id, self.$route.params.test_suite_id, self.$route.params.test_case_id,\n                                    params, header).then((res) => {\n                                    let {status, data} = res;\n                                    if (status === 'ok') {\n                                        self.$router.push({\n                                            name: 'TestCaseList', params: {\n                                                project_id: self.$route.params.project_id,\n                                                test_suite_id: self.$route.params.test_suite_id\n                                            }\n                                        });\n                                        self.$message({\n                                            message: '修改成功',\n                                            center: true,\n                                            type: 'success'\n                                        })\n                                    } else {\n                                        self.$message.error({\n                                            message: data,\n                                            center: true,\n                                        })\n                                    }\n                                })\n                            } else {\n                                return\n                            }\n                        })\n                    }\n                })\n            },\n        },\n        watch: {\n            form: {\n                //注意：当观察的数据为对象或数组时，curVal和oldVal是相等的，因为这两个形参指向的是同一个数据对象\n                handler(curVal, oldVal) {\n                    if (curVal.checkResponse === 'noCheck') {\n                        this.showResponseCodeCheck = false\n                        this.showSpendSecondsCheck = false\n                        this.showResponseBodyCheck = false\n                        this.showResponseNumCheck = false\n                    } else if (curVal.checkResponse === 'checkResponseCode') {\n                        this.showResponseCodeCheck = true\n                        this.showSpendSecondsCheck = false\n                        this.showResponseBodyCheck = false\n                        this.showResponseNumCheck = false\n                    } else if (curVal.checkResponse === 'checkSpendSeconds') {\n                        this.showResponseCodeCheck = false\n                        this.showSpendSecondsCheck = true\n                        this.showResponseBodyCheck = false\n                        this.showResponseNumCheck = false\n                    } else if (curVal.checkResponse === 'checkResponseBody') {\n                        this.showResponseCodeCheck = false\n                        this.showSpendSecondsCheck = false\n                        this.showResponseBodyCheck = true\n                        this.showResponseNumCheck = false\n                    } else if (curVal.checkResponse === 'checkResponseNumber') {\n                        this.showResponseCodeCheck = false\n                        this.showSpendSecondsCheck = false\n                        this.showResponseBodyCheck = false\n                        this.showResponseNumCheck = true\n                    }\n                },\n                deep: true\n            },\n        },\n        created() {\n            this.getDBConfigList();\n            this.getCaseDetailInfo();\n        }\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n  .title {\n    width: 200px;\n    float: left;\n    color: #475669;\n    font-size: 25px;\n    margin: 10px 5px;\n    font-family: Arial;\n  }\n\n  .return-list {\n    margin-top: 0px;\n    margin-bottom: 10px;\n    margin-left: 20px;\n    border-radius: 25px;\n  }\n\n  .head-class {\n    font-size: 17px\n  }\n\n  .parameter-a {\n    display: block;\n  }\n\n  .parameter-b {\n    display: none;\n  }\n\n  .selectInput {\n    position: absolute;\n    /*margin-left: 7px;*/\n    padding-left: 9px;\n    width: 180px;\n    /*border-radius:0px;*/\n    /*height: 38px;*/\n    left: 1px;\n    border-right: 0px;\n\n    input {\n      border-right: 0px;\n      border-radius: 4px 0px 0px 4px;\n    }\n  }\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/project/autoTest/EditTestCase.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',[_c('el-col',{attrs:{\"span\":24}},[_c('strong',{staticClass:\"title\"},[_vm._v(_vm._s(_vm.$route.meta.title))])]),_vm._v(\" \"),_c('el-col',{staticClass:\"toolbar\",staticStyle:{\"padding-bottom\":\"0px\"},attrs:{\"span\":24}},[_c('router-link',{staticStyle:{\"text-decoration\":\"none\",\"color\":\"aliceblue\"},attrs:{\"to\":{\n                  name: 'TestCaseList', params: {\n                    project_id: this.$route.params.project_id,\n                    test_case_id: this.$route.params.test_case_id\n                  }\n              }}},[_c('el-button',{staticClass:\"return-list\"},[_c('i',{staticClass:\"el-icon-d-arrow-left\",staticStyle:{\"margin-right\":\"5px\"},attrs:{\"return-list\":\"\"}}),_vm._v(\"返回\\n      \")])],1),_vm._v(\" \"),_c('div',{staticStyle:{\"float\":\"right\",\"margin-right\":\"80px\"}},[_c('router-link',{staticStyle:{\"text-decoration\":\"none\",\"color\":\"aliceblue\"},attrs:{\"to\":{\n                  name: 'TestCaseList', params: {\n                    project_id: this.$route.params.project_id,\n                    test_case_id: this.$route.params.test_case_id\n                  }\n              }}},[_c('el-button',{staticClass:\"return-list\"},[_c('i',{staticClass:\"el-icon-close\",staticStyle:{\"margin-right\":\"5px\"},attrs:{\"return-list\":\"\"}}),_vm._v(\"取消\\n        \")])],1),_vm._v(\" \"),_c('el-button',{staticClass:\"return-list\",attrs:{\"type\":\"primary\"},nativeOn:{\"click\":function($event){return _vm.updateCaseInfo($event)}}},[_c('i',{staticClass:\"el-icon-check\",staticStyle:{\"margin-right\":\"5px\"},attrs:{\"return-list\":\"\"}}),_vm._v(\"保存\\n      \")])],1)],1),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":24}},[_c('el-form',{ref:\"form\",attrs:{\"model\":_vm.form,\"rules\":_vm.formRules}},[_c('div',{staticStyle:{\"border\":\"1px solid #e6e6e6\",\"margin-bottom\":\"10px\",\"padding\":\"15px\"}},[_c('el-row',{attrs:{\"gutter\":10}},[_c('el-col',{attrs:{\"span\":22}},[_c('el-form-item',{attrs:{\"label\":\"接口名称:\",\"label-width\":\"100px\",\"prop\":\"name\"}},[_c('el-input',{attrs:{\"placeholder\":\"名称\",\"auto-complete\":\"\"},model:{value:(_vm.form.name),callback:function ($$v) {_vm.$set(_vm.form, \"name\", $$v)},expression:\"form.name\"}})],1)],1)],1),_vm._v(\" \"),_c('el-row',{attrs:{\"gutter\":10}},[_c('el-col',{attrs:{\"span\":4}},[_c('el-form-item',{attrs:{\"label\":\"请求URL:\",\"label-width\":\"100px\"}},[_c('el-select',{attrs:{\"placeholder\":\"请求方式\"},on:{\"change\":_vm.checkRequestMethod},model:{value:(_vm.form.requestMethod),callback:function ($$v) {_vm.$set(_vm.form, \"requestMethod\", $$v)},expression:\"form.requestMethod\"}},_vm._l((_vm.MethodOptions),function(item,index){return _c('el-option',{key:index+'',attrs:{\"label\":item.label,\"value\":item.value}})}),1)],1)],1),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":3}},[_c('el-form-item',[_c('el-select',{attrs:{\"placeholder\":\"请求协议\"},model:{value:(_vm.form.requestProtocol),callback:function ($$v) {_vm.$set(_vm.form, \"requestProtocol\", $$v)},expression:\"form.requestProtocol\"}},_vm._l((_vm.ProtocolOptions),function(item,index){return _c('el-option',{key:index+'',attrs:{\"label\":item.label,\"value\":item.value}})}),1)],1)],1),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":6}},[_c('el-form-item',{attrs:{\"prop\":\"domain\"}},[_c('el-input',{attrs:{\"placeholder\":\"请输入访问域名(优先级最高)\",\"auto-complete\":\"\"},model:{value:(_vm.form.domain),callback:function ($$v) {_vm.$set(_vm.form, \"domain\", (typeof $$v === 'string'? $$v.trim(): $$v))},expression:\"form.domain\"}})],1)],1),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":9}},[_c('el-form-item',{attrs:{\"prop\":\"route\"}},[_c('el-input',{attrs:{\"placeholder\":\"请输入接口路由\",\"auto-complete\":\"\"},model:{value:(_vm.form.route),callback:function ($$v) {_vm.$set(_vm.form, \"route\", (typeof $$v === 'string'? $$v.trim(): $$v))},expression:\"form.route\"}})],1)],1)],1),_vm._v(\" \"),_c('el-row',{attrs:{\"gutter\":10}},[_c('el-col',{attrs:{\"span\":6}},[_c('el-form-item',{attrs:{\"label\":\"Service:\",\"label-width\":\"100px\",\"prop\":\"service\"}},[_c('el-input',{attrs:{\"placeholder\":\"所属Service\",\"auto-complete\":\"\"},model:{value:(_vm.form.service),callback:function ($$v) {_vm.$set(_vm.form, \"service\", (typeof $$v === 'string'? $$v.trim(): $$v))},expression:\"form.service\"}})],1)],1),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":6}},[_c('el-form-item',{attrs:{\"label\":\"请求延迟（秒）:\",\"label-width\":\"130px\",\"prop\":\"delaySeconds\"}},[_c('el-input',{attrs:{\"placeholder\":\"请求延迟（秒）\"},model:{value:(_vm.form.delaySeconds),callback:function ($$v) {_vm.$set(_vm.form, \"delaySeconds\", _vm._n($$v))},expression:\"form.delaySeconds\"}})],1)],1),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":6}},[_c('el-form-item',{attrs:{\"label\":\"请求前是否清除Cookie:\",\"label-width\":\"180px\",\"prop\":\"isClearCookie\"}},[_c('el-checkbox',{model:{value:(_vm.form.isClearCookie),callback:function ($$v) {_vm.$set(_vm.form, \"isClearCookie\", (typeof $$v === 'string'? $$v.trim(): $$v))},expression:\"form.isClearCookie\"}})],1)],1)],1),_vm._v(\" \"),_c('el-row',{attrs:{\"gutter\":10}},[_c('el-col',{attrs:{\"span\":22}},[_c('el-form-item',{attrs:{\"label\":\"接口描述:\",\"label-width\":\"100px\",\"prop\":\"description\"}},[_c('el-input',{attrs:{\"type\":\"textarea\",\"rows\":5,\"placeholder\":\"请输入用例描述\",\"auto-complete\":\"\"},model:{value:(_vm.form.description),callback:function ($$v) {_vm.$set(_vm.form, \"description\", $$v)},expression:\"form.description\"}})],1)],1)],1)],1),_vm._v(\" \"),_c('el-row',{attrs:{\"span\":24}},[_c('el-collapse',{on:{\"change\":_vm.handleChange},model:{value:(_vm.activeNames),callback:function ($$v) {_vm.activeNames=$$v},expression:\"activeNames\"}},[_c('el-collapse-item',{attrs:{\"title\":\"数据初始化\",\"name\":\"1\"}},[_c('el-table',{attrs:{\"data\":_vm.form.dataInitializes,\"highlight-current-row\":\"\"}},[_c('el-table-column',{attrs:{\"prop\":\"dbType\",\"label\":\"DB Type\",\"min-width\":\"10%\",\"sortable\":\"\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-select',{staticStyle:{\"width\":\"90%\"},attrs:{\"placeholder\":\"请选择DB类型\",\"clearable\":\"\",\"filterable\":\"\",\"allow-create\":\"\",\"default-first-option\":\"\"},model:{value:(scope.row.dbType),callback:function ($$v) {_vm.$set(scope.row, \"dbType\", $$v)},expression:\"scope.row.dbType\"}},_vm._l((_vm.DBTypeOptions),function(item,index){return _c('el-option',{key:index+'',attrs:{\"label\":item.label,\"value\":item.value}})}),1)]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"dbConfig\",\"label\":\"选择DB\",\"min-width\":\"10%\",\"sortable\":\"\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-select',{staticStyle:{\"width\":\"90%\"},attrs:{\"placeholder\":\"请选择DB\",\"clearable\":\"\",\"filterable\":\"\",\"allow-create\":\"\",\"default-first-option\":\"\"},model:{value:(scope.row.dbConfigId),callback:function ($$v) {_vm.$set(scope.row, \"dbConfigId\", $$v)},expression:\"scope.row.dbConfigId\"}},_vm._l((_vm.dbConfigs),function(item,index){return _c('el-option',{key:index+'',attrs:{\"label\":item.name,\"value\":item._id}})}),1)]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"type\":\"expand\"},scopedSlots:_vm._u([{key:\"default\",fn:function(props){return [(props.row.dbType == 'MongoDB')?_c('el-row',{attrs:{\"gutter\":10}},[_c('el-col',{attrs:{\"span\":10}},[_c('el-form-item',{attrs:{\"label\":\"Mongo CRUD:\",\"label-width\":\"120px\"}},[_c('el-select',{staticStyle:{\"width\":\"90%\"},attrs:{\"placeholder\":\"请选择方法\",\"clearable\":\"\",\"filterable\":\"\",\"allow-create\":\"\",\"default-first-option\":\"\"},model:{value:(props.row.mongoCrud),callback:function ($$v) {_vm.$set(props.row, \"mongoCrud\", $$v)},expression:\"props.row.mongoCrud\"}},_vm._l((_vm.MongoCRUDOptions),function(item,index){return _c('el-option',{key:index+'',attrs:{\"label\":item.label,\"value\":item.value}})}),1)],1)],1),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":10}},[_c('el-form-item',{attrs:{\"label\":\"Collection:\",\"label-width\":\"83px\"}},[_c('el-input',{attrs:{\"value\":props.row.collection,\"placeholder\":\"请输入要变更的collection\"},model:{value:(props.row.collection),callback:function ($$v) {_vm.$set(props.row, \"collection\", $$v)},expression:\"props.row.collection\"}})],1)],1)],1):_vm._e(),_vm._v(\" \"),(props.row.dbType == 'MongoDB')?_c('el-row',{attrs:{\"gutter\":10}},[(props.row.mongoCrud != 'insert_one')?_c('el-col',{attrs:{\"span\":10}},[_c('el-form-item',{attrs:{\"label\":\"查询条件:\",\"label-width\":\"120px\"}},[_c('el-input',{attrs:{\"type\":\"textarea\",\"rows\":5,\"value\":props.row.query,\"placeholder\":\"请输入查询条件,Update适用,例:{'key': 'value'}, 注意：true->True,false->False,null->None\"},model:{value:(props.row.query),callback:function ($$v) {_vm.$set(props.row, \"query\", $$v)},expression:\"props.row.query\"}})],1)],1):_vm._e(),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":10}},[_c('el-form-item',{attrs:{\"label\":\"变更内容:\",\"label-width\":\"120px\"}},[_c('el-input',{attrs:{\"type\":\"textarea\",\"rows\":5,\"value\":props.row.set,\"placeholder\":\"请输入要变更(插入)的内容,例:{'key': 'value'}, 注意：true->True,false->False,null->None\"},model:{value:(props.row.set),callback:function ($$v) {_vm.$set(props.row, \"set\", $$v)},expression:\"props.row.set\"}})],1)],1)],1):_vm._e(),_vm._v(\" \"),(props.row.dbType != 'MongoDB')?_c('el-row',{attrs:{\"gutter\":10}},[_c('el-col',{attrs:{\"span\":20}},[_c('el-form-item',{attrs:{\"label\":\"SQL:\",\"label-width\":\"80px\"}},[_c('el-input',{attrs:{\"type\":\"textarea\",\"rows\":5,\"value\":props.row.sql,\"placeholder\":\"请输入SQL语句\"},model:{value:(props.row.sql),callback:function ($$v) {_vm.$set(props.row, \"sql\", $$v)},expression:\"props.row.sql\"}})],1)],1)],1):_vm._e()]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"操作\",\"min-width\":\"5%\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('i',{staticClass:\"el-icon-delete\",staticStyle:{\"font-size\":\"30px\",\"cursor\":\"pointer\"},on:{\"click\":function($event){return _vm.delDataInit(scope.$index)}}})]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"\",\"min-width\":\"10%\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [(scope.$index===(_vm.form.dataInitializes.length-1))?_c('el-button',{staticClass:\"el-icon-plus\",attrs:{\"size\":\"mini\"},on:{\"click\":_vm.addDataInit}}):_vm._e()]}}])})],1)],1),_vm._v(\" \"),_c('el-collapse-item',{attrs:{\"title\":\"请求头部\",\"name\":\"2\"}},[_c('el-table',{attrs:{\"data\":_vm.form.headers,\"highlight-current-row\":\"\"}},[_c('el-table-column',{attrs:{\"prop\":\"name\",\"label\":\"标签\",\"min-width\":\"15%\",\"sortable\":\"\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-select',{staticStyle:{\"width\":\"90%\"},attrs:{\"placeholder\":\"请输入/选择标签\",\"clearable\":\"\",\"filterable\":\"\",\"allow-create\":\"\",\"default-first-option\":\"\"},model:{value:(scope.row.name),callback:function ($$v) {_vm.$set(scope.row, \"name\", (typeof $$v === 'string'? $$v.trim(): $$v))},expression:\"scope.row.name\"}},_vm._l((_vm.HeaderOptions),function(item,index){return _c('el-option',{key:index+'',attrs:{\"label\":item.label,\"value\":item.value}})}),1)]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"value\",\"label\":\"内容\",\"min-width\":\"20%\",\"sortable\":\"\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-input',{attrs:{\"value\":scope.row.value,\"placeholder\":\"请输入内容\"},model:{value:(scope.row.value),callback:function ($$v) {_vm.$set(scope.row, \"value\", (typeof $$v === 'string'? $$v.trim(): $$v))},expression:\"scope.row.value\"}})]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"操作\",\"min-width\":\"5%\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('i',{staticClass:\"el-icon-delete\",staticStyle:{\"font-size\":\"30px\",\"cursor\":\"pointer\"},on:{\"click\":function($event){return _vm.delHeader(scope.$index)}}})]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"\",\"min-width\":\"10%\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [(scope.$index===(_vm.form.headers.length-1))?_c('el-button',{staticClass:\"el-icon-plus\",attrs:{\"size\":\"mini\"},on:{\"click\":_vm.addHeader}}):_vm._e()]}}])})],1)],1),_vm._v(\" \"),_c('el-collapse-item',{attrs:{\"title\":\"请求参数\",\"name\":\"3\"}},[_c('div',{staticStyle:{\"margin\":\"5px\"}},[_c('el-row',{staticStyle:{\"margin-bottom\":\"10px\"},attrs:{\"span\":24}},[(_vm.showRequestBody)?_c('el-col',{attrs:{\"span\":18}},[_c('el-radio',{attrs:{\"label\":\"json\"},model:{value:(_vm.form.parameterType),callback:function ($$v) {_vm.$set(_vm.form, \"parameterType\", $$v)},expression:\"form.parameterType\"}},[_vm._v(\"源数据(raw) —— 支持json数组\")]),_vm._v(\" \"),_c('el-radio',{attrs:{\"label\":\"form\"},model:{value:(_vm.form.parameterType),callback:function ($$v) {_vm.$set(_vm.form, \"parameterType\", $$v)},expression:\"form.parameterType\"}},[_vm._v(\"Form Data（Content-Type=application/x-www-form-urlencoded)\")]),_vm._v(\" \"),_c('el-radio',{attrs:{\"label\":\"file\"},model:{value:(_vm.form.parameterType),callback:function ($$v) {_vm.$set(_vm.form, \"parameterType\", $$v)},expression:\"form.parameterType\"}},[_vm._v(\"File Upload（Content-Type=multipart/form-data)\")])],1):_vm._e(),_vm._v(\" \"),(_vm.form.parameterType == 'json')?_c('el-col',{staticStyle:{\"float\":\"right\"},attrs:{\"span\":3}},[_c('el-checkbox',{attrs:{\"label\":\"是否 json数组\"},model:{value:(_vm.form.isJsonArray),callback:function ($$v) {_vm.$set(_vm.form, \"isJsonArray\", (typeof $$v === 'string'? $$v.trim(): $$v))},expression:\"form.isJsonArray\"}})],1):_vm._e()],1),_vm._v(\" \"),[(_vm.form.parameterType == 'file')?_c('el-form-item',{attrs:{\"label\":\"\",\"prop\":\"filePath\"}},[_c('el-input',{attrs:{\"placeholder\":\"请输入文件绝对路径\"},model:{value:(_vm.form.filePath),callback:function ($$v) {_vm.$set(_vm.form, \"filePath\", (typeof $$v === 'string'? $$v.trim(): $$v))},expression:\"form.filePath\"}})],1):_vm._e(),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"\",\"prop\":\"parameterRaw\"}},[_c('el-input',{attrs:{\"type\":\"textarea\",\"rows\":8,\"placeholder\":\"请输入参数内容({'username': 'test'})\"},model:{value:(_vm.form.parameterRaw),callback:function ($$v) {_vm.$set(_vm.form, \"parameterRaw\", (typeof $$v === 'string'? $$v.trim(): $$v))},expression:\"form.parameterRaw\"}})],1)]],2)]),_vm._v(\" \"),_c('el-collapse-item',{attrs:{\"title\":\"返回结果设置全局变量(Suite级别)\",\"name\":\"4\"}},[_c('el-table',{attrs:{\"data\":_vm.form.setGlobalVars,\"highlight-current-row\":\"\"}},[_c('el-table-column',{attrs:{\"prop\":\"name\",\"label\":\"变量名\",\"min-width\":\"20%\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-input',{attrs:{\"value\":scope.row.name,\"placeholder\":\"请输入变量名\"},model:{value:(scope.row.name),callback:function ($$v) {_vm.$set(scope.row, \"name\", (typeof $$v === 'string'? $$v.trim(): $$v))},expression:\"scope.row.name\"}})]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"query\",\"label\":\"变量查询语句\",\"min-width\":\"30%\",\"sortable\":\"\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-select',{staticStyle:{\"width\":\"70%\"},attrs:{\"multiple\":\"\",\"clearable\":\"\",\"filterable\":\"\",\"default-first-option\":\"\",\"allow-create\":\"\",\"placeholder\":\"请输入变量查询语句(不输入则返回整个JSON字符串)\"},on:{\"change\":function($event){return _vm.addSuffix(scope.row.query)}},model:{value:(scope.row.query),callback:function ($$v) {_vm.$set(scope.row, \"query\", (typeof $$v === 'string'? $$v.trim(): $$v))},expression:\"scope.row.query\"}})]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"操作\",\"min-width\":\"5%\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('i',{staticClass:\"el-icon-delete\",staticStyle:{\"font-size\":\"30px\",\"cursor\":\"pointer\"},on:{\"click\":function($event){return _vm.delGlobalVars(scope.$index)}}})]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"\",\"min-width\":\"10%\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [(scope.$index===(_vm.form.setGlobalVars.length-1))?_c('el-button',{staticClass:\"el-icon-plus\",attrs:{\"size\":\"mini\"},on:{\"click\":_vm.addGlobalVars}}):_vm._e()]}}])})],1)],1),_vm._v(\" \"),_c('el-collapse-item',{attrs:{\"title\":\"测试结果校验\",\"name\":\"5\"}},[_c('el-card',{staticClass:\"box-card\"},[_c('div',{attrs:{\"slot\":\"header\"},slot:\"header\"},[_c('el-radio-group',{model:{value:(_vm.form.checkResponse),callback:function ($$v) {_vm.$set(_vm.form, \"checkResponse\", $$v)},expression:\"form.checkResponse\"}},[_c('el-radio-button',{attrs:{\"label\":\"noCheck\"}},[_c('div',[_vm._v(\"不校验\")])]),_vm._v(\" \"),_c('el-radio-button',{attrs:{\"label\":\"checkResponseCode\"}},[_c('div',[_vm._v(\"HTTP状态校验\")])]),_vm._v(\" \"),_c('el-radio-button',{attrs:{\"label\":\"checkSpendSeconds\"}},[_c('div',[_vm._v(\"接口耗时校验\")])]),_vm._v(\" \"),_c('el-radio-button',{attrs:{\"label\":\"checkResponseBody\"}},[_c('div',[_vm._v(\"JSON正则校验\")])]),_vm._v(\" \"),_c('el-radio-button',{attrs:{\"label\":\"checkResponseNumber\"}},[_c('div',[_vm._v(\"数值校验\")])])],1)],1),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.showResponseCodeCheck),expression:\"showResponseCodeCheck\"}]},[_c('el-select',{attrs:{\"clearable\":\"\",\"placeholder\":\"HTTP返回状态\"},model:{value:(_vm.form.checkResponseCode),callback:function ($$v) {_vm.$set(_vm.form, \"checkResponseCode\", $$v)},expression:\"form.checkResponseCode\"}},_vm._l((_vm.ResponseCodeOptions),function(item,index){return _c('el-option',{key:index+'',attrs:{\"label\":item.label,\"value\":item.value}})}),1)],1),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.showSpendSecondsCheck),expression:\"showSpendSecondsCheck\"}]},[_c('el-form-item',{attrs:{\"label\":\"接口耗时小于（秒）:\",\"label-width\":\"200px\",\"prop\":\"checkSpendSeconds\"}},[_c('el-input',{staticStyle:{\"width\":\"30%\"},attrs:{\"placeholder\":\"接口耗时小于（秒）\"},model:{value:(_vm.form.checkSpendSeconds),callback:function ($$v) {_vm.$set(_vm.form, \"checkSpendSeconds\", _vm._n($$v))},expression:\"form.checkSpendSeconds\"}})],1)],1),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.showResponseBodyCheck),expression:\"showResponseBodyCheck\"}]},[_c('el-collapse-item',{attrs:{\"title\":\"JSON正则校验\",\"name\":\"5\"}},[_c('el-table',{attrs:{\"data\":_vm.form.checkResponseBody,\"highlight-current-row\":\"\"}},[_c('el-table-column',{attrs:{\"prop\":\"regex\",\"label\":\"正则语句\",\"min-width\":\"20%\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-input',{attrs:{\"placeholder\":\"请输入正则语句\"},model:{value:(scope.row.regex),callback:function ($$v) {_vm.$set(scope.row, \"regex\", (typeof $$v === 'string'? $$v.trim(): $$v))},expression:\"scope.row.regex\"}})]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"query\",\"label\":\"变量查询语句\",\"min-width\":\"30%\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-select',{staticStyle:{\"width\":\"70%\"},attrs:{\"multiple\":\"\",\"filterable\":\"\",\"clearable\":\"\",\"default-first-option\":\"\",\"allow-create\":\"\",\"placeholder\":\"请输入变量查询语句(不输入则返回整个JSON字符串)\"},on:{\"change\":function($event){return _vm.addSuffix(scope.row.query)}},model:{value:(scope.row.query),callback:function ($$v) {_vm.$set(scope.row, \"query\", (typeof $$v === 'string'? $$v.trim(): $$v))},expression:\"scope.row.query\"}})]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"操作\",\"min-width\":\"5%\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('i',{staticClass:\"el-icon-delete\",staticStyle:{\"font-size\":\"30px\",\"cursor\":\"pointer\"},on:{\"click\":function($event){return _vm.delCheckResBody(scope.$index)}}})]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"\",\"min-width\":\"10%\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [(scope.$index===(_vm.form.checkResponseBody.length-1))?_c('el-button',{staticClass:\"el-icon-plus\",attrs:{\"size\":\"mini\"},on:{\"click\":_vm.addCheckResBody}}):_vm._e()]}}])})],1)],1)],1),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.showResponseNumCheck),expression:\"showResponseNumCheck\"}]},[_c('el-collapse-item',{attrs:{\"title\":\"数值校验\",\"name\":\"5\"}},[_c('el-table',{attrs:{\"data\":_vm.form.checkResponseNumber,\"highlight-current-row\":\"\"}},[_c('el-table-column',{attrs:{\"label\":\"数值一\",\"min-width\":\"5%\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-input',{attrs:{\"placeholder\":\"请输入数值一\"},model:{value:(scope.row.expressions.firstArg),callback:function ($$v) {_vm.$set(scope.row.expressions, \"firstArg\", (typeof $$v === 'string'? $$v.trim(): $$v))},expression:\"scope.row.expressions.firstArg\"}})]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"运算\",\"min-width\":\"3%\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-select',{attrs:{\"clearable\":\"\",\"placeholder\":\"请选择运算\"},model:{value:(scope.row.expressions.operator),callback:function ($$v) {_vm.$set(scope.row.expressions, \"operator\", (typeof $$v === 'string'? $$v.trim(): $$v))},expression:\"scope.row.expressions.operator\"}},_vm._l((_vm.operatorOptions),function(item,index){return _c('el-option',{key:index,attrs:{\"label\":item.label,\"value\":item.value}})}),1)]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"数值二\",\"min-width\":\"5%\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-input',{attrs:{\"placeholder\":\"请输入数值二\"},model:{value:(scope.row.expressions.secondArg),callback:function ($$v) {_vm.$set(scope.row.expressions, \"secondArg\", (typeof $$v === 'string'? $$v.trim(): $$v))},expression:\"scope.row.expressions.secondArg\"}})]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"判断\",\"min-width\":\"3%\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-select',{attrs:{\"clearable\":\"\",\"placeholder\":\"请选择判断\"},model:{value:(scope.row.expressions.judgeCharacter),callback:function ($$v) {_vm.$set(scope.row.expressions, \"judgeCharacter\", (typeof $$v === 'string'? $$v.trim(): $$v))},expression:\"scope.row.expressions.judgeCharacter\"}},_vm._l((_vm.judgeCharacterOptions),function(item,index){return _c('el-option',{key:index,attrs:{\"label\":item.label,\"value\":item.value}})}),1)]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"期待结果\",\"min-width\":\"5%\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-input',{attrs:{\"placeholder\":\"请输入期待结果\"},model:{value:(scope.row.expressions.expectResult),callback:function ($$v) {_vm.$set(scope.row.expressions, \"expectResult\", (typeof $$v === 'string'? $$v.trim(): $$v))},expression:\"scope.row.expressions.expectResult\"}})]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"操作\",\"min-width\":\"1%\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('i',{staticClass:\"el-icon-delete\",staticStyle:{\"font-size\":\"30px\",\"cursor\":\"pointer\"},on:{\"click\":function($event){return _vm.delCheckResNum(scope.$index)}}})]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"\",\"min-width\":\"5%\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [(scope.$index===(_vm.form.checkResponseNumber.length-1))?_c('el-button',{staticClass:\"el-icon-plus\",attrs:{\"size\":\"mini\"},on:{\"click\":_vm.addCheckResNum}}):_vm._e()]}}])})],1)],1)],1)])],1)],1)],1)],1)],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-dd3a0a20\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/project/autoTest/EditTestCase.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-dd3a0a20\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!sass-resources-loader?{\\\"resources\\\":\\\"D:\\\\\\\\PycharmProjects\\\\\\\\leo-api-auto\\\\\\\\frontend\\\\\\\\element-variables.scss\\\"}!../../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./EditTestCase.vue\")\n}\nvar normalizeComponent = require(\"!../../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./EditTestCase.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./EditTestCase.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-dd3a0a20\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./EditTestCase.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-dd3a0a20\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/project/autoTest/EditTestCase.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}