{"version":3,"sources":["webpack:///src/components/config/mailConfig/MailConfig.vue","webpack:///./src/api/mailSender.js","webpack:///./src/components/config/mailConfig/MailConfig.vue?252b","webpack:///./src/components/config/mailConfig/MailConfig.vue"],"names":["MailConfig","name","data","filters","mailGroupList","size","skip","sortBy","order","pageNum","totalNum","listLoading","statusChangeLoading","testMailSenderLoading","isMailSenderChecked","selects","titleMap","add","edit","dialogStatus","mailGroupFormVisible","editLoading","mailGroupForm","email","description","initForm","mailGroupFormRules","required","message","trigger","min","max","configFormVisible","configLoading","senderMailExisted","configForm","password","SMTPServer","SMTPPort","configFormRules","type","methods","queryMailGroupList","params","self","this","Object","mail","then","res","status","rows","$message","error","center","catch","getMailGroupList","trim","handleSizeChange","val","handleCurrentChange","sortChange","column","prop","handleChangeStatus","index","row","_id","Content-Type","selectsChange","reportRowStyle","_ref","rowIndex","ReportTableRow","_ref2","handleEdit","assign_default","handleAdd","handleConfig","submitMailGroup","_this","$refs","form","validate","valid","$confirm","headers","createUser","$store","getters","resetFields","_params","lastUpdateUser","getSender","_this2","request","url","method","getMailSender","testMailSender","mailSenderTest","success","warning","configSubmit","_this3","header","sender_id","updateMailSender","addMailSender","created","mailConfig_MailConfig","render","_vm","_h","$createElement","_c","_self","staticClass","_v","_s","$route","meta","title","staticStyle","padding-bottom","attrs","span","inline","model","nativeOn","submit","$event","preventDefault","text-decoration","color","to","on","click","$router","back","margin-right","roles","includes","margin-left","_e","float","placeholder","keyup","indexOf","_k","keyCode","key","value","callback","$$v","$set","expression","directives","rawName","width","row-style","row-class-name","highlight-current-row","sort-change","selection-change","min-width","label","sortable","show-overflow-tooltip","scopedSlots","_u","fn","scope","mail_group_id","src","__webpack_require__","$index","loading","page-sizes","page-size","layout","total","size-change","current-change","left","visible","close-on-click-modal","update:visible","ref","rules","label-width","auto-complete","slot","disabled","staticRenderFns","Component","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/20.56b14ef38199b4ff87a6.js","sourcesContent":["<template>\n  <section>\n    <!--页面title-->\n    <strong class=\"title\">{{$route.meta.title}}</strong>\n    <!--工具条-->\n    <el-col :span=\"24\" class=\"toolbar\" style=\"padding-bottom: 0px\">\n      <el-form :inline=\"true\" :model=\"filters\" @submit.native.prevent>\n        <router-link to=\"\" style=\"text-decoration: none;color: aliceblue;\">\n          <el-button class=\"return-list\" @click=\"$router.back(-1)\">\n            <i class=\"el-icon-d-arrow-left\" style=\"margin-right: 5px\"></i>返回\n          </el-button>\n        </router-link>\n        <el-form-item style=\"margin-left: 35px\" v-if=\"$store.getters.roles.includes('admin')\">\n          <el-button class=\"el-icon-plus\" type=\"primary\" @click=\"handleConfig\">发件人配置</el-button>\n        </el-form-item>\n        <el-form-item style=\"margin-left: 20px\" v-if=\"$store.getters.roles.includes('admin')\">\n          <el-button class=\"el-icon-plus\" type=\"primary\" @click=\"handleAdd\">新增收件人分组</el-button>\n        </el-form-item>\n        <div style=\"float: right; margin-right: 95px\">\n          <el-form-item>\n            <el-input v-model.trim=\"filters.name\" placeholder=\"名称\" @keyup.enter.native=\"getMailGroupList\"></el-input>\n          </el-form-item>\n          <el-form-item>\n            <el-button type=\"primary\" class=\"el-icon-search\" @click=\"getMailGroupList\">查询</el-button>\n          </el-form-item>\n        </div>\n      </el-form>\n    </el-col>\n\n    <!--列表-->\n    <el-table @sort-change='sortChange' :data=\"mailGroupList\" :row-style=\"reportRowStyle\"\n              :row-class-name=\"ReportTableRow\"\n              highlight-current-row v-loading=\"listLoading\" @selection-change=\"selectsChange\" style=\"width: 100%;\">\n      <el-table-column type=\"selection\" min-width=\"10%\">\n      </el-table-column>\n      <el-table-column prop=\"name\" label=\"名称\" min-width=\"30%\" sortable='custom' show-overflow-tooltip>\n        <template slot-scope=\"scope\">\n          <router-link :to=\"{name:'MailGroupConfig',params:{mail_group_id: scope.row._id}}\">\n            {{scope.row.name}}\n          </router-link>\n        </template>\n      </el-table-column>\n      <el-table-column prop=\"description\" label=\"描述\" min-width=\"30%\" sortable='custom' show-overflow-tooltip>\n      </el-table-column>\n      <el-table-column prop=\"status\" label=\"状态\" min-width=\"30%\">\n        <template slot-scope=\"scope\">\n          <img v-show=\"scope.row.status\" src=\"../../../assets/imgs/icon-yes.svg\"/>\n          <img v-show=\"!scope.row.status\" src=\"../../../assets/imgs/icon-no.svg\"/>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"操作\" min-width=\"30%\" v-if=\"$store.getters.roles.includes('admin')\">\n        <template slot-scope=\"scope\">\n          <el-button type=\"primary\" size=\"small\" @click=\"handleEdit(scope.$index, scope.row)\">编辑</el-button>\n          <el-button type=\"info\" size=\"small\" :loading=\"statusChangeLoading\"\n                     @click=\"handleChangeStatus(scope.$index, scope.row)\">\n            {{scope.row.status===false?'启用':'禁用'}}\n          </el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <!--工具条-->\n    <el-col :span=\"24\" class=\"toolbar\">\n      <el-pagination\n        style=\"float: right\"\n        @size-change=\"handleSizeChange\"\n        @current-change=\"handleCurrentChange\"\n        :page-sizes=\"[10, 20, 40]\"\n        :page-size=\"size\"\n        layout=\"total, sizes, prev, pager, next, jumper\"\n        :total=\"totalNum\">\n      </el-pagination>\n    </el-col>\n\n    <!--Mail编辑界面-->\n    <el-dialog :title=\"titleMap[dialogStatus]\" :visible.sync=\"mailGroupFormVisible\" :close-on-click-modal=\"false\"\n               style=\"width: 70%; left: 15%\">\n      <el-form :model=\"mailGroupForm\" :rules=\"mailGroupFormRules\" ref=\"form\" label-width=\"80px\">\n        <el-form-item label=\"名称\" prop=\"name\">\n          <el-input v-model=\"mailGroupForm.name\" auto-complete=\"off\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"描述\" prop='description'>\n          <el-input type=\"textarea\" :rows=\"3\" v-model=\"mailGroupForm.description\"></el-input>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click.native=\"mailGroupFormVisible = false\">取消</el-button>\n        <el-button type=\"primary\" @click.native=\"submitMailGroup\" :loading=\"editLoading\">提交</el-button>\n      </div>\n    </el-dialog>\n\n    <!--配置界面-->\n    <el-dialog title=\"发件人配置\" :visible.sync=\"configFormVisible\" :close-on-click-modal=\"false\"\n               style=\"width: 70%; left: 15%\">\n      <el-form :model=\"configForm\" label-width=\"120px\" :rules=\"configFormRules\" ref=\"configForm\">\n        <el-form-item label=\"名称\" prop=\"name\">\n          <el-input v-model=\"configForm.name\" auto-complete=\"off\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"发件人邮箱\" prop=\"email\">\n          <el-input v-model.trim=\"configForm.email\" auto-complete=\"off\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"邮箱授权码\" prop='password'>\n          <el-input v-model.trim=\"configForm.password\" auto-complete=\"off\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"SMTP Server\" prop='SMTPServer'>\n          <el-input v-model.trim=\"configForm.SMTPServer\" auto-complete=\"off\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"SMTP Port\" prop='SMTPPort'>\n          <el-input v-model.trim=\"configForm.SMTPPort\" auto-complete=\"off\"></el-input>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button :disabled=\"isMailSenderChecked\" type=\"info\" @click.native=\"testMailSender\"\n                   :loading=\"testMailSenderLoading\">请先验证\n        </el-button>\n        <el-button @click.native=\"configFormVisible = false\">取消</el-button>\n        <el-button type=\"primary\" :disabled=\"!isMailSenderChecked\" @click.native=\"configSubmit\"\n                   :loading=\"configLoading\">提交\n        </el-button>\n      </div>\n    </el-dialog>\n  </section>\n</template>\n\n<script>\n    import {getMailGroups, addMailGroup, updateMailGroup} from \"../../../api/mail\";\n    import {getMailSender, addMailSender, updateMailSender, mailSenderTest} from \"../../../api/mailSender\";\n\n    export default {\n        name: \"MailConfig\",\n        data() {\n            return {\n                filters: {\n                    name: ''\n                },\n                mailGroupList: [],\n                size: 10,\n                skip: 0,\n                sortBy: 'createAt',\n                order: 'descending',\n                pageNum: 1,\n                totalNum: 0,\n                listLoading: false,\n                statusChangeLoading: false,\n                testMailSenderLoading: false,\n                isMailSenderChecked: false,\n                selects: [],//列表选中列\n\n                // mail 编辑dialog\n                titleMap: {\n                    add: '新增',\n                    edit: '编辑'\n                },\n                dialogStatus: '',\n                mailGroupFormVisible: false,//编辑界面是否显示\n                editLoading: false,\n                //编辑界面数据\n                mailGroupForm: {\n                    name: '',\n                    email: '',\n                    description: ''\n                },\n                initForm: {\n                    name: '',\n                    email: '',\n                    description: ''\n                },\n                mailGroupFormRules: {\n                    name: [\n                        {required: true, message: '请输入名称', trigger: 'blur'},\n                        {min: 1, max: 50, message: '长度在 1 到 50 个字符', trigger: 'blur'}\n                    ],\n                    description: [\n                        {required: false, message: '请输入描述', trigger: 'blur'},\n                        {max: 1024, message: '不能超过1024个字符', trigger: 'blur'}\n                    ]\n                },\n                // 发件人Form\n                configFormVisible: false,\n                configLoading: false,\n                //配置界面数据\n                senderMailExisted: false,\n                configForm: {\n                    name: '',\n                    email: '',\n                    password: '',\n                    SMTPServer: 'smtp.qq.com',\n                    SMTPPort: 465\n                },\n                configFormRules: {\n                    name: [\n                        {required: true, message: '请输入名称', trigger: 'blur'},\n                        {min: 1, max: 50, message: '长度在 1 到 50 个字符', trigger: 'blur'}\n                    ],\n                    email: [\n                        {required: true, message: '请输入邮箱地址', trigger: 'blur'},\n                        {type: 'email', message: '请输入正确的邮箱地址', trigger: 'blur'}\n                    ],\n                    password: [\n                        {required: true, message: '请输入邮箱校验码', trigger: 'blur'},\n                        {max: 256, message: '不能超过256个字符', trigger: 'blur'}\n                    ],\n                    SMTPServer: [\n                        {required: true, message: '请输入SMTP Server', trigger: 'blur'},\n                        {max: 50, message: '不能超过50个字符', trigger: 'blur'}\n                    ],\n                    SMTPPort: [\n                        {required: true, message: '请输入SMTP Port', trigger: 'blur'},\n                        {type: 'number', message: '请输入正确的Port', trigger: 'blur'}\n                    ],\n                },\n            }\n        },\n        methods: {\n            queryMailGroupList(params) {\n                let self = this;\n                getMailGroups(params).then((res) => {\n                    let {status, data} = res;\n                    self.listLoading = false;\n                    if (status === 'ok') {\n                        self.totalNum = data.totalNum;\n                        self.mailGroupList = data.rows\n                    } else {\n                        self.$message.error({\n                            message: data,\n                            center: true,\n                        })\n                    }\n                }).catch((error) => {\n                    self.$message.error({\n                        message: '邮件组列表获取失败，请稍后刷新重试哦~',\n                        center: true,\n                    });\n                    self.listLoading = false;\n                });\n            },\n            // 获取Mail列表\n            getMailGroupList() {\n                this.listLoading = true;\n                let self = this;\n                let params = {\n                    size: self.size, skip: self.skip, sortBy: self.sortBy, order: self.order\n                };\n                if (self.filters.name.trim() !== '') {\n                    params['name'] = self.filters.name.trim()\n                }\n                self.queryMailGroupList(params);\n            },\n            handleSizeChange(val) {\n                let self = this;\n                self.size = val;\n                self.listLoading = true;\n                let params = {\n                    size: self.size, skip: self.skip, sortBy: self.sortBy, order: self.order\n                };\n                self.queryMailGroupList(params);\n            },\n            handleCurrentChange(val) {\n                let self = this;\n                self.skip = (val - 1) * self.size;\n                self.listLoading = true;\n                let params = {\n                    size: self.size, skip: self.skip, sortBy: self.sortBy, order: self.order\n                };\n                self.queryMailGroupList(params);\n            },\n            //排序\n            sortChange(column) {\n                let self = this;\n                self.listLoading = true;\n                self.sortBy = column.prop;\n                self.order = column.order;\n                let params = {\n                    size: self.size, skip: self.skip, sortBy: self.sortBy, order: self.order\n                };\n                self.queryMailGroupList(params);\n            },\n            handleChangeStatus: function (index, row) {\n                let self = this;\n                self.statusChangeLoading = true;\n                let status = !row.status;\n                let params = {\n                    'status': status\n                };\n                let headers = {\n                    \"Content-Type\": \"application/json\",\n                };\n                updateMailGroup(row._id, params, headers).then(res => {\n                    let {status, data} = res;\n                    self.statusChangeLoading = false;\n                    if (status === 'ok') {\n                        self.$message({\n                            message: '状态变更成功',\n                            center: true,\n                            type: 'success'\n                        });\n                        row.status = !row.status;\n                    } else {\n                        self.$message.error({\n                            message: data,\n                            center: true,\n                        })\n                    }\n                    self.getMailGroupList()\n                }).catch(() => {\n                    self.$message.error({\n                        message: '邮件组状态更新失败,请稍后重试哦',\n                        center: true\n                    })\n                    self.statusChangeLoading = false;\n                    self.getMailGroupList()\n                });\n            },\n            selectsChange: function (selects) {\n                this.selects = selects;\n            },\n            // 修改table tr行的背景色\n            reportRowStyle({row, rowIndex}) {\n                if (!(row.status === true))\n                    return 'background-color: #DDDDDD'\n                else {\n                    return ''\n                }\n            },\n            ReportTableRow({row, rowIndex}) {\n                return 'reportTableRow';\n            },\n            //显示Mail编辑界面\n            handleEdit: function (index, row) {\n                this.mailGroupFormVisible = true;\n                this.mailGroupForm = Object.assign({}, this.mailGroupForm, row);\n                this.dialogStatus = 'edit'\n            },\n            //显示Mail新增界面\n            handleAdd: function () {\n                this.mailGroupFormVisible = true;\n                this.mailGroupForm = Object.assign({}, this.mailGroupForm, this.initForm);\n                this.dialogStatus = 'add';\n            },\n            //显示配置邮箱界面\n            handleConfig: function () {\n                this.isMailSenderChecked = false;\n                this.configFormVisible = true;\n            },\n            //提交修改\n            submitMailGroup: function () {\n                let self = this;\n                this.$refs.form.validate((valid) => {\n                    if (valid) {\n                        this.$confirm('确认提交吗？', '提示', {}).then(() => {\n                            self.listLoading = true;\n                            let headers = {\n                                \"Content-Type\": \"application/json\",\n                            };\n                            if (this.dialogStatus == 'add') {\n                                let params = {\n                                    name: self.mailGroupForm.name.trim(),\n                                    description: self.mailGroupForm.description.trim(),\n                                    createUser: self.$store.getters.email || 'anonymous'\n                                };\n                                addMailGroup(params, headers).then((res) => {\n                                    let {status, data} = res;\n                                    self.listLoading = false;\n                                    if (status === 'ok') {\n                                        self.$message({\n                                            message: '添加成功',\n                                            center: true,\n                                            type: 'success'\n                                        });\n                                        self.$refs['form'].resetFields();\n                                        self.mailGroupFormVisible = false;\n                                        self.getMailGroupList()\n                                    } else {\n                                        self.$message.error({\n                                            message: data,\n                                            center: true,\n                                        });\n                                        self.$refs['form'].resetFields();\n                                        self.mailGroupFormVisible = false;\n                                        self.getMailGroupList()\n                                    }\n                                })\n                            } else if (this.dialogStatus == 'edit') {\n                                let params = {\n                                    name: self.mailGroupForm.name.trim(),\n                                    email: self.mailGroupForm.email,\n                                    description: self.mailGroupForm.description.trim(),\n                                    lastUpdateUser: self.$store.getters.email || 'anonymous'\n                                };\n                                updateMailGroup(self.mailGroupForm._id, params, headers).then(res => {\n                                    let {status, data} = res;\n                                    self.listLoading = false;\n                                    if (status === 'ok') {\n                                        self.$message({\n                                            message: '修改成功',\n                                            center: true,\n                                            type: 'success'\n                                        });\n                                        self.$refs['form'].resetFields();\n                                        self.mailGroupFormVisible = false;\n                                        self.getMailGroupList()\n                                    } else {\n                                        self.$message.error({\n                                            message: data,\n                                            center: true,\n                                        })\n                                        self.getMailGroupList()\n                                    }\n                                })\n                            } else {\n                                self.$message.error({\n                                    message: \"系统出错\",\n                                    center: true,\n                                });\n                                self.getMailGroupList()\n                            }\n                        });\n                    }\n                });\n            },\n            // 获取MailSender, 一般只配置一个，所以默认取第一个设置form\n            getSender() {\n                this.configLoading = true;\n                let params = {};\n                getMailSender(params).then((res) => {\n                    let {status, data} = res;\n                    this.configLoading = false;\n                    if (status === 'ok') {\n                        if (data.totalNum > 0) {\n                            this.senderMailExisted = true;\n                            this.configForm = data.rows[0];\n                        }\n                    } else {\n                        this.$message.error({\n                            message: data,\n                            center: true,\n                        })\n                    }\n                }).catch((error) => {\n                    this.$message.error({\n                        message: '发件人获取失败，请稍后刷新重试哦~',\n                        center: true,\n                    });\n                    this.configLoading = false;\n                });\n            },\n            testMailSender() {\n                this.testMailSenderLoading = true;\n                let self = this;\n                let params = {\n                    email: self.configForm.email,\n                    password: self.configForm.password,\n                    SMTPServer: self.configForm.SMTPServer,\n                    SMTPPort: self.configForm.SMTPPort\n                };\n                mailSenderTest(params).then((res) => {\n                    let {status, data} = res;\n                    self.testMailSenderLoading = false;\n                    if (status === 'ok') {\n                        self.$message.success({\n                            message: data,\n                            center: true,\n                        });\n                        self.isMailSenderChecked = true;\n                    } else {\n                        self.$message.warning({\n                            message: data,\n                            center: true,\n                        });\n                    }\n                }).catch((error) => {\n                    self.$message.error({\n                        message: '发件人邮箱测试失败，请稍后刷新重试哦~',\n                        center: true,\n                    });\n                    self.testMailSenderLoading = false;\n                });\n            },\n            //配置发件人\n            configSubmit() {\n                this.$refs.configForm.validate((valid) => {\n                    if (valid) {\n                        let self = this;\n                        this.$confirm('确认提交吗？', '提示', {}).then(() => {\n                            self.configLoading = true;\n                            let params = {\n                                name: self.configForm.name.trim(),\n                                email: self.configForm.email,\n                                password: self.configForm.password,\n                                SMTPServer: self.configForm.SMTPServer,\n                                SMTPPort: self.configForm.SMTPPort\n                            };\n                            let header = {\n                                \"Content-Type\": \"application/json\",\n                            };\n                            if (this.senderMailExisted) {\n                                params['lastUpdateUser'] = self.$store.getters.email || 'anonymous'\n                                updateMailSender(this.configForm._id, params, header).then((res) => {\n                                    let {status, data} = res;\n                                    self.configLoading = false;\n                                    if (status === 'ok') {\n                                        self.$message({\n                                            message: '配置成功',\n                                            center: true,\n                                            type: 'success'\n                                        });\n                                        self.$refs['configForm'].resetFields();\n                                        self.configFormVisible = false;\n                                        self.getSender()\n                                    } else {\n                                        self.$message.error({\n                                            message: data,\n                                            center: true,\n                                        });\n                                        self.$refs['configForm'].resetFields();\n                                        self.configFormVisible = false;\n                                        self.getSender()\n                                    }\n                                });\n                            } else {\n                                params['createUser'] = self.$store.getters.email || 'anonymous'\n                                addMailSender(params, header).then((res) => {\n                                    let {status, data} = res;\n                                    self.configLoading = false;\n                                    if (status === 'ok') {\n                                        self.$message({\n                                            message: '配置成功',\n                                            center: true,\n                                            type: 'success'\n                                        });\n                                        self.$refs['configForm'].resetFields();\n                                        self.configFormVisible = false;\n                                        self.getSender()\n                                    } else {\n                                        self.$message.error({\n                                            message: data,\n                                            center: true,\n                                        });\n                                        self.$refs['configForm'].resetFields();\n                                        self.configFormVisible = false;\n                                        self.getSender()\n                                    }\n                                });\n                            }\n                        });\n                    }\n                });\n            },\n        },\n        created() {\n            this.getMailGroupList();\n            this.getSender();\n        }\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n  .title {\n    width: 200px;\n    float: left;\n    color: #475669;\n    font-size: 25px;\n    margin: 10px 5px;\n    font-family: Arial;\n  }\n\n  .return-list {\n    margin-top: 0px;\n    margin-bottom: 10px;\n    margin-left: 20px;\n    border-radius: 25px;\n  }\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/config/mailConfig/MailConfig.vue","import request from '../utils/axios'\n\nexport function getMailSender(params) {\n  return request({\n    url: `/api/mailConfig/mailSenderList`,\n    params: params,\n    method: 'GET'\n  })\n}\n\nexport function addMailSender(params, header) {\n  return request({\n    url: `/api/mailConfig/addMailSender`,\n    method: 'POST',\n    headers: header,\n    data: params\n  })\n}\n\nexport function updateMailSender(sender_id, params, header) {\n  return request({\n    url: `/api/mailConfig/updateMailSender/${sender_id}`,\n    method: 'POST',\n    headers: header,\n    data: params\n  })\n}\n\nexport function mailSenderTest(params) {\n  return request({\n    url: `/api/mailConfig/mailSenderTest`,\n    method: 'POST',\n    data: params\n  })\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/api/mailSender.js","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',[_c('strong',{staticClass:\"title\"},[_vm._v(_vm._s(_vm.$route.meta.title))]),_vm._v(\" \"),_c('el-col',{staticClass:\"toolbar\",staticStyle:{\"padding-bottom\":\"0px\"},attrs:{\"span\":24}},[_c('el-form',{attrs:{\"inline\":true,\"model\":_vm.filters},nativeOn:{\"submit\":function($event){$event.preventDefault();}}},[_c('router-link',{staticStyle:{\"text-decoration\":\"none\",\"color\":\"aliceblue\"},attrs:{\"to\":\"\"}},[_c('el-button',{staticClass:\"return-list\",on:{\"click\":function($event){return _vm.$router.back(-1)}}},[_c('i',{staticClass:\"el-icon-d-arrow-left\",staticStyle:{\"margin-right\":\"5px\"}}),_vm._v(\"返回\\n        \")])],1),_vm._v(\" \"),(_vm.$store.getters.roles.includes('admin'))?_c('el-form-item',{staticStyle:{\"margin-left\":\"35px\"}},[_c('el-button',{staticClass:\"el-icon-plus\",attrs:{\"type\":\"primary\"},on:{\"click\":_vm.handleConfig}},[_vm._v(\"发件人配置\")])],1):_vm._e(),_vm._v(\" \"),(_vm.$store.getters.roles.includes('admin'))?_c('el-form-item',{staticStyle:{\"margin-left\":\"20px\"}},[_c('el-button',{staticClass:\"el-icon-plus\",attrs:{\"type\":\"primary\"},on:{\"click\":_vm.handleAdd}},[_vm._v(\"新增收件人分组\")])],1):_vm._e(),_vm._v(\" \"),_c('div',{staticStyle:{\"float\":\"right\",\"margin-right\":\"95px\"}},[_c('el-form-item',[_c('el-input',{attrs:{\"placeholder\":\"名称\"},nativeOn:{\"keyup\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\")){ return null; }return _vm.getMailGroupList($event)}},model:{value:(_vm.filters.name),callback:function ($$v) {_vm.$set(_vm.filters, \"name\", (typeof $$v === 'string'? $$v.trim(): $$v))},expression:\"filters.name\"}})],1),_vm._v(\" \"),_c('el-form-item',[_c('el-button',{staticClass:\"el-icon-search\",attrs:{\"type\":\"primary\"},on:{\"click\":_vm.getMailGroupList}},[_vm._v(\"查询\")])],1)],1)],1)],1),_vm._v(\" \"),_c('el-table',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.listLoading),expression:\"listLoading\"}],staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.mailGroupList,\"row-style\":_vm.reportRowStyle,\"row-class-name\":_vm.ReportTableRow,\"highlight-current-row\":\"\"},on:{\"sort-change\":_vm.sortChange,\"selection-change\":_vm.selectsChange}},[_c('el-table-column',{attrs:{\"type\":\"selection\",\"min-width\":\"10%\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"name\",\"label\":\"名称\",\"min-width\":\"30%\",\"sortable\":\"custom\",\"show-overflow-tooltip\":\"\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('router-link',{attrs:{\"to\":{name:'MailGroupConfig',params:{mail_group_id: scope.row._id}}}},[_vm._v(\"\\n          \"+_vm._s(scope.row.name)+\"\\n        \")])]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"description\",\"label\":\"描述\",\"min-width\":\"30%\",\"sortable\":\"custom\",\"show-overflow-tooltip\":\"\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"status\",\"label\":\"状态\",\"min-width\":\"30%\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('img',{directives:[{name:\"show\",rawName:\"v-show\",value:(scope.row.status),expression:\"scope.row.status\"}],attrs:{\"src\":require(\"../../../assets/imgs/icon-yes.svg\")}}),_vm._v(\" \"),_c('img',{directives:[{name:\"show\",rawName:\"v-show\",value:(!scope.row.status),expression:\"!scope.row.status\"}],attrs:{\"src\":require(\"../../../assets/imgs/icon-no.svg\")}})]}}])}),_vm._v(\" \"),(_vm.$store.getters.roles.includes('admin'))?_c('el-table-column',{attrs:{\"label\":\"操作\",\"min-width\":\"30%\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"small\"},on:{\"click\":function($event){return _vm.handleEdit(scope.$index, scope.row)}}},[_vm._v(\"编辑\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"info\",\"size\":\"small\",\"loading\":_vm.statusChangeLoading},on:{\"click\":function($event){return _vm.handleChangeStatus(scope.$index, scope.row)}}},[_vm._v(\"\\n          \"+_vm._s(scope.row.status===false?'启用':'禁用')+\"\\n        \")])]}}],null,false,1974325005)}):_vm._e()],1),_vm._v(\" \"),_c('el-col',{staticClass:\"toolbar\",attrs:{\"span\":24}},[_c('el-pagination',{staticStyle:{\"float\":\"right\"},attrs:{\"page-sizes\":[10, 20, 40],\"page-size\":_vm.size,\"layout\":\"total, sizes, prev, pager, next, jumper\",\"total\":_vm.totalNum},on:{\"size-change\":_vm.handleSizeChange,\"current-change\":_vm.handleCurrentChange}})],1),_vm._v(\" \"),_c('el-dialog',{staticStyle:{\"width\":\"70%\",\"left\":\"15%\"},attrs:{\"title\":_vm.titleMap[_vm.dialogStatus],\"visible\":_vm.mailGroupFormVisible,\"close-on-click-modal\":false},on:{\"update:visible\":function($event){_vm.mailGroupFormVisible=$event}}},[_c('el-form',{ref:\"form\",attrs:{\"model\":_vm.mailGroupForm,\"rules\":_vm.mailGroupFormRules,\"label-width\":\"80px\"}},[_c('el-form-item',{attrs:{\"label\":\"名称\",\"prop\":\"name\"}},[_c('el-input',{attrs:{\"auto-complete\":\"off\"},model:{value:(_vm.mailGroupForm.name),callback:function ($$v) {_vm.$set(_vm.mailGroupForm, \"name\", $$v)},expression:\"mailGroupForm.name\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"描述\",\"prop\":\"description\"}},[_c('el-input',{attrs:{\"type\":\"textarea\",\"rows\":3},model:{value:(_vm.mailGroupForm.description),callback:function ($$v) {_vm.$set(_vm.mailGroupForm, \"description\", $$v)},expression:\"mailGroupForm.description\"}})],1)],1),_vm._v(\" \"),_c('div',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{nativeOn:{\"click\":function($event){_vm.mailGroupFormVisible = false}}},[_vm._v(\"取消\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"primary\",\"loading\":_vm.editLoading},nativeOn:{\"click\":function($event){return _vm.submitMailGroup($event)}}},[_vm._v(\"提交\")])],1)],1),_vm._v(\" \"),_c('el-dialog',{staticStyle:{\"width\":\"70%\",\"left\":\"15%\"},attrs:{\"title\":\"发件人配置\",\"visible\":_vm.configFormVisible,\"close-on-click-modal\":false},on:{\"update:visible\":function($event){_vm.configFormVisible=$event}}},[_c('el-form',{ref:\"configForm\",attrs:{\"model\":_vm.configForm,\"label-width\":\"120px\",\"rules\":_vm.configFormRules}},[_c('el-form-item',{attrs:{\"label\":\"名称\",\"prop\":\"name\"}},[_c('el-input',{attrs:{\"auto-complete\":\"off\"},model:{value:(_vm.configForm.name),callback:function ($$v) {_vm.$set(_vm.configForm, \"name\", $$v)},expression:\"configForm.name\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"发件人邮箱\",\"prop\":\"email\"}},[_c('el-input',{attrs:{\"auto-complete\":\"off\"},model:{value:(_vm.configForm.email),callback:function ($$v) {_vm.$set(_vm.configForm, \"email\", (typeof $$v === 'string'? $$v.trim(): $$v))},expression:\"configForm.email\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"邮箱授权码\",\"prop\":\"password\"}},[_c('el-input',{attrs:{\"auto-complete\":\"off\"},model:{value:(_vm.configForm.password),callback:function ($$v) {_vm.$set(_vm.configForm, \"password\", (typeof $$v === 'string'? $$v.trim(): $$v))},expression:\"configForm.password\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"SMTP Server\",\"prop\":\"SMTPServer\"}},[_c('el-input',{attrs:{\"auto-complete\":\"off\"},model:{value:(_vm.configForm.SMTPServer),callback:function ($$v) {_vm.$set(_vm.configForm, \"SMTPServer\", (typeof $$v === 'string'? $$v.trim(): $$v))},expression:\"configForm.SMTPServer\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"SMTP Port\",\"prop\":\"SMTPPort\"}},[_c('el-input',{attrs:{\"auto-complete\":\"off\"},model:{value:(_vm.configForm.SMTPPort),callback:function ($$v) {_vm.$set(_vm.configForm, \"SMTPPort\", (typeof $$v === 'string'? $$v.trim(): $$v))},expression:\"configForm.SMTPPort\"}})],1)],1),_vm._v(\" \"),_c('div',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{attrs:{\"disabled\":_vm.isMailSenderChecked,\"type\":\"info\",\"loading\":_vm.testMailSenderLoading},nativeOn:{\"click\":function($event){return _vm.testMailSender($event)}}},[_vm._v(\"请先验证\\n      \")]),_vm._v(\" \"),_c('el-button',{nativeOn:{\"click\":function($event){_vm.configFormVisible = false}}},[_vm._v(\"取消\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"primary\",\"disabled\":!_vm.isMailSenderChecked,\"loading\":_vm.configLoading},nativeOn:{\"click\":function($event){return _vm.configSubmit($event)}}},[_vm._v(\"提交\\n      \")])],1)],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-320ab9ec\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/config/mailConfig/MailConfig.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-320ab9ec\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!sass-resources-loader?{\\\"resources\\\":\\\"D:\\\\\\\\PycharmProjects\\\\\\\\leo-api-auto\\\\\\\\frontend\\\\\\\\element-variables.scss\\\"}!../../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./MailConfig.vue\")\n}\nvar normalizeComponent = require(\"!../../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./MailConfig.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./MailConfig.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-320ab9ec\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./MailConfig.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-320ab9ec\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/config/mailConfig/MailConfig.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}